//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-30300941
// Cuda compilation tools, release 11.4, V11.4.120
// Based on NVVM 7.0.1
//

.version 7.4
.target sm_86
.address_size 64

	// .globl	_Z14pinhole_camerav
.extern .func  (.param .b32 func_retval0) vprintf
(
	.param .b64 vprintf_param_0,
	.param .b64 vprintf_param_1
)
;
.global .align 4 .b8 eye[12];
.global .align 4 .b8 U[12];
.global .align 4 .b8 V[12];
.global .align 4 .b8 W[12];
.global .align 4 .b8 bad_color[12];
.global .align 4 .b8 bg_color[12];
.global .align 4 .f32 scene_epsilon;
.global .align 4 .f32 z;
.global .align 4 .f32 juli;
.global .align 1 .b8 output_buffer[1];
.global .align 4 .b8 top_object[4];
.global .align 4 .f32 t_hit;
.global .align 8 .b8 launch_index[8];
.global .align 8 .b8 launch_dim[8];
.global .align 4 .b8 shading_normal[12];
.global .align 4 .b8 prd_radiance[60];
.global .align 4 .b8 ray[36];
.global .align 4 .b8 l1[12];
.global .align 4 .f32 fencengshu;
.global .align 4 .f32 maxextent;
.global .align 4 .f32 len;
.global .align 1 .b8 random[1];
.global .align 1 .b8 complex[1];
.global .align 4 .b8 Ka[12];
.global .align 4 .b8 Kd[12];
.global .align 4 .b8 ambient_light_color[12];
.global .align 1 .b8 lights[1];
.global .align 4 .b8 _ZN21rti_internal_typeinfo3eyeE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo1UE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo1VE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo1WE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9bad_colorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8bg_colorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo13scene_epsilonE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo1zE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo4juliE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10top_objectE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo5t_hitE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12launch_indexE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10launch_dimE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14shading_normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12prd_radianceE[8] = {82, 97, 121, 0, 60, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo3rayE[8] = {82, 97, 121, 0, 36, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo2l1E[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10fencengshuE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9maxextentE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo3lenE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo2KaE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo2KdE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo19ambient_light_colorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 1 .b8 _ZN21rti_internal_typename3eyeE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename1UE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename1VE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename1WE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename9bad_colorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename8bg_colorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename13scene_epsilonE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename1zE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename4juliE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename10top_objectE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename5t_hitE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12launch_indexE[6] = {117, 105, 110, 116, 50, 0};
.global .align 1 .b8 _ZN21rti_internal_typename10launch_dimE[6] = {117, 105, 110, 116, 50, 0};
.global .align 1 .b8 _ZN21rti_internal_typename14shading_normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12prd_radianceE[20] = {80, 101, 114, 82, 97, 121, 68, 97, 116, 97, 95, 114, 97, 100, 105, 97, 110, 99, 101, 0};
.global .align 1 .b8 _ZN21rti_internal_typename3rayE[11] = {111, 112, 116, 105, 120, 58, 58, 82, 97, 121, 0};
.global .align 1 .b8 _ZN21rti_internal_typename2l1E[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename10fencengshuE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename9maxextentE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename3lenE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename2KaE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename2KdE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename19ambient_light_colorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum3eyeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum1UE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum1VE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum1WE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9bad_colorE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8bg_colorE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum13scene_epsilonE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum1zE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum4juliE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10top_objectE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum5t_hitE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12launch_indexE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10launch_dimE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14shading_normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12prd_radianceE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum3rayE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum2l1E = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10fencengshuE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9maxextentE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum3lenE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum2KaE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum2KdE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum19ambient_light_colorE = 4919;
.global .align 1 .b8 _ZN21rti_internal_semantic3eyeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic1UE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic1VE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic1WE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9bad_colorE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8bg_colorE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic13scene_epsilonE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic1zE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic4juliE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic10top_objectE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic5t_hitE[23] = {114, 116, 73, 110, 116, 101, 114, 115, 101, 99, 116, 105, 111, 110, 68, 105, 115, 116, 97, 110, 99, 101, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic12launch_indexE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic10launch_dimE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic14shading_normalE[25] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 115, 104, 97, 100, 105, 110, 103, 95, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic12prd_radianceE[10] = {114, 116, 80, 97, 121, 108, 111, 97, 100, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic3rayE[13] = {114, 116, 67, 117, 114, 114, 101, 110, 116, 82, 97, 121, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic2l1E[1];
.global .align 1 .b8 _ZN21rti_internal_semantic10fencengshuE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9maxextentE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic3lenE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic2KaE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic2KdE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic19ambient_light_colorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3eyeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation1UE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation1VE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation1WE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9bad_colorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8bg_colorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation13scene_epsilonE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation1zE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation4juliE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10top_objectE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation5t_hitE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12launch_indexE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10launch_dimE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14shading_normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12prd_radianceE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3rayE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation2l1E[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10fencengshuE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9maxextentE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3lenE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation2KaE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation2KdE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation19ambient_light_colorE[1];
.global .align 1 .b8 $str[64] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 83, 84, 65, 67, 75, 95, 79, 86, 69, 82, 70, 76, 79, 87, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};
.global .align 1 .b8 $str$1[70] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 84, 82, 65, 67, 69, 95, 68, 69, 80, 84, 72, 95, 69, 88, 67, 69, 69, 68, 69, 68, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};
.global .align 1 .b8 $str$2[236] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 66, 85, 70, 70, 69, 82, 95, 73, 78, 68, 69, 88, 95, 79, 85, 84, 95, 79, 70, 95, 66, 79, 85, 78, 68, 83, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 100, 105, 109, 101, 110, 115, 105, 111, 110, 97, 108, 105, 116, 121, 32, 58, 32, 37, 100, 10, 32, 32, 98, 117, 102, 102, 101, 114, 32, 100, 101, 116, 97, 105, 108, 115, 32, 58, 32, 37, 115, 10, 32, 32, 98, 117, 102, 102, 101, 114, 32, 73, 68, 32, 32, 32, 32, 32, 32, 58, 32, 37, 100, 10, 32, 32, 115, 105, 122, 101, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 108, 108, 100, 120, 37, 108, 108, 100, 120, 37, 108, 108, 100, 10, 32, 32, 101, 108, 101, 109, 101, 110, 116, 32, 115, 105, 122, 101, 32, 32, 32, 58, 32, 37, 100, 10, 32, 32, 97, 99, 99, 101, 115, 115, 101, 100, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 108, 108, 100, 44, 32, 37, 108, 108, 100, 44, 32, 37, 108, 108, 100, 10, 0};
.global .align 1 .b8 $str$3[138] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 80, 82, 79, 71, 82, 65, 77, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 32, 32, 112, 114, 111, 103, 114, 97, 109, 32, 73, 68, 32, 101, 113, 117, 97, 108, 32, 116, 111, 32, 82, 84, 95, 80, 82, 79, 71, 82, 65, 77, 95, 73, 68, 95, 78, 85, 76, 76, 32, 117, 115, 101, 100, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 108, 111, 99, 97, 116, 105, 111, 110, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 115, 10, 0};
.global .align 1 .b8 $str$4[148] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 80, 82, 79, 71, 82, 65, 77, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 32, 32, 112, 114, 111, 103, 114, 97, 109, 32, 73, 68, 32, 40, 37, 100, 41, 32, 105, 115, 32, 110, 111, 116, 32, 105, 110, 32, 116, 104, 101, 32, 118, 97, 108, 105, 100, 32, 114, 97, 110, 103, 101, 32, 111, 102, 32, 91, 49, 44, 115, 105, 122, 101, 41, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 108, 111, 99, 97, 116, 105, 111, 110, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 115, 10, 0};
.global .align 1 .b8 $str$5[136] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 80, 82, 79, 71, 82, 65, 77, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 32, 32, 112, 114, 111, 103, 114, 97, 109, 32, 73, 68, 32, 40, 37, 100, 41, 32, 111, 102, 32, 97, 32, 100, 101, 108, 101, 116, 101, 100, 32, 112, 114, 111, 103, 114, 97, 109, 32, 117, 115, 101, 100, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 108, 111, 99, 97, 116, 105, 111, 110, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 115, 10, 0};
.global .align 1 .b8 $str$6[98] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 84, 69, 88, 84, 85, 82, 69, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 32, 32, 116, 101, 120, 116, 117, 114, 101, 32, 73, 68, 32, 105, 115, 32, 105, 110, 118, 97, 108, 105, 100, 32, 40, 48, 41, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};
.global .align 1 .b8 $str$7[126] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 84, 69, 88, 84, 85, 82, 69, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 32, 32, 116, 101, 120, 116, 117, 114, 101, 32, 73, 68, 32, 40, 37, 100, 41, 32, 105, 115, 32, 110, 111, 116, 32, 105, 110, 32, 116, 104, 101, 32, 118, 97, 108, 105, 100, 32, 114, 97, 110, 103, 101, 32, 111, 102, 32, 91, 49, 44, 115, 105, 122, 101, 41, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};
.global .align 1 .b8 $str$8[99] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 84, 69, 88, 84, 85, 82, 69, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 32, 32, 116, 101, 120, 116, 117, 114, 101, 32, 73, 68, 32, 105, 115, 32, 105, 110, 118, 97, 108, 105, 100, 32, 40, 45, 49, 41, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};
.global .align 1 .b8 $str$9[135] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 66, 85, 70, 70, 69, 82, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 32, 32, 98, 117, 102, 102, 101, 114, 32, 73, 68, 32, 101, 113, 117, 97, 108, 32, 116, 111, 32, 82, 84, 95, 66, 85, 70, 70, 69, 82, 95, 73, 68, 95, 78, 85, 76, 76, 32, 117, 115, 101, 100, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 108, 111, 99, 97, 116, 105, 111, 110, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 115, 10, 0};
.global .align 1 .b8 $str$10[94] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 66, 85, 70, 70, 69, 82, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 32, 32, 98, 117, 102, 102, 101, 114, 32, 73, 68, 32, 40, 37, 100, 41, 32, 105, 115, 32, 110, 111, 116, 32, 105, 110, 32, 116, 104, 101, 32, 118, 97, 108, 105, 100, 32, 114, 97, 110, 103, 101, 32, 111, 102, 32, 91, 49, 44, 115, 105, 122, 101, 41, 10, 0};
.global .align 1 .b8 $str$11[53] = {32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 108, 111, 99, 97, 116, 105, 111, 110, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 115, 10, 0};
.global .align 1 .b8 $str$12[133] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 66, 85, 70, 70, 69, 82, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 32, 32, 98, 117, 102, 102, 101, 114, 32, 73, 68, 32, 40, 37, 100, 41, 32, 111, 102, 32, 97, 32, 100, 101, 108, 101, 116, 101, 100, 32, 98, 117, 102, 102, 101, 114, 32, 117, 115, 101, 100, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 108, 111, 99, 97, 116, 105, 111, 110, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 115, 10, 0};
.global .align 1 .b8 $str$13[141] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 73, 78, 68, 69, 88, 95, 79, 85, 84, 95, 79, 70, 95, 66, 79, 85, 78, 68, 83, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 108, 111, 99, 97, 116, 105, 111, 110, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 115, 10, 32, 32, 115, 105, 122, 101, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 108, 108, 100, 10, 32, 32, 97, 99, 99, 101, 115, 115, 101, 100, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 108, 108, 100, 10, 0};
.global .align 1 .b8 $str$14[200] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 73, 78, 86, 65, 76, 73, 68, 95, 82, 65, 89, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 108, 111, 99, 97, 116, 105, 111, 110, 32, 32, 32, 32, 32, 32, 58, 32, 37, 115, 10, 32, 32, 114, 97, 121, 32, 111, 114, 105, 103, 105, 110, 32, 32, 32, 32, 58, 32, 37, 102, 32, 37, 102, 32, 37, 102, 10, 32, 32, 114, 97, 121, 32, 100, 105, 114, 101, 99, 116, 105, 111, 110, 32, 58, 32, 37, 102, 32, 37, 102, 32, 37, 102, 10, 32, 32, 114, 97, 121, 32, 116, 121, 112, 101, 32, 32, 32, 32, 32, 32, 58, 32, 37, 100, 10, 32, 32, 114, 97, 121, 32, 116, 109, 105, 110, 32, 32, 32, 32, 32, 32, 58, 32, 37, 102, 10, 32, 32, 114, 97, 121, 32, 116, 109, 97, 120, 32, 32, 32, 32, 32, 32, 58, 32, 37, 102, 10, 0};
.global .align 1 .b8 $str$15[164] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 80, 65, 89, 76, 79, 65, 68, 95, 65, 67, 67, 69, 83, 83, 95, 79, 85, 84, 95, 79, 70, 95, 66, 79, 85, 78, 68, 83, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 108, 111, 99, 97, 116, 105, 111, 110, 32, 32, 32, 32, 32, 58, 32, 37, 115, 10, 32, 32, 118, 97, 108, 117, 101, 32, 111, 102, 102, 115, 101, 116, 32, 58, 32, 37, 108, 108, 100, 10, 32, 32, 118, 97, 108, 117, 101, 32, 115, 105, 122, 101, 32, 32, 32, 58, 32, 37, 108, 108, 100, 10, 32, 32, 112, 97, 121, 108, 111, 97, 100, 32, 115, 105, 122, 101, 32, 58, 32, 37, 108, 108, 100, 10, 0};
.global .align 1 .b8 $str$16[123] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 85, 83, 69, 82, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 67, 79, 68, 69, 95, 79, 85, 84, 95, 79, 70, 95, 66, 79, 85, 78, 68, 83, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 108, 111, 99, 97, 116, 105, 111, 110, 32, 32, 32, 32, 32, 58, 32, 37, 115, 10, 32, 32, 99, 111, 100, 101, 32, 32, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 100, 10, 0};
.global .align 1 .b8 $str$17[57] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 85, 83, 69, 82, 43, 37, 100, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};
.global .align 1 .b8 $str$18[64] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 73, 78, 84, 69, 82, 78, 65, 76, 95, 69, 82, 82, 79, 82, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};
.global .align 1 .b8 $str$19[54] = {67, 97, 117, 103, 104, 116, 32, 117, 110, 107, 110, 111, 119, 110, 32, 101, 120, 99, 101, 112, 116, 105, 111, 110, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};
.global .align 4 .b8 __cudart_i2opi_f[24] = {65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};

.visible .entry _Z14pinhole_camerav()
{
	.local .align 4 .b8 	__local_depot0[88];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<69>;
	.reg .f32 	%f<330>;
	.reg .b32 	%r<384>;
	.reg .f64 	%fd<69>;
	.reg .b64 	%rd<174>;


	mov.u64 	%SPL, __local_depot0;
	cvta.local.u64 	%SP, %SPL;
	add.u64 	%rd1, %SPL, 0;
	add.u64 	%rd44, %SP, 28;
	add.u64 	%rd46, %SPL, 28;
	ld.global.v2.u32 	{%r132, %r133}, [launch_index];
	mov.u32 	%r380, 0;
	cvt.rn.f32.u32 	%f90, %r132;
	cvt.rn.f32.u32 	%f91, %r133;
	ld.global.v2.u32 	{%r136, %r137}, [launch_dim];
	cvt.rn.f32.u32 	%f92, %r136;
	cvt.rn.f32.u32 	%f93, %r137;
	div.rn.f32 	%f94, %f90, %f92;
	div.rn.f32 	%f95, %f91, %f93;
	fma.rn.f32 	%f96, %f94, 0f40000000, 0fBF800000;
	fma.rn.f32 	%f97, %f95, 0f40000000, 0fBF800000;
	ld.global.f32 	%f82, [eye];
	ld.global.f32 	%f83, [eye+4];
	ld.global.f32 	%f84, [eye+8];
	ld.global.f32 	%f98, [U];
	ld.global.f32 	%f99, [U+4];
	ld.global.f32 	%f100, [U+8];
	ld.global.f32 	%f101, [V];
	mul.f32 	%f102, %f101, %f97;
	ld.global.f32 	%f103, [V+4];
	mul.f32 	%f104, %f103, %f97;
	ld.global.f32 	%f105, [V+8];
	mul.f32 	%f106, %f105, %f97;
	fma.rn.f32 	%f107, %f98, %f96, %f102;
	fma.rn.f32 	%f108, %f99, %f96, %f104;
	fma.rn.f32 	%f109, %f100, %f96, %f106;
	ld.global.f32 	%f110, [W];
	add.f32 	%f111, %f110, %f107;
	ld.global.f32 	%f112, [W+4];
	add.f32 	%f113, %f112, %f108;
	ld.global.f32 	%f114, [W+8];
	add.f32 	%f115, %f114, %f109;
	mul.f32 	%f116, %f113, %f113;
	fma.rn.f32 	%f117, %f111, %f111, %f116;
	fma.rn.f32 	%f118, %f115, %f115, %f117;
	sqrt.rn.f32 	%f119, %f118;
	rcp.rn.f32 	%f120, %f119;
	mov.u32 	%r140, 1065353216;
	mul.f32 	%f85, %f120, %f111;
	mul.f32 	%f86, %f120, %f113;
	mul.f32 	%f87, %f120, %f115;
	ld.global.f32 	%f88, [scene_epsilon];
	add.s64 	%rd2, %rd46, 36;
	st.local.u32 	[%rd46+36], %r140;
	st.local.u32 	[%rd46+52], %r380;
	st.local.u32 	[%rd46+40], %r380;
	st.local.u32 	[%rd46+44], %r380;
	st.local.u32 	[%rd46+48], %r380;
	st.local.u32 	[%rd46+56], %r380;
	ld.global.u32 	%r127, [top_object];
	mov.f32 	%f89, 0f6C4ECB8F;
	mov.u32 	%r129, 255;
	mov.u32 	%r131, 60;
	// begin inline asm
	call _rt_trace_mask_flags_64, (%r127, %f82, %f83, %f84, %f85, %f86, %f87, %r380, %f88, %f89, %r129, %r380, %rd44, %r131);
	// end inline asm
	ld.global.v2.u32 	{%r141, %r142}, [launch_index];
	ld.global.f32 	%f311, [fencengshu];
	setp.leu.f32 	%p1, %f311, 0f00000000;
	mov.u32 	%r358, %r141;
	mov.u32 	%r359, %r142;
	@%p1 bra 	$L__BB0_4;

	cvt.u64.u32 	%rd3, %r141;
	cvt.u64.u32 	%rd4, %r142;
	mov.u32 	%r357, 0;

$L__BB0_2:
	cvt.u64.u32 	%rd51, %r357;
	mov.u64 	%rd53, complex;
	cvta.global.u64 	%rd48, %rd53;
	mov.u32 	%r144, 3;
	mov.u32 	%r145, 8;
	mov.u64 	%rd52, 0;
	// begin inline asm
	call (%rd47), _rt_buffer_get_64, (%rd48, %r144, %r145, %rd3, %rd4, %rd51, %rd52);
	// end inline asm
	mov.f32 	%f121, 0f00000000;
	add.s32 	%r357, %r357, 1;
	cvt.rn.f32.s32 	%f122, %r357;
	st.v2.f32 	[%rd47], {%f121, %f121};
	ld.global.f32 	%f311, [fencengshu];
	setp.gt.f32 	%p2, %f311, %f122;
	@%p2 bra 	$L__BB0_2;

	ld.global.v2.u32 	{%r358, %r359}, [launch_index];

$L__BB0_4:
	ld.global.v2.u32 	{%r148, %r149}, [launch_dim];
	shr.u32 	%r150, %r148, 1;
	sub.s32 	%r17, %r358, %r150;
	shr.u32 	%r151, %r149, 1;
	sub.s32 	%r18, %r359, %r151;
	ld.local.f32 	%f4, [%rd2+16];
	setp.leu.f32 	%p3, %f4, 0f3DCCCCCD;
	@%p3 bra 	$L__BB0_31;

	mov.u64 	%rd161, 0;
	ld.global.f32 	%f123, [len];
	sub.f32 	%f124, %f4, %f123;
	ld.global.f32 	%f125, [maxextent];
	fma.rn.f32 	%f126, %f125, 0f3F000000, %f124;
	div.rn.f32 	%f127, %f126, %f125;
	mul.f32 	%f128, %f311, %f127;
	cvt.rmi.f32.f32 	%f5, %f128;
	ld.global.f32 	%f129, [juli];
	ld.global.f32 	%f130, [z];
	fma.rn.f32 	%f131, %f5, %f129, %f130;
	cvt.f64.f32 	%fd4, %f131;
	mul.f64 	%fd5, %fd4, 0d3F44F0520D130DFA;
	cvt.rn.f64.u32 	%fd6, %r148;
	div.rn.f64 	%fd7, %fd5, %fd6;
	div.rn.f64 	%fd8, %fd7, 0d3F80624DD2F1A9FC;
	cvt.rn.f32.f64 	%f132, %fd8;
	cvt.rn.f64.u32 	%fd9, %r149;
	div.rn.f64 	%fd10, %fd5, %fd9;
	div.rn.f64 	%fd11, %fd10, 0d3F80624DD2F1A9FC;
	cvt.rn.f32.f64 	%f133, %fd11;
	ld.local.f32 	%f134, [%rd2+-36];
	cvt.f64.f32 	%fd12, %f134;
	ld.local.f32 	%f135, [%rd2+-32];
	cvt.f64.f32 	%fd13, %f135;
	mul.f64 	%fd14, %fd13, 0d3FE2E147AE147AE1;
	fma.rn.f64 	%fd15, %fd12, 0d3FD3333333333333, %fd14;
	ld.local.f32 	%f136, [%rd2+-28];
	cvt.f64.f32 	%fd16, %f136;
	fma.rn.f64 	%fd1, %fd16, 0d3FBC28F5C28F5C29, %fd15;
	mov.f64 	%fd17, 0d40B3346B9BAEE9CE;
	div.rn.f64 	%fd18, %fd17, %fd4;
	cvt.rn.f32.s32 	%f137, %r17;
	mul.f32 	%f138, %f137, %f132;
	mul.f32 	%f139, %f138, %f137;
	cvt.rn.f32.s32 	%f140, %r18;
	mul.f32 	%f141, %f140, %f133;
	mul.f32 	%f142, %f141, %f140;
	mul.f32 	%f143, %f142, %f133;
	fma.rn.f32 	%f144, %f139, %f132, %f143;
	cvt.u64.u32 	%rd56, %r358;
	cvt.u64.u32 	%rd57, %r359;
	mov.u64 	%rd60, random;
	cvta.global.u64 	%rd55, %rd60;
	mov.u32 	%r152, 2;
	mov.u32 	%r153, 4;
	// begin inline asm
	call (%rd54), _rt_buffer_get_64, (%rd55, %r152, %r153, %rd56, %rd57, %rd161, %rd161);
	// end inline asm
	ld.f32 	%f145, [%rd54];
	add.f32 	%f146, %f145, %f144;
	cvt.f64.f32 	%fd19, %f146;
	mul.f64 	%fd20, %fd18, %fd19;
	cvt.rn.f32.f64 	%f6, %fd20;
	ld.global.f32 	%f147, [fencengshu];
	setp.geu.f32 	%p4, %f5, %f147;
	@%p4 bra 	$L__BB0_31;

	cvt.rzi.u32.f32 	%r156, %f5;
	cvt.u64.u32 	%rd65, %r156;
	cvt.u64.u32 	%rd64, %r142;
	cvt.u64.u32 	%rd63, %r141;
	mov.u64 	%rd67, complex;
	cvta.global.u64 	%rd62, %rd67;
	mov.u32 	%r154, 3;
	mov.u32 	%r155, 8;
	// begin inline asm
	call (%rd61), _rt_buffer_get_64, (%rd62, %r154, %r155, %rd63, %rd64, %rd65, %rd161);
	// end inline asm
	mul.f32 	%f148, %f6, 0f3F22F983;
	cvt.rni.s32.f32 	%r367, %f148;
	cvt.rn.f32.s32 	%f149, %r367;
	mov.f32 	%f150, 0fBFC90FDA;
	fma.rn.f32 	%f151, %f149, %f150, %f6;
	mov.f32 	%f152, 0fB3A22168;
	fma.rn.f32 	%f153, %f149, %f152, %f151;
	mov.f32 	%f154, 0fA7C234C5;
	fma.rn.f32 	%f315, %f149, %f154, %f153;
	abs.f32 	%f8, %f6;
	setp.leu.f32 	%p5, %f8, 0f47CE4780;
	mov.u32 	%r363, %r367;
	mov.f32 	%f312, %f315;
	@%p5 bra 	$L__BB0_14;

	setp.eq.f32 	%p6, %f8, 0f7F800000;
	@%p6 bra 	$L__BB0_13;
	bra.uni 	$L__BB0_8;

$L__BB0_13:
	mov.f32 	%f157, 0f00000000;
	mul.rn.f32 	%f312, %f6, %f157;
	mov.u32 	%r363, %r367;
	bra.uni 	$L__BB0_14;

$L__BB0_8:
	mov.b32 	%r20, %f6;
	bfe.u32 	%r158, %r20, 23, 8;
	add.s32 	%r21, %r158, -128;
	shl.b32 	%r159, %r20, 8;
	or.b32  	%r22, %r159, -2147483648;
	shr.u32 	%r23, %r21, 5;
	mov.u64 	%rd158, 0;
	mov.u32 	%r360, 0;
	mov.u64 	%rd156, __cudart_i2opi_f;
	mov.u64 	%rd157, %rd1;

$L__BB0_9:
	.pragma "nounroll";
	ld.global.nc.u32 	%r160, [%rd156];
	mad.wide.u32 	%rd70, %r160, %r22, %rd158;
	shr.u64 	%rd158, %rd70, 32;
	st.local.u32 	[%rd157], %rd70;
	add.s64 	%rd157, %rd157, 4;
	add.s64 	%rd156, %rd156, 4;
	add.s32 	%r360, %r360, 1;
	setp.ne.s32 	%p7, %r360, 6;
	@%p7 bra 	$L__BB0_9;

	st.local.u32 	[%rd1+24], %rd158;
	sub.s32 	%r26, %r153, %r23;
	mov.u32 	%r162, 6;
	sub.s32 	%r163, %r162, %r23;
	mul.wide.s32 	%rd71, %r163, 4;
	add.s64 	%rd72, %rd1, %rd71;
	ld.local.u32 	%r361, [%rd72];
	ld.local.u32 	%r362, [%rd72+-4];
	and.b32  	%r29, %r21, 31;
	setp.eq.s32 	%p8, %r29, 0;
	@%p8 bra 	$L__BB0_12;

	mov.u32 	%r164, 32;
	sub.s32 	%r165, %r164, %r29;
	shr.u32 	%r166, %r362, %r165;
	shl.b32 	%r167, %r361, %r29;
	add.s32 	%r361, %r166, %r167;
	mul.wide.s32 	%rd73, %r26, 4;
	add.s64 	%rd74, %rd1, %rd73;
	ld.local.u32 	%r168, [%rd74];
	shr.u32 	%r169, %r168, %r165;
	shl.b32 	%r170, %r362, %r29;
	add.s32 	%r362, %r169, %r170;

$L__BB0_12:
	and.b32  	%r171, %r20, -2147483648;
	shr.u32 	%r172, %r362, 30;
	shl.b32 	%r173, %r361, 2;
	or.b32  	%r174, %r172, %r173;
	shr.u32 	%r175, %r174, 31;
	shr.u32 	%r176, %r361, 30;
	add.s32 	%r177, %r175, %r176;
	neg.s32 	%r178, %r177;
	setp.eq.s32 	%p9, %r171, 0;
	selp.b32 	%r363, %r177, %r178, %p9;
	setp.ne.s32 	%p10, %r175, 0;
	xor.b32  	%r179, %r171, -2147483648;
	selp.b32 	%r180, %r179, %r171, %p10;
	selp.b32 	%r181, -1, 0, %p10;
	xor.b32  	%r182, %r174, %r181;
	shl.b32 	%r183, %r362, 2;
	xor.b32  	%r184, %r183, %r181;
	cvt.u64.u32 	%rd75, %r182;
	cvt.u64.u32 	%rd76, %r184;
	bfi.b64 	%rd77, %rd75, %rd76, 32, 32;
	cvt.rn.f64.s64 	%fd21, %rd77;
	mul.f64 	%fd22, %fd21, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f155, %fd22;
	setp.eq.s32 	%p11, %r180, 0;
	neg.f32 	%f156, %f155;
	selp.f32 	%f312, %f155, %f156, %p11;

$L__BB0_14:
	cvt.rn.f32.f64 	%f12, %fd1;
	add.s32 	%r36, %r363, 1;
	and.b32  	%r37, %r36, 1;
	setp.eq.s32 	%p12, %r37, 0;
	selp.f32 	%f13, %f312, 0f3F800000, %p12;
	mul.rn.f32 	%f14, %f312, %f312;
	mov.f32 	%f313, 0fB94D4153;
	@%p12 bra 	$L__BB0_16;

	mov.f32 	%f159, 0fBAB607ED;
	mov.f32 	%f160, 0f37CBAC00;
	fma.rn.f32 	%f313, %f160, %f14, %f159;

$L__BB0_16:
	selp.f32 	%f161, 0f3C0885E4, 0f3D2AAABB, %p12;
	fma.rn.f32 	%f162, %f313, %f14, %f161;
	selp.f32 	%f163, 0fBE2AAAA8, 0fBEFFFFFF, %p12;
	fma.rn.f32 	%f164, %f162, %f14, %f163;
	mov.f32 	%f165, 0f00000000;
	fma.rn.f32 	%f166, %f14, %f13, %f165;
	fma.rn.f32 	%f314, %f164, %f166, %f13;
	and.b32  	%r185, %r36, 2;
	setp.eq.s32 	%p14, %r185, 0;
	@%p14 bra 	$L__BB0_18;

	mov.f32 	%f168, 0fBF800000;
	fma.rn.f32 	%f314, %f314, %f168, %f165;

$L__BB0_18:
	@%p5 bra 	$L__BB0_26;

	setp.eq.f32 	%p16, %f8, 0f7F800000;
	@%p16 bra 	$L__BB0_25;
	bra.uni 	$L__BB0_20;

$L__BB0_25:
	mul.rn.f32 	%f315, %f6, %f165;
	bra.uni 	$L__BB0_26;

$L__BB0_20:
	mov.b32 	%r38, %f6;
	bfe.u32 	%r187, %r38, 23, 8;
	add.s32 	%r39, %r187, -128;
	shl.b32 	%r188, %r38, 8;
	or.b32  	%r40, %r188, -2147483648;
	shr.u32 	%r41, %r39, 5;
	mov.u32 	%r364, 0;
	mov.u64 	%rd159, __cudart_i2opi_f;
	mov.u64 	%rd160, %rd1;

$L__BB0_21:
	.pragma "nounroll";
	ld.global.nc.u32 	%r189, [%rd159];
	mad.wide.u32 	%rd80, %r189, %r40, %rd161;
	shr.u64 	%rd161, %rd80, 32;
	st.local.u32 	[%rd160], %rd80;
	add.s64 	%rd160, %rd160, 4;
	add.s64 	%rd159, %rd159, 4;
	add.s32 	%r364, %r364, 1;
	setp.ne.s32 	%p17, %r364, 6;
	@%p17 bra 	$L__BB0_21;

	st.local.u32 	[%rd1+24], %rd161;
	sub.s32 	%r44, %r153, %r41;
	mov.u32 	%r191, 6;
	sub.s32 	%r192, %r191, %r41;
	mul.wide.s32 	%rd81, %r192, 4;
	add.s64 	%rd82, %rd1, %rd81;
	ld.local.u32 	%r365, [%rd82];
	ld.local.u32 	%r366, [%rd82+-4];
	and.b32  	%r47, %r39, 31;
	setp.eq.s32 	%p18, %r47, 0;
	@%p18 bra 	$L__BB0_24;

	mov.u32 	%r193, 32;
	sub.s32 	%r194, %r193, %r47;
	shr.u32 	%r195, %r366, %r194;
	shl.b32 	%r196, %r365, %r47;
	add.s32 	%r365, %r195, %r196;
	mul.wide.s32 	%rd83, %r44, 4;
	add.s64 	%rd84, %rd1, %rd83;
	ld.local.u32 	%r197, [%rd84];
	shr.u32 	%r198, %r197, %r194;
	shl.b32 	%r199, %r366, %r47;
	add.s32 	%r366, %r198, %r199;

$L__BB0_24:
	and.b32  	%r200, %r38, -2147483648;
	shr.u32 	%r201, %r366, 30;
	shl.b32 	%r202, %r365, 2;
	or.b32  	%r203, %r201, %r202;
	shr.u32 	%r204, %r203, 31;
	shr.u32 	%r205, %r365, 30;
	add.s32 	%r206, %r204, %r205;
	neg.s32 	%r207, %r206;
	setp.eq.s32 	%p19, %r200, 0;
	selp.b32 	%r367, %r206, %r207, %p19;
	setp.ne.s32 	%p20, %r204, 0;
	xor.b32  	%r208, %r200, -2147483648;
	selp.b32 	%r209, %r208, %r200, %p20;
	selp.b32 	%r210, -1, 0, %p20;
	xor.b32  	%r211, %r203, %r210;
	shl.b32 	%r212, %r366, 2;
	xor.b32  	%r213, %r212, %r210;
	cvt.u64.u32 	%rd85, %r211;
	cvt.u64.u32 	%rd86, %r213;
	bfi.b64 	%rd87, %rd85, %rd86, 32, 32;
	cvt.rn.f64.s64 	%fd23, %rd87;
	mul.f64 	%fd24, %fd23, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f169, %fd24;
	setp.eq.s32 	%p21, %r209, 0;
	neg.f32 	%f170, %f169;
	selp.f32 	%f315, %f169, %f170, %p21;

$L__BB0_26:
	and.b32  	%r54, %r367, 1;
	setp.eq.s32 	%p22, %r54, 0;
	selp.f32 	%f23, %f315, 0f3F800000, %p22;
	mul.rn.f32 	%f24, %f315, %f315;
	mov.f32 	%f316, 0fB94D4153;
	@%p22 bra 	$L__BB0_28;

	mov.f32 	%f173, 0fBAB607ED;
	mov.f32 	%f174, 0f37CBAC00;
	fma.rn.f32 	%f316, %f174, %f24, %f173;

$L__BB0_28:
	selp.f32 	%f175, 0f3C0885E4, 0f3D2AAABB, %p22;
	fma.rn.f32 	%f176, %f316, %f24, %f175;
	selp.f32 	%f177, 0fBE2AAAA8, 0fBEFFFFFF, %p22;
	fma.rn.f32 	%f178, %f176, %f24, %f177;
	fma.rn.f32 	%f180, %f24, %f23, %f165;
	fma.rn.f32 	%f317, %f178, %f180, %f23;
	and.b32  	%r214, %r367, 2;
	setp.eq.s32 	%p24, %r214, 0;
	@%p24 bra 	$L__BB0_30;

	mov.f32 	%f182, 0fBF800000;
	fma.rn.f32 	%f317, %f317, %f182, %f165;

$L__BB0_30:
	mul.f32 	%f183, %f317, %f12;
	mul.f32 	%f184, %f314, %f12;
	st.v2.f32 	[%rd61], {%f184, %f183};

$L__BB0_31:
	ld.local.f32 	%f30, [%rd2+8];
	setp.leu.f32 	%p25, %f30, 0f3DCCCCCD;
	@%p25 bra 	$L__BB0_58;

	mov.u64 	%rd167, 0;
	ld.global.f32 	%f185, [len];
	sub.f32 	%f186, %f30, %f185;
	ld.global.f32 	%f187, [maxextent];
	fma.rn.f32 	%f188, %f187, 0f3F000000, %f186;
	div.rn.f32 	%f189, %f188, %f187;
	ld.global.f32 	%f190, [fencengshu];
	mul.f32 	%f191, %f190, %f189;
	cvt.rmi.f32.f32 	%f31, %f191;
	ld.global.f32 	%f192, [juli];
	ld.global.f32 	%f193, [z];
	fma.rn.f32 	%f194, %f31, %f192, %f193;
	cvt.f64.f32 	%fd25, %f194;
	mul.f64 	%fd26, %fd25, 0d3F44F0520D130DFA;
	ld.global.v2.u32 	{%r217, %r218}, [launch_dim];
	cvt.rn.f64.u32 	%fd27, %r217;
	div.rn.f64 	%fd28, %fd26, %fd27;
	div.rn.f64 	%fd29, %fd28, 0d3F80624DD2F1A9FC;
	cvt.rn.f32.f64 	%f195, %fd29;
	cvt.rn.f64.u32 	%fd30, %r218;
	div.rn.f64 	%fd31, %fd26, %fd30;
	div.rn.f64 	%fd32, %fd31, 0d3F80624DD2F1A9FC;
	cvt.rn.f32.f64 	%f196, %fd32;
	ld.local.f32 	%f197, [%rd2+-24];
	cvt.f64.f32 	%fd33, %f197;
	ld.local.f32 	%f198, [%rd2+-20];
	cvt.f64.f32 	%fd34, %f198;
	mul.f64 	%fd35, %fd34, 0d3FE2E147AE147AE1;
	fma.rn.f64 	%fd36, %fd33, 0d3FD3333333333333, %fd35;
	ld.local.f32 	%f199, [%rd2+-16];
	cvt.f64.f32 	%fd37, %f199;
	fma.rn.f64 	%fd2, %fd37, 0d3FBC28F5C28F5C29, %fd36;
	mov.f64 	%fd38, 0d40B3346B9BAEE9CE;
	div.rn.f64 	%fd39, %fd38, %fd25;
	cvt.rn.f32.s32 	%f200, %r17;
	mul.f32 	%f201, %f200, %f195;
	mul.f32 	%f202, %f201, %f200;
	cvt.rn.f32.s32 	%f203, %r18;
	mul.f32 	%f204, %f203, %f196;
	mul.f32 	%f205, %f204, %f203;
	mul.f32 	%f206, %f205, %f196;
	fma.rn.f32 	%f207, %f202, %f195, %f206;
	ld.global.v2.u32 	{%r221, %r222}, [launch_index];
	cvt.u64.u32 	%rd90, %r221;
	cvt.u64.u32 	%rd91, %r222;
	mov.u64 	%rd94, random;
	cvta.global.u64 	%rd89, %rd94;
	mov.u32 	%r215, 2;
	mov.u32 	%r216, 4;
	// begin inline asm
	call (%rd88), _rt_buffer_get_64, (%rd89, %r215, %r216, %rd90, %rd91, %rd167, %rd167);
	// end inline asm
	ld.f32 	%f208, [%rd88];
	add.f32 	%f209, %f208, %f207;
	cvt.f64.f32 	%fd40, %f209;
	mul.f64 	%fd41, %fd39, %fd40;
	cvt.rn.f32.f64 	%f32, %fd41;
	ld.global.f32 	%f210, [fencengshu];
	setp.geu.f32 	%p26, %f31, %f210;
	@%p26 bra 	$L__BB0_58;

	cvt.rzi.u32.f32 	%r227, %f31;
	cvt.u64.u32 	%rd99, %r227;
	cvt.u64.u32 	%rd98, %r142;
	cvt.u64.u32 	%rd97, %r141;
	mov.u64 	%rd101, complex;
	cvta.global.u64 	%rd96, %rd101;
	mov.u32 	%r225, 3;
	mov.u32 	%r226, 8;
	// begin inline asm
	call (%rd95), _rt_buffer_get_64, (%rd96, %r225, %r226, %rd97, %rd98, %rd99, %rd167);
	// end inline asm
	mul.f32 	%f211, %f32, 0f3F22F983;
	cvt.rni.s32.f32 	%r375, %f211;
	cvt.rn.f32.s32 	%f212, %r375;
	mov.f32 	%f213, 0fBFC90FDA;
	fma.rn.f32 	%f214, %f212, %f213, %f32;
	mov.f32 	%f215, 0fB3A22168;
	fma.rn.f32 	%f216, %f212, %f215, %f214;
	mov.f32 	%f217, 0fA7C234C5;
	fma.rn.f32 	%f321, %f212, %f217, %f216;
	abs.f32 	%f34, %f32;
	setp.leu.f32 	%p27, %f34, 0f47CE4780;
	mov.u32 	%r371, %r375;
	mov.f32 	%f318, %f321;
	@%p27 bra 	$L__BB0_41;

	setp.eq.f32 	%p28, %f34, 0f7F800000;
	@%p28 bra 	$L__BB0_40;
	bra.uni 	$L__BB0_35;

$L__BB0_40:
	mov.f32 	%f220, 0f00000000;
	mul.rn.f32 	%f318, %f32, %f220;
	mov.u32 	%r371, %r375;
	bra.uni 	$L__BB0_41;

$L__BB0_35:
	mov.b32 	%r56, %f32;
	bfe.u32 	%r229, %r56, 23, 8;
	add.s32 	%r57, %r229, -128;
	shl.b32 	%r230, %r56, 8;
	or.b32  	%r58, %r230, -2147483648;
	shr.u32 	%r59, %r57, 5;
	mov.u64 	%rd164, 0;
	mov.u32 	%r368, 0;
	mov.u64 	%rd162, __cudart_i2opi_f;
	mov.u64 	%rd163, %rd1;

$L__BB0_36:
	.pragma "nounroll";
	ld.global.nc.u32 	%r231, [%rd162];
	mad.wide.u32 	%rd104, %r231, %r58, %rd164;
	shr.u64 	%rd164, %rd104, 32;
	st.local.u32 	[%rd163], %rd104;
	add.s64 	%rd163, %rd163, 4;
	add.s64 	%rd162, %rd162, 4;
	add.s32 	%r368, %r368, 1;
	setp.ne.s32 	%p29, %r368, 6;
	@%p29 bra 	$L__BB0_36;

	st.local.u32 	[%rd1+24], %rd164;
	sub.s32 	%r62, %r216, %r59;
	mov.u32 	%r233, 6;
	sub.s32 	%r234, %r233, %r59;
	mul.wide.s32 	%rd105, %r234, 4;
	add.s64 	%rd106, %rd1, %rd105;
	ld.local.u32 	%r369, [%rd106];
	ld.local.u32 	%r370, [%rd106+-4];
	and.b32  	%r65, %r57, 31;
	setp.eq.s32 	%p30, %r65, 0;
	@%p30 bra 	$L__BB0_39;

	mov.u32 	%r235, 32;
	sub.s32 	%r236, %r235, %r65;
	shr.u32 	%r237, %r370, %r236;
	shl.b32 	%r238, %r369, %r65;
	add.s32 	%r369, %r237, %r238;
	mul.wide.s32 	%rd107, %r62, 4;
	add.s64 	%rd108, %rd1, %rd107;
	ld.local.u32 	%r239, [%rd108];
	shr.u32 	%r240, %r239, %r236;
	shl.b32 	%r241, %r370, %r65;
	add.s32 	%r370, %r240, %r241;

$L__BB0_39:
	and.b32  	%r242, %r56, -2147483648;
	shr.u32 	%r243, %r370, 30;
	shl.b32 	%r244, %r369, 2;
	or.b32  	%r245, %r243, %r244;
	shr.u32 	%r246, %r245, 31;
	shr.u32 	%r247, %r369, 30;
	add.s32 	%r248, %r246, %r247;
	neg.s32 	%r249, %r248;
	setp.eq.s32 	%p31, %r242, 0;
	selp.b32 	%r371, %r248, %r249, %p31;
	setp.ne.s32 	%p32, %r246, 0;
	xor.b32  	%r250, %r242, -2147483648;
	selp.b32 	%r251, %r250, %r242, %p32;
	selp.b32 	%r252, -1, 0, %p32;
	xor.b32  	%r253, %r245, %r252;
	shl.b32 	%r254, %r370, 2;
	xor.b32  	%r255, %r254, %r252;
	cvt.u64.u32 	%rd109, %r253;
	cvt.u64.u32 	%rd110, %r255;
	bfi.b64 	%rd111, %rd109, %rd110, 32, 32;
	cvt.rn.f64.s64 	%fd42, %rd111;
	mul.f64 	%fd43, %fd42, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f218, %fd43;
	setp.eq.s32 	%p33, %r251, 0;
	neg.f32 	%f219, %f218;
	selp.f32 	%f318, %f218, %f219, %p33;

$L__BB0_41:
	add.f64 	%fd44, %fd2, 0d3FC99999A0000000;
	cvt.rn.f32.f64 	%f38, %fd44;
	add.s32 	%r72, %r371, 1;
	and.b32  	%r73, %r72, 1;
	setp.eq.s32 	%p34, %r73, 0;
	selp.f32 	%f39, %f318, 0f3F800000, %p34;
	mul.rn.f32 	%f40, %f318, %f318;
	mov.f32 	%f319, 0fB94D4153;
	@%p34 bra 	$L__BB0_43;

	mov.f32 	%f222, 0fBAB607ED;
	mov.f32 	%f223, 0f37CBAC00;
	fma.rn.f32 	%f319, %f223, %f40, %f222;

$L__BB0_43:
	selp.f32 	%f224, 0f3C0885E4, 0f3D2AAABB, %p34;
	fma.rn.f32 	%f225, %f319, %f40, %f224;
	selp.f32 	%f226, 0fBE2AAAA8, 0fBEFFFFFF, %p34;
	fma.rn.f32 	%f227, %f225, %f40, %f226;
	mov.f32 	%f228, 0f00000000;
	fma.rn.f32 	%f229, %f40, %f39, %f228;
	fma.rn.f32 	%f320, %f227, %f229, %f39;
	and.b32  	%r256, %r72, 2;
	setp.eq.s32 	%p36, %r256, 0;
	@%p36 bra 	$L__BB0_45;

	mov.f32 	%f231, 0fBF800000;
	fma.rn.f32 	%f320, %f320, %f231, %f228;

$L__BB0_45:
	@%p27 bra 	$L__BB0_53;

	setp.eq.f32 	%p38, %f34, 0f7F800000;
	@%p38 bra 	$L__BB0_52;
	bra.uni 	$L__BB0_47;

$L__BB0_52:
	mul.rn.f32 	%f321, %f32, %f228;
	bra.uni 	$L__BB0_53;

$L__BB0_47:
	mov.b32 	%r74, %f32;
	bfe.u32 	%r258, %r74, 23, 8;
	add.s32 	%r75, %r258, -128;
	shl.b32 	%r259, %r74, 8;
	or.b32  	%r76, %r259, -2147483648;
	shr.u32 	%r77, %r75, 5;
	mov.u32 	%r372, 0;
	mov.u64 	%rd165, __cudart_i2opi_f;
	mov.u64 	%rd166, %rd1;

$L__BB0_48:
	.pragma "nounroll";
	ld.global.nc.u32 	%r260, [%rd165];
	mad.wide.u32 	%rd114, %r260, %r76, %rd167;
	shr.u64 	%rd167, %rd114, 32;
	st.local.u32 	[%rd166], %rd114;
	add.s64 	%rd166, %rd166, 4;
	add.s64 	%rd165, %rd165, 4;
	add.s32 	%r372, %r372, 1;
	setp.ne.s32 	%p39, %r372, 6;
	@%p39 bra 	$L__BB0_48;

	st.local.u32 	[%rd1+24], %rd167;
	sub.s32 	%r80, %r216, %r77;
	mov.u32 	%r262, 6;
	sub.s32 	%r263, %r262, %r77;
	mul.wide.s32 	%rd115, %r263, 4;
	add.s64 	%rd116, %rd1, %rd115;
	ld.local.u32 	%r373, [%rd116];
	ld.local.u32 	%r374, [%rd116+-4];
	and.b32  	%r83, %r75, 31;
	setp.eq.s32 	%p40, %r83, 0;
	@%p40 bra 	$L__BB0_51;

	mov.u32 	%r264, 32;
	sub.s32 	%r265, %r264, %r83;
	shr.u32 	%r266, %r374, %r265;
	shl.b32 	%r267, %r373, %r83;
	add.s32 	%r373, %r266, %r267;
	mul.wide.s32 	%rd117, %r80, 4;
	add.s64 	%rd118, %rd1, %rd117;
	ld.local.u32 	%r268, [%rd118];
	shr.u32 	%r269, %r268, %r265;
	shl.b32 	%r270, %r374, %r83;
	add.s32 	%r374, %r269, %r270;

$L__BB0_51:
	and.b32  	%r271, %r74, -2147483648;
	shr.u32 	%r272, %r374, 30;
	shl.b32 	%r273, %r373, 2;
	or.b32  	%r274, %r272, %r273;
	shr.u32 	%r275, %r274, 31;
	shr.u32 	%r276, %r373, 30;
	add.s32 	%r277, %r275, %r276;
	neg.s32 	%r278, %r277;
	setp.eq.s32 	%p41, %r271, 0;
	selp.b32 	%r375, %r277, %r278, %p41;
	setp.ne.s32 	%p42, %r275, 0;
	xor.b32  	%r279, %r271, -2147483648;
	selp.b32 	%r280, %r279, %r271, %p42;
	selp.b32 	%r281, -1, 0, %p42;
	xor.b32  	%r282, %r274, %r281;
	shl.b32 	%r283, %r374, 2;
	xor.b32  	%r284, %r283, %r281;
	cvt.u64.u32 	%rd119, %r282;
	cvt.u64.u32 	%rd120, %r284;
	bfi.b64 	%rd121, %rd119, %rd120, 32, 32;
	cvt.rn.f64.s64 	%fd45, %rd121;
	mul.f64 	%fd46, %fd45, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f232, %fd46;
	setp.eq.s32 	%p43, %r280, 0;
	neg.f32 	%f233, %f232;
	selp.f32 	%f321, %f232, %f233, %p43;

$L__BB0_53:
	and.b32  	%r90, %r375, 1;
	setp.eq.s32 	%p44, %r90, 0;
	selp.f32 	%f49, %f321, 0f3F800000, %p44;
	mul.rn.f32 	%f50, %f321, %f321;
	mov.f32 	%f322, 0fB94D4153;
	@%p44 bra 	$L__BB0_55;

	mov.f32 	%f236, 0fBAB607ED;
	mov.f32 	%f237, 0f37CBAC00;
	fma.rn.f32 	%f322, %f237, %f50, %f236;

$L__BB0_55:
	selp.f32 	%f238, 0f3C0885E4, 0f3D2AAABB, %p44;
	fma.rn.f32 	%f239, %f322, %f50, %f238;
	selp.f32 	%f240, 0fBE2AAAA8, 0fBEFFFFFF, %p44;
	fma.rn.f32 	%f241, %f239, %f50, %f240;
	fma.rn.f32 	%f243, %f50, %f49, %f228;
	fma.rn.f32 	%f323, %f241, %f243, %f49;
	and.b32  	%r285, %r375, 2;
	setp.eq.s32 	%p46, %r285, 0;
	@%p46 bra 	$L__BB0_57;

	mov.f32 	%f245, 0fBF800000;
	fma.rn.f32 	%f323, %f323, %f245, %f228;

$L__BB0_57:
	mul.f32 	%f246, %f323, %f38;
	mul.f32 	%f247, %f320, %f38;
	st.v2.f32 	[%rd95], {%f247, %f246};

$L__BB0_58:
	ld.local.f32 	%f56, [%rd2+12];
	setp.leu.f32 	%p47, %f56, 0f3DCCCCCD;
	@%p47 bra 	$L__BB0_85;

	mov.u64 	%rd173, 0;
	ld.global.f32 	%f248, [len];
	sub.f32 	%f249, %f56, %f248;
	ld.global.f32 	%f250, [maxextent];
	fma.rn.f32 	%f251, %f250, 0f3F000000, %f249;
	div.rn.f32 	%f252, %f251, %f250;
	ld.global.f32 	%f253, [fencengshu];
	mul.f32 	%f254, %f253, %f252;
	cvt.rmi.f32.f32 	%f57, %f254;
	ld.global.f32 	%f255, [juli];
	ld.global.f32 	%f256, [z];
	fma.rn.f32 	%f257, %f57, %f255, %f256;
	cvt.f64.f32 	%fd47, %f257;
	mul.f64 	%fd48, %fd47, 0d3F44F0520D130DFA;
	ld.global.v2.u32 	{%r288, %r289}, [launch_dim];
	cvt.rn.f64.u32 	%fd49, %r288;
	div.rn.f64 	%fd50, %fd48, %fd49;
	div.rn.f64 	%fd51, %fd50, 0d3F80624DD2F1A9FC;
	cvt.rn.f32.f64 	%f258, %fd51;
	cvt.rn.f64.u32 	%fd52, %r289;
	div.rn.f64 	%fd53, %fd48, %fd52;
	div.rn.f64 	%fd54, %fd53, 0d3F80624DD2F1A9FC;
	cvt.rn.f32.f64 	%f259, %fd54;
	ld.local.f32 	%f260, [%rd2+-12];
	cvt.f64.f32 	%fd55, %f260;
	ld.local.f32 	%f261, [%rd2+-8];
	cvt.f64.f32 	%fd56, %f261;
	mul.f64 	%fd57, %fd56, 0d3FE2E147AE147AE1;
	fma.rn.f64 	%fd58, %fd55, 0d3FD3333333333333, %fd57;
	ld.local.f32 	%f262, [%rd2+-4];
	cvt.f64.f32 	%fd59, %f262;
	fma.rn.f64 	%fd3, %fd59, 0d3FBC28F5C28F5C29, %fd58;
	mov.f64 	%fd60, 0d40B3346B9BAEE9CE;
	div.rn.f64 	%fd61, %fd60, %fd47;
	cvt.rn.f32.s32 	%f263, %r17;
	mul.f32 	%f264, %f263, %f258;
	mul.f32 	%f265, %f264, %f263;
	cvt.rn.f32.s32 	%f266, %r18;
	mul.f32 	%f267, %f266, %f259;
	mul.f32 	%f268, %f267, %f266;
	mul.f32 	%f269, %f268, %f259;
	fma.rn.f32 	%f270, %f265, %f258, %f269;
	ld.global.v2.u32 	{%r292, %r293}, [launch_index];
	cvt.u64.u32 	%rd124, %r292;
	cvt.u64.u32 	%rd125, %r293;
	mov.u64 	%rd128, random;
	cvta.global.u64 	%rd123, %rd128;
	mov.u32 	%r286, 2;
	mov.u32 	%r287, 4;
	// begin inline asm
	call (%rd122), _rt_buffer_get_64, (%rd123, %r286, %r287, %rd124, %rd125, %rd173, %rd173);
	// end inline asm
	ld.f32 	%f271, [%rd122];
	add.f32 	%f272, %f271, %f270;
	cvt.f64.f32 	%fd62, %f272;
	mul.f64 	%fd63, %fd61, %fd62;
	cvt.rn.f32.f64 	%f58, %fd63;
	ld.global.f32 	%f273, [fencengshu];
	setp.geu.f32 	%p48, %f57, %f273;
	@%p48 bra 	$L__BB0_85;

	cvt.rzi.u32.f32 	%r298, %f57;
	cvt.u64.u32 	%rd133, %r298;
	cvt.u64.u32 	%rd132, %r142;
	cvt.u64.u32 	%rd131, %r141;
	mov.u64 	%rd135, complex;
	cvta.global.u64 	%rd130, %rd135;
	mov.u32 	%r296, 3;
	mov.u32 	%r297, 8;
	// begin inline asm
	call (%rd129), _rt_buffer_get_64, (%rd130, %r296, %r297, %rd131, %rd132, %rd133, %rd173);
	// end inline asm
	mul.f32 	%f274, %f58, 0f3F22F983;
	cvt.rni.s32.f32 	%r383, %f274;
	cvt.rn.f32.s32 	%f275, %r383;
	mov.f32 	%f276, 0fBFC90FDA;
	fma.rn.f32 	%f277, %f275, %f276, %f58;
	mov.f32 	%f278, 0fB3A22168;
	fma.rn.f32 	%f279, %f275, %f278, %f277;
	mov.f32 	%f280, 0fA7C234C5;
	fma.rn.f32 	%f327, %f275, %f280, %f279;
	abs.f32 	%f60, %f58;
	setp.leu.f32 	%p49, %f60, 0f47CE4780;
	mov.u32 	%r379, %r383;
	mov.f32 	%f324, %f327;
	@%p49 bra 	$L__BB0_68;

	setp.eq.f32 	%p50, %f60, 0f7F800000;
	@%p50 bra 	$L__BB0_67;
	bra.uni 	$L__BB0_62;

$L__BB0_67:
	mov.f32 	%f283, 0f00000000;
	mul.rn.f32 	%f324, %f58, %f283;
	mov.u32 	%r379, %r383;
	bra.uni 	$L__BB0_68;

$L__BB0_62:
	mov.b32 	%r92, %f58;
	bfe.u32 	%r300, %r92, 23, 8;
	add.s32 	%r93, %r300, -128;
	shl.b32 	%r301, %r92, 8;
	or.b32  	%r94, %r301, -2147483648;
	shr.u32 	%r95, %r93, 5;
	mov.u64 	%rd170, 0;
	mov.u32 	%r376, 0;
	mov.u64 	%rd168, __cudart_i2opi_f;
	mov.u64 	%rd169, %rd1;

$L__BB0_63:
	.pragma "nounroll";
	ld.global.nc.u32 	%r302, [%rd168];
	mad.wide.u32 	%rd138, %r302, %r94, %rd170;
	shr.u64 	%rd170, %rd138, 32;
	st.local.u32 	[%rd169], %rd138;
	add.s64 	%rd169, %rd169, 4;
	add.s64 	%rd168, %rd168, 4;
	add.s32 	%r376, %r376, 1;
	setp.ne.s32 	%p51, %r376, 6;
	@%p51 bra 	$L__BB0_63;

	st.local.u32 	[%rd1+24], %rd170;
	sub.s32 	%r98, %r287, %r95;
	mov.u32 	%r304, 6;
	sub.s32 	%r305, %r304, %r95;
	mul.wide.s32 	%rd139, %r305, 4;
	add.s64 	%rd140, %rd1, %rd139;
	ld.local.u32 	%r377, [%rd140];
	ld.local.u32 	%r378, [%rd140+-4];
	and.b32  	%r101, %r93, 31;
	setp.eq.s32 	%p52, %r101, 0;
	@%p52 bra 	$L__BB0_66;

	mov.u32 	%r306, 32;
	sub.s32 	%r307, %r306, %r101;
	shr.u32 	%r308, %r378, %r307;
	shl.b32 	%r309, %r377, %r101;
	add.s32 	%r377, %r308, %r309;
	mul.wide.s32 	%rd141, %r98, 4;
	add.s64 	%rd142, %rd1, %rd141;
	ld.local.u32 	%r310, [%rd142];
	shr.u32 	%r311, %r310, %r307;
	shl.b32 	%r312, %r378, %r101;
	add.s32 	%r378, %r311, %r312;

$L__BB0_66:
	and.b32  	%r313, %r92, -2147483648;
	shr.u32 	%r314, %r378, 30;
	shl.b32 	%r315, %r377, 2;
	or.b32  	%r316, %r314, %r315;
	shr.u32 	%r317, %r316, 31;
	shr.u32 	%r318, %r377, 30;
	add.s32 	%r319, %r317, %r318;
	neg.s32 	%r320, %r319;
	setp.eq.s32 	%p53, %r313, 0;
	selp.b32 	%r379, %r319, %r320, %p53;
	setp.ne.s32 	%p54, %r317, 0;
	xor.b32  	%r321, %r313, -2147483648;
	selp.b32 	%r322, %r321, %r313, %p54;
	selp.b32 	%r323, -1, 0, %p54;
	xor.b32  	%r324, %r316, %r323;
	shl.b32 	%r325, %r378, 2;
	xor.b32  	%r326, %r325, %r323;
	cvt.u64.u32 	%rd143, %r324;
	cvt.u64.u32 	%rd144, %r326;
	bfi.b64 	%rd145, %rd143, %rd144, 32, 32;
	cvt.rn.f64.s64 	%fd64, %rd145;
	mul.f64 	%fd65, %fd64, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f281, %fd65;
	setp.eq.s32 	%p55, %r322, 0;
	neg.f32 	%f282, %f281;
	selp.f32 	%f324, %f281, %f282, %p55;

$L__BB0_68:
	add.f64 	%fd66, %fd3, 0d3FC99999A0000000;
	cvt.rn.f32.f64 	%f64, %fd66;
	add.s32 	%r108, %r379, 1;
	and.b32  	%r109, %r108, 1;
	setp.eq.s32 	%p56, %r109, 0;
	selp.f32 	%f65, %f324, 0f3F800000, %p56;
	mul.rn.f32 	%f66, %f324, %f324;
	mov.f32 	%f325, 0fB94D4153;
	@%p56 bra 	$L__BB0_70;

	mov.f32 	%f285, 0fBAB607ED;
	mov.f32 	%f286, 0f37CBAC00;
	fma.rn.f32 	%f325, %f286, %f66, %f285;

$L__BB0_70:
	selp.f32 	%f287, 0f3C0885E4, 0f3D2AAABB, %p56;
	fma.rn.f32 	%f288, %f325, %f66, %f287;
	selp.f32 	%f289, 0fBE2AAAA8, 0fBEFFFFFF, %p56;
	fma.rn.f32 	%f290, %f288, %f66, %f289;
	mov.f32 	%f291, 0f00000000;
	fma.rn.f32 	%f292, %f66, %f65, %f291;
	fma.rn.f32 	%f326, %f290, %f292, %f65;
	and.b32  	%r327, %r108, 2;
	setp.eq.s32 	%p58, %r327, 0;
	@%p58 bra 	$L__BB0_72;

	mov.f32 	%f294, 0fBF800000;
	fma.rn.f32 	%f326, %f326, %f294, %f291;

$L__BB0_72:
	@%p49 bra 	$L__BB0_80;

	setp.eq.f32 	%p60, %f60, 0f7F800000;
	@%p60 bra 	$L__BB0_79;
	bra.uni 	$L__BB0_74;

$L__BB0_79:
	mul.rn.f32 	%f327, %f58, %f291;
	bra.uni 	$L__BB0_80;

$L__BB0_74:
	mov.b32 	%r110, %f58;
	bfe.u32 	%r329, %r110, 23, 8;
	add.s32 	%r111, %r329, -128;
	shl.b32 	%r330, %r110, 8;
	or.b32  	%r112, %r330, -2147483648;
	shr.u32 	%r113, %r111, 5;
	mov.u64 	%rd171, __cudart_i2opi_f;
	mov.u64 	%rd172, %rd1;

$L__BB0_75:
	.pragma "nounroll";
	ld.global.nc.u32 	%r331, [%rd171];
	mad.wide.u32 	%rd148, %r331, %r112, %rd173;
	shr.u64 	%rd173, %rd148, 32;
	st.local.u32 	[%rd172], %rd148;
	add.s64 	%rd172, %rd172, 4;
	add.s64 	%rd171, %rd171, 4;
	add.s32 	%r380, %r380, 1;
	setp.ne.s32 	%p61, %r380, 6;
	@%p61 bra 	$L__BB0_75;

	st.local.u32 	[%rd1+24], %rd173;
	sub.s32 	%r116, %r287, %r113;
	mov.u32 	%r333, 6;
	sub.s32 	%r334, %r333, %r113;
	mul.wide.s32 	%rd149, %r334, 4;
	add.s64 	%rd150, %rd1, %rd149;
	ld.local.u32 	%r381, [%rd150];
	ld.local.u32 	%r382, [%rd150+-4];
	and.b32  	%r119, %r111, 31;
	setp.eq.s32 	%p62, %r119, 0;
	@%p62 bra 	$L__BB0_78;

	mov.u32 	%r335, 32;
	sub.s32 	%r336, %r335, %r119;
	shr.u32 	%r337, %r382, %r336;
	shl.b32 	%r338, %r381, %r119;
	add.s32 	%r381, %r337, %r338;
	mul.wide.s32 	%rd151, %r116, 4;
	add.s64 	%rd152, %rd1, %rd151;
	ld.local.u32 	%r339, [%rd152];
	shr.u32 	%r340, %r339, %r336;
	shl.b32 	%r341, %r382, %r119;
	add.s32 	%r382, %r340, %r341;

$L__BB0_78:
	and.b32  	%r342, %r110, -2147483648;
	shr.u32 	%r343, %r382, 30;
	shl.b32 	%r344, %r381, 2;
	or.b32  	%r345, %r343, %r344;
	shr.u32 	%r346, %r345, 31;
	shr.u32 	%r347, %r381, 30;
	add.s32 	%r348, %r346, %r347;
	neg.s32 	%r349, %r348;
	setp.eq.s32 	%p63, %r342, 0;
	selp.b32 	%r383, %r348, %r349, %p63;
	setp.ne.s32 	%p64, %r346, 0;
	xor.b32  	%r350, %r342, -2147483648;
	selp.b32 	%r351, %r350, %r342, %p64;
	selp.b32 	%r352, -1, 0, %p64;
	xor.b32  	%r353, %r345, %r352;
	shl.b32 	%r354, %r382, 2;
	xor.b32  	%r355, %r354, %r352;
	cvt.u64.u32 	%rd153, %r353;
	cvt.u64.u32 	%rd154, %r355;
	bfi.b64 	%rd155, %rd153, %rd154, 32, 32;
	cvt.rn.f64.s64 	%fd67, %rd155;
	mul.f64 	%fd68, %fd67, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f295, %fd68;
	setp.eq.s32 	%p65, %r351, 0;
	neg.f32 	%f296, %f295;
	selp.f32 	%f327, %f295, %f296, %p65;

$L__BB0_80:
	and.b32  	%r126, %r383, 1;
	setp.eq.s32 	%p66, %r126, 0;
	selp.f32 	%f75, %f327, 0f3F800000, %p66;
	mul.rn.f32 	%f76, %f327, %f327;
	mov.f32 	%f328, 0fB94D4153;
	@%p66 bra 	$L__BB0_82;

	mov.f32 	%f299, 0fBAB607ED;
	mov.f32 	%f300, 0f37CBAC00;
	fma.rn.f32 	%f328, %f300, %f76, %f299;

$L__BB0_82:
	selp.f32 	%f301, 0f3C0885E4, 0f3D2AAABB, %p66;
	fma.rn.f32 	%f302, %f328, %f76, %f301;
	selp.f32 	%f303, 0fBE2AAAA8, 0fBEFFFFFF, %p66;
	fma.rn.f32 	%f304, %f302, %f76, %f303;
	fma.rn.f32 	%f306, %f76, %f75, %f291;
	fma.rn.f32 	%f329, %f304, %f306, %f75;
	and.b32  	%r356, %r383, 2;
	setp.eq.s32 	%p68, %r356, 0;
	@%p68 bra 	$L__BB0_84;

	mov.f32 	%f308, 0fBF800000;
	fma.rn.f32 	%f329, %f329, %f308, %f291;

$L__BB0_84:
	mul.f32 	%f309, %f329, %f64;
	mul.f32 	%f310, %f326, %f64;
	st.v2.f32 	[%rd129], {%f310, %f309};

$L__BB0_85:
	ret;

}
	// .globl	_Z9exceptionv
.visible .entry _Z9exceptionv()
{
	.local .align 16 .b8 	__local_depot1[96];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<43>;
	.reg .f32 	%f<9>;
	.reg .b32 	%r<125>;
	.reg .f64 	%fd<9>;
	.reg .b64 	%rd<121>;


	mov.u64 	%SPL, __local_depot1;
	cvta.local.u64 	%SP, %SPL;
	add.u64 	%rd27, %SP, 0;
	add.u64 	%rd28, %SPL, 0;
	// begin inline asm
	call (%r75), _rt_get_exception_code, ();
	// end inline asm
	setp.eq.s32 	%p1, %r75, 1020;
	add.s64 	%rd1, %rd28, 8;
	@%p1 bra 	$L__BB1_61;
	bra.uni 	$L__BB1_1;

$L__BB1_61:
	ld.volatile.global.u32 	%r72, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r73, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r74, [_ZN21rti_internal_register14reg_rayIndex_zE];
	// begin inline asm
	call (%r115), _rt_print_active, ();
	// end inline asm
	setp.eq.s32 	%p42, %r115, 0;
	@%p42 bra 	$L__BB1_63;

	st.local.v2.u32 	[%rd28], {%r72, %r73};
	st.local.u32 	[%rd1], %r74;
	mov.u64 	%rd110, $str;
	cvta.global.u64 	%rd111, %rd110;
	{ // callseq 18, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd111;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd27;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r116, [retval0+0];
	} // callseq 18
	bra.uni 	$L__BB1_63;

$L__BB1_1:
	setp.eq.s32 	%p2, %r75, 1005;
	@%p2 bra 	$L__BB1_59;
	bra.uni 	$L__BB1_2;

$L__BB1_59:
	ld.volatile.global.u32 	%r69, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r70, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r71, [_ZN21rti_internal_register14reg_rayIndex_zE];
	// begin inline asm
	call (%r113), _rt_print_active, ();
	// end inline asm
	setp.eq.s32 	%p41, %r113, 0;
	@%p41 bra 	$L__BB1_63;

	st.local.v2.u32 	[%rd28], {%r69, %r70};
	st.local.u32 	[%rd1], %r71;
	mov.u64 	%rd106, $str$1;
	cvta.global.u64 	%rd107, %rd106;
	{ // callseq 17, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd107;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd27;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r114, [retval0+0];
	} // callseq 17
	bra.uni 	$L__BB1_63;

$L__BB1_2:
	setp.eq.s32 	%p3, %r75, 1021;
	@%p3 bra 	$L__BB1_53;
	bra.uni 	$L__BB1_3;

$L__BB1_53:
	ld.volatile.global.u32 	%r63, [_ZN21rti_internal_register21reg_exception_detail0E];
	ld.volatile.global.u32 	%r64, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r65, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r66, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd18, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	ld.volatile.global.u32 	%r67, [_ZN21rti_internal_register21reg_exception_detail2E];
	ld.volatile.global.u64 	%rd19, [_ZN21rti_internal_register24reg_exception_64_detail1E];
	setp.lt.u32 	%p38, %r63, 2;
	mov.u64 	%rd120, 1;
	mov.u64 	%rd119, %rd120;
	@%p38 bra 	$L__BB1_55;

	ld.volatile.global.u64 	%rd119, [_ZN21rti_internal_register24reg_exception_64_detail2E];

$L__BB1_55:
	setp.lt.u32 	%p39, %r63, 3;
	@%p39 bra 	$L__BB1_57;

	ld.volatile.global.u64 	%rd120, [_ZN21rti_internal_register24reg_exception_64_detail3E];

$L__BB1_57:
	ld.volatile.global.u32 	%r68, [_ZN21rti_internal_register21reg_exception_detail1E];
	ld.volatile.global.u64 	%rd24, [_ZN21rti_internal_register24reg_exception_64_detail4E];
	ld.volatile.global.u64 	%rd25, [_ZN21rti_internal_register24reg_exception_64_detail5E];
	ld.volatile.global.u64 	%rd26, [_ZN21rti_internal_register24reg_exception_64_detail6E];
	// begin inline asm
	call (%r111), _rt_print_active, ();
	// end inline asm
	setp.eq.s32 	%p40, %r111, 0;
	@%p40 bra 	$L__BB1_63;

	st.local.v2.u32 	[%rd28], {%r64, %r65};
	st.local.v2.u32 	[%rd28+8], {%r66, %r63};
	st.local.u64 	[%rd28+16], %rd18;
	st.local.u32 	[%rd28+24], %r67;
	st.local.u64 	[%rd28+32], %rd19;
	st.local.u64 	[%rd28+40], %rd119;
	st.local.u64 	[%rd28+48], %rd120;
	st.local.u32 	[%rd28+56], %r68;
	st.local.u64 	[%rd28+64], %rd24;
	st.local.u64 	[%rd28+72], %rd25;
	st.local.u64 	[%rd28+80], %rd26;
	mov.u64 	%rd102, $str$2;
	cvta.global.u64 	%rd103, %rd102;
	{ // callseq 16, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd103;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd27;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r112, [retval0+0];
	} // callseq 16

$L__BB1_63:
	mov.u64 	%rd117, 0;
	ld.global.v2.u32 	{%r119, %r120}, [launch_index];
	cvt.u64.u32 	%rd114, %r119;
	cvt.u64.u32 	%rd115, %r120;
	mov.u64 	%rd118, output_buffer;
	cvta.global.u64 	%rd113, %rd118;
	mov.u32 	%r117, 2;
	mov.u32 	%r118, 4;
	// begin inline asm
	call (%rd112), _rt_buffer_get_64, (%rd113, %r117, %r118, %rd114, %rd115, %rd117, %rd117);
	// end inline asm
	mov.u32 	%r123, 1058642330;
	st.u32 	[%rd112], %r123;
	ret;

$L__BB1_3:
	setp.eq.s32 	%p4, %r75, 1006;
	@%p4 bra 	$L__BB1_44;
	bra.uni 	$L__BB1_4;

$L__BB1_44:
	ld.volatile.global.u32 	%r104, [_ZN21rti_internal_register21reg_exception_detail1E];
	setp.eq.s32 	%p32, %r104, 1;
	@%p32 bra 	$L__BB1_51;

	setp.eq.s32 	%p33, %r104, 2;
	@%p33 bra 	$L__BB1_49;

	setp.ne.s32 	%p34, %r104, 3;
	@%p34 bra 	$L__BB1_63;

	ld.volatile.global.u32 	%r52, [_ZN21rti_internal_register21reg_exception_detail0E];
	ld.volatile.global.u32 	%r53, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r54, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r55, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd15, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	// begin inline asm
	call (%r105), _rt_print_active, ();
	// end inline asm
	setp.eq.s32 	%p35, %r105, 0;
	@%p35 bra 	$L__BB1_63;

	st.local.v2.u32 	[%rd28], {%r52, %r53};
	st.local.v2.u32 	[%rd1], {%r54, %r55};
	st.local.u64 	[%rd1+8], %rd15;
	mov.u64 	%rd88, $str$5;
	cvta.global.u64 	%rd89, %rd88;
	{ // callseq 13, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd89;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd27;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r106, [retval0+0];
	} // callseq 13
	bra.uni 	$L__BB1_63;

$L__BB1_4:
	setp.eq.s32 	%p5, %r75, 1007;
	@%p5 bra 	$L__BB1_35;
	bra.uni 	$L__BB1_5;

$L__BB1_35:
	ld.volatile.global.u32 	%r97, [_ZN21rti_internal_register21reg_exception_detail1E];
	setp.eq.s32 	%p26, %r97, 1;
	@%p26 bra 	$L__BB1_42;

	setp.eq.s32 	%p27, %r97, 2;
	@%p27 bra 	$L__BB1_40;

	setp.ne.s32 	%p28, %r97, 3;
	@%p28 bra 	$L__BB1_63;

	ld.volatile.global.u32 	%r42, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r43, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r44, [_ZN21rti_internal_register14reg_rayIndex_zE];
	// begin inline asm
	call (%r98), _rt_print_active, ();
	// end inline asm
	setp.eq.s32 	%p29, %r98, 0;
	@%p29 bra 	$L__BB1_63;

	st.local.v2.u32 	[%rd28], {%r42, %r43};
	st.local.u32 	[%rd1], %r44;
	mov.u64 	%rd76, $str$8;
	cvta.global.u64 	%rd77, %rd76;
	{ // callseq 10, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd77;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd27;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r99, [retval0+0];
	} // callseq 10
	bra.uni 	$L__BB1_63;

$L__BB1_5:
	setp.eq.s32 	%p6, %r75, 1018;
	@%p6 bra 	$L__BB1_26;
	bra.uni 	$L__BB1_6;

$L__BB1_26:
	ld.volatile.global.u32 	%r90, [_ZN21rti_internal_register21reg_exception_detail1E];
	setp.eq.s32 	%p20, %r90, 1;
	@%p20 bra 	$L__BB1_33;

	setp.eq.s32 	%p21, %r90, 2;
	@%p21 bra 	$L__BB1_31;

	setp.ne.s32 	%p22, %r90, 3;
	@%p22 bra 	$L__BB1_63;

	ld.volatile.global.u32 	%r31, [_ZN21rti_internal_register21reg_exception_detail0E];
	ld.volatile.global.u32 	%r32, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r33, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r34, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd12, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	// begin inline asm
	call (%r91), _rt_print_active, ();
	// end inline asm
	setp.eq.s32 	%p23, %r91, 0;
	@%p23 bra 	$L__BB1_63;

	st.local.v2.u32 	[%rd28], {%r31, %r32};
	st.local.v2.u32 	[%rd1], {%r33, %r34};
	st.local.u64 	[%rd1+8], %rd12;
	mov.u64 	%rd62, $str$12;
	cvta.global.u64 	%rd63, %rd62;
	{ // callseq 7, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd63;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd27;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r92, [retval0+0];
	} // callseq 7
	bra.uni 	$L__BB1_63;

$L__BB1_51:
	ld.volatile.global.u32 	%r60, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r61, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r62, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd17, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	// begin inline asm
	call (%r109), _rt_print_active, ();
	// end inline asm
	setp.eq.s32 	%p37, %r109, 0;
	@%p37 bra 	$L__BB1_63;

	st.local.v2.u32 	[%rd28], {%r60, %r61};
	st.local.u32 	[%rd1], %r62;
	st.local.u64 	[%rd1+8], %rd17;
	mov.u64 	%rd96, $str$3;
	cvta.global.u64 	%rd97, %rd96;
	{ // callseq 15, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd97;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd27;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r110, [retval0+0];
	} // callseq 15
	bra.uni 	$L__BB1_63;

$L__BB1_49:
	ld.volatile.global.u32 	%r56, [_ZN21rti_internal_register21reg_exception_detail0E];
	ld.volatile.global.u32 	%r57, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r58, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r59, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd16, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	// begin inline asm
	call (%r107), _rt_print_active, ();
	// end inline asm
	setp.eq.s32 	%p36, %r107, 0;
	@%p36 bra 	$L__BB1_63;

	st.local.v2.u32 	[%rd28], {%r56, %r57};
	st.local.v2.u32 	[%rd1], {%r58, %r59};
	st.local.u64 	[%rd1+8], %rd16;
	mov.u64 	%rd92, $str$4;
	cvta.global.u64 	%rd93, %rd92;
	{ // callseq 14, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd93;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd27;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r108, [retval0+0];
	} // callseq 14
	bra.uni 	$L__BB1_63;

$L__BB1_6:
	setp.eq.s32 	%p7, %r75, 1019;
	@%p7 bra 	$L__BB1_24;
	bra.uni 	$L__BB1_7;

$L__BB1_24:
	ld.volatile.global.u32 	%r28, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r29, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r30, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd9, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	ld.volatile.global.u64 	%rd10, [_ZN21rti_internal_register24reg_exception_64_detail1E];
	ld.volatile.global.u64 	%rd11, [_ZN21rti_internal_register24reg_exception_64_detail2E];
	// begin inline asm
	call (%r88), _rt_print_active, ();
	// end inline asm
	setp.eq.s32 	%p19, %r88, 0;
	@%p19 bra 	$L__BB1_63;

	st.local.v2.u32 	[%rd28], {%r28, %r29};
	st.local.u32 	[%rd28+8], %r30;
	st.local.u64 	[%rd28+16], %rd9;
	st.local.u64 	[%rd28+24], %rd10;
	st.local.u64 	[%rd28+32], %rd11;
	mov.u64 	%rd58, $str$13;
	cvta.global.u64 	%rd59, %rd58;
	{ // callseq 6, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd59;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd27;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r89, [retval0+0];
	} // callseq 6
	bra.uni 	$L__BB1_63;

$L__BB1_42:
	ld.volatile.global.u32 	%r49, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r50, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r51, [_ZN21rti_internal_register14reg_rayIndex_zE];
	// begin inline asm
	call (%r102), _rt_print_active, ();
	// end inline asm
	setp.eq.s32 	%p31, %r102, 0;
	@%p31 bra 	$L__BB1_63;

	st.local.v2.u32 	[%rd28], {%r49, %r50};
	st.local.u32 	[%rd1], %r51;
	mov.u64 	%rd84, $str$6;
	cvta.global.u64 	%rd85, %rd84;
	{ // callseq 12, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd85;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd27;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r103, [retval0+0];
	} // callseq 12
	bra.uni 	$L__BB1_63;

$L__BB1_40:
	ld.volatile.global.u32 	%r45, [_ZN21rti_internal_register21reg_exception_detail0E];
	ld.volatile.global.u32 	%r46, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r47, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r48, [_ZN21rti_internal_register14reg_rayIndex_zE];
	// begin inline asm
	call (%r100), _rt_print_active, ();
	// end inline asm
	setp.eq.s32 	%p30, %r100, 0;
	@%p30 bra 	$L__BB1_63;

	st.local.v4.u32 	[%rd28], {%r45, %r46, %r47, %r48};
	mov.u64 	%rd80, $str$7;
	cvta.global.u64 	%rd81, %rd80;
	{ // callseq 11, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd81;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd27;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r101, [retval0+0];
	} // callseq 11
	bra.uni 	$L__BB1_63;

$L__BB1_7:
	setp.eq.s32 	%p8, %r75, 1022;
	@%p8 bra 	$L__BB1_22;
	bra.uni 	$L__BB1_8;

$L__BB1_22:
	ld.volatile.global.u32 	%r16, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r17, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r18, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd8, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	ld.volatile.global.u32 	%r19, [_ZN21rti_internal_register21reg_exception_detail0E];
	ld.volatile.global.u32 	%r20, [_ZN21rti_internal_register21reg_exception_detail1E];
	ld.volatile.global.u32 	%r21, [_ZN21rti_internal_register21reg_exception_detail2E];
	ld.volatile.global.u32 	%r22, [_ZN21rti_internal_register21reg_exception_detail3E];
	ld.volatile.global.u32 	%r23, [_ZN21rti_internal_register21reg_exception_detail4E];
	ld.volatile.global.u32 	%r24, [_ZN21rti_internal_register21reg_exception_detail5E];
	ld.volatile.global.u32 	%r25, [_ZN21rti_internal_register21reg_exception_detail6E];
	ld.volatile.global.u32 	%r26, [_ZN21rti_internal_register21reg_exception_detail7E];
	ld.volatile.global.u32 	%r27, [_ZN21rti_internal_register21reg_exception_detail8E];
	// begin inline asm
	call (%r86), _rt_print_active, ();
	// end inline asm
	setp.eq.s32 	%p18, %r86, 0;
	@%p18 bra 	$L__BB1_63;

	mov.b32 	%f1, %r19;
	cvt.f64.f32 	%fd1, %f1;
	mov.b32 	%f2, %r20;
	mov.b32 	%f3, %r21;
	mov.b32 	%f4, %r22;
	mov.b32 	%f5, %r23;
	mov.b32 	%f6, %r24;
	cvt.f64.f32 	%fd2, %f6;
	mov.b32 	%f7, %r26;
	mov.b32 	%f8, %r27;
	st.local.v2.u32 	[%rd28], {%r16, %r17};
	st.local.u32 	[%rd28+8], %r18;
	mov.b64 	%rd53, %fd1;
	st.local.v2.u64 	[%rd28+16], {%rd8, %rd53};
	cvt.f64.f32 	%fd3, %f3;
	cvt.f64.f32 	%fd4, %f2;
	st.local.v2.f64 	[%rd28+32], {%fd4, %fd3};
	cvt.f64.f32 	%fd5, %f5;
	cvt.f64.f32 	%fd6, %f4;
	st.local.v2.f64 	[%rd28+48], {%fd6, %fd5};
	st.local.f64 	[%rd28+64], %fd2;
	st.local.u32 	[%rd28+72], %r25;
	cvt.f64.f32 	%fd7, %f8;
	cvt.f64.f32 	%fd8, %f7;
	st.local.v2.f64 	[%rd28+80], {%fd8, %fd7};
	mov.u64 	%rd54, $str$14;
	cvta.global.u64 	%rd55, %rd54;
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd55;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd27;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r87, [retval0+0];
	} // callseq 5
	bra.uni 	$L__BB1_63;

$L__BB1_33:
	ld.volatile.global.u32 	%r39, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r40, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r41, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd14, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	// begin inline asm
	call (%r95), _rt_print_active, ();
	// end inline asm
	setp.eq.s32 	%p25, %r95, 0;
	@%p25 bra 	$L__BB1_63;

	st.local.v2.u32 	[%rd28], {%r39, %r40};
	st.local.u32 	[%rd1], %r41;
	st.local.u64 	[%rd1+8], %rd14;
	mov.u64 	%rd72, $str$9;
	cvta.global.u64 	%rd73, %rd72;
	{ // callseq 9, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd73;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd27;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r96, [retval0+0];
	} // callseq 9
	bra.uni 	$L__BB1_63;

$L__BB1_31:
	ld.volatile.global.u32 	%r35, [_ZN21rti_internal_register21reg_exception_detail0E];
	ld.volatile.global.u32 	%r36, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r37, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r38, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd13, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	// begin inline asm
	call (%r93), _rt_print_active, ();
	// end inline asm
	setp.eq.s32 	%p24, %r93, 0;
	@%p24 bra 	$L__BB1_63;

	mov.u64 	%rd64, $str$11;
	cvta.global.u64 	%rd65, %rd64;
	st.local.u64 	[%rd28], %rd65;
	st.local.v2.u32 	[%rd28+8], {%r35, %r36};
	st.local.v2.u32 	[%rd28+16], {%r37, %r38};
	st.local.u64 	[%rd28+24], %rd13;
	mov.u64 	%rd68, $str$10;
	cvta.global.u64 	%rd69, %rd68;
	{ // callseq 8, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd69;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd27;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r94, [retval0+0];
	} // callseq 8
	bra.uni 	$L__BB1_63;

$L__BB1_8:
	setp.eq.s32 	%p9, %r75, 1003;
	@%p9 bra 	$L__BB1_20;
	bra.uni 	$L__BB1_9;

$L__BB1_20:
	ld.volatile.global.u32 	%r13, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r14, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r15, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd4, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	ld.volatile.global.u64 	%rd5, [_ZN21rti_internal_register24reg_exception_64_detail1E];
	ld.volatile.global.u64 	%rd6, [_ZN21rti_internal_register24reg_exception_64_detail2E];
	ld.volatile.global.u64 	%rd7, [_ZN21rti_internal_register24reg_exception_64_detail3E];
	// begin inline asm
	call (%r84), _rt_print_active, ();
	// end inline asm
	setp.eq.s32 	%p17, %r84, 0;
	@%p17 bra 	$L__BB1_63;

	st.local.v2.u32 	[%rd28], {%r13, %r14};
	st.local.u32 	[%rd28+8], %r15;
	st.local.v2.u64 	[%rd28+16], {%rd4, %rd5};
	st.local.v2.u64 	[%rd28+32], {%rd6, %rd7};
	mov.u64 	%rd49, $str$15;
	cvta.global.u64 	%rd50, %rd49;
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd50;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd27;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r85, [retval0+0];
	} // callseq 4
	bra.uni 	$L__BB1_63;

$L__BB1_9:
	setp.eq.s32 	%p10, %r75, 1004;
	@%p10 bra 	$L__BB1_18;
	bra.uni 	$L__BB1_10;

$L__BB1_18:
	ld.volatile.global.u32 	%r9, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r10, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r11, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd3, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	ld.volatile.global.u32 	%r12, [_ZN21rti_internal_register21reg_exception_detail0E];
	// begin inline asm
	call (%r82), _rt_print_active, ();
	// end inline asm
	setp.eq.s32 	%p16, %r82, 0;
	@%p16 bra 	$L__BB1_63;

	st.local.v2.u32 	[%rd28], {%r9, %r10};
	st.local.u32 	[%rd28+8], %r11;
	st.local.u64 	[%rd28+16], %rd3;
	st.local.u32 	[%rd28+24], %r12;
	mov.u64 	%rd45, $str$16;
	cvta.global.u64 	%rd46, %rd45;
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd46;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd27;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r83, [retval0+0];
	} // callseq 3
	bra.uni 	$L__BB1_63;

$L__BB1_10:
	add.s32 	%r2, %r75, -1024;
	setp.lt.u32 	%p11, %r2, 64512;
	@%p11 bra 	$L__BB1_16;
	bra.uni 	$L__BB1_11;

$L__BB1_16:
	ld.volatile.global.u32 	%r6, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r7, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r8, [_ZN21rti_internal_register14reg_rayIndex_zE];
	// begin inline asm
	call (%r80), _rt_print_active, ();
	// end inline asm
	setp.eq.s32 	%p15, %r80, 0;
	@%p15 bra 	$L__BB1_63;

	add.s32 	%r124, %r75, -1024;
	st.local.v4.u32 	[%rd28], {%r124, %r6, %r7, %r8};
	mov.u64 	%rd41, $str$17;
	cvta.global.u64 	%rd42, %rd41;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd42;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd27;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r81, [retval0+0];
	} // callseq 2
	bra.uni 	$L__BB1_63;

$L__BB1_11:
	setp.eq.s32 	%p12, %r75, 1023;
	ld.volatile.global.u32 	%r3, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r4, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r5, [_ZN21rti_internal_register14reg_rayIndex_zE];
	@%p12 bra 	$L__BB1_14;
	bra.uni 	$L__BB1_12;

$L__BB1_14:
	// begin inline asm
	call (%r78), _rt_print_active, ();
	// end inline asm
	setp.eq.s32 	%p14, %r78, 0;
	@%p14 bra 	$L__BB1_63;

	st.local.v2.u32 	[%rd28], {%r3, %r4};
	st.local.u32 	[%rd1], %r5;
	mov.u64 	%rd37, $str$18;
	cvta.global.u64 	%rd38, %rd37;
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd38;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd27;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r79, [retval0+0];
	} // callseq 1
	bra.uni 	$L__BB1_63;

$L__BB1_12:
	// begin inline asm
	call (%r76), _rt_print_active, ();
	// end inline asm
	setp.eq.s32 	%p13, %r76, 0;
	@%p13 bra 	$L__BB1_63;

	st.local.v2.u32 	[%rd28], {%r3, %r4};
	st.local.u32 	[%rd1], %r5;
	mov.u64 	%rd33, $str$19;
	cvta.global.u64 	%rd34, %rd33;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd34;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd27;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r77, [retval0+0];
	} // callseq 0
	bra.uni 	$L__BB1_63;

}
	// .globl	_Z11closest_hitv
.visible .entry _Z11closest_hitv()
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<106>;
	.reg .b32 	%r<16>;
	.reg .b64 	%rd<23>;


	ld.global.f32 	%f27, [shading_normal];
	ld.global.f32 	%f28, [shading_normal+4];
	ld.global.f32 	%f29, [shading_normal+8];
	mov.u32 	%r3, 7937;
	mov.f32 	%f30, 0f00000000;
	// begin inline asm
	call (%f23, %f24, %f25, %f26), _rt_transform_tuple, (%r3, %f27, %f28, %f29, %f30);
	// end inline asm
	mul.f32 	%f31, %f24, %f24;
	fma.rn.f32 	%f32, %f23, %f23, %f31;
	fma.rn.f32 	%f33, %f25, %f25, %f32;
	sqrt.rn.f32 	%f34, %f33;
	rcp.rn.f32 	%f35, %f34;
	mul.f32 	%f36, %f35, %f23;
	mul.f32 	%f37, %f35, %f24;
	mul.f32 	%f38, %f35, %f25;
	ld.global.f32 	%f39, [ray+12];
	mul.f32 	%f40, %f39, %f36;
	ld.global.f32 	%f41, [ray+16];
	mul.f32 	%f42, %f41, %f37;
	neg.f32 	%f43, %f42;
	sub.f32 	%f44, %f43, %f40;
	ld.global.f32 	%f45, [ray+20];
	mul.f32 	%f46, %f45, %f38;
	sub.f32 	%f47, %f44, %f46;
	mov.b32 	%r6, %f47;
	and.b32  	%r7, %r6, -2147483648;
	or.b32  	%r8, %r7, 1065353216;
	mov.b32 	%f48, %r8;
	mul.f32 	%f1, %f36, %f48;
	mul.f32 	%f2, %f37, %f48;
	mul.f32 	%f3, %f38, %f48;
	ld.global.f32 	%f49, [ambient_light_color];
	ld.global.f32 	%f50, [Ka];
	mul.f32 	%f100, %f50, %f49;
	ld.global.f32 	%f51, [ambient_light_color+4];
	ld.global.f32 	%f52, [Ka+4];
	mul.f32 	%f101, %f52, %f51;
	ld.global.f32 	%f53, [ambient_light_color+8];
	ld.global.f32 	%f54, [Ka+8];
	mul.f32 	%f102, %f54, %f53;
	ld.global.f32 	%f55, [t_hit];
	ld.global.f32 	%f56, [ray];
	fma.rn.f32 	%f7, %f55, %f39, %f56;
	ld.global.f32 	%f57, [ray+4];
	fma.rn.f32 	%f8, %f55, %f41, %f57;
	ld.global.f32 	%f58, [ray+8];
	fma.rn.f32 	%f9, %f55, %f45, %f58;
	mov.u64 	%rd7, lights;
	cvta.global.u64 	%rd6, %rd7;
	mov.u32 	%r4, 1;
	mov.u32 	%r5, 32;
	// begin inline asm
	call (%rd2, %rd3, %rd4, %rd5), _rt_buffer_get_size_64, (%rd6, %r4, %r5);
	// end inline asm
	cvt.u32.u64 	%r9, %rd2;
	setp.eq.s32 	%p1, %r9, 0;
	@%p1 bra 	$L__BB2_5;

	mov.u32 	%r15, 0;
	mov.u64 	%rd13, 0;

$L__BB2_2:
	cvt.s64.s32 	%rd10, %r15;
	// begin inline asm
	call (%rd8), _rt_buffer_get_64, (%rd6, %r4, %r5, %rd10, %rd13, %rd13, %rd13);
	// end inline asm
	ld.f32 	%f59, [%rd8];
	sub.f32 	%f60, %f59, %f7;
	ld.f32 	%f61, [%rd8+4];
	sub.f32 	%f62, %f61, %f8;
	ld.f32 	%f63, [%rd8+8];
	sub.f32 	%f64, %f63, %f9;
	mul.f32 	%f65, %f62, %f62;
	fma.rn.f32 	%f66, %f60, %f60, %f65;
	fma.rn.f32 	%f67, %f64, %f64, %f66;
	sqrt.rn.f32 	%f68, %f67;
	rcp.rn.f32 	%f69, %f68;
	mul.f32 	%f70, %f69, %f60;
	mul.f32 	%f71, %f69, %f62;
	mul.f32 	%f72, %f69, %f64;
	mul.f32 	%f73, %f2, %f71;
	fma.rn.f32 	%f74, %f1, %f70, %f73;
	fma.rn.f32 	%f13, %f3, %f72, %f74;
	setp.leu.f32 	%p2, %f13, 0f00000000;
	@%p2 bra 	$L__BB2_4;

	ld.global.f32 	%f75, [Kd];
	mul.f32 	%f76, %f13, %f75;
	ld.global.f32 	%f77, [Kd+4];
	mul.f32 	%f78, %f13, %f77;
	ld.global.f32 	%f79, [Kd+8];
	mul.f32 	%f80, %f13, %f79;
	ld.f32 	%f81, [%rd8+12];
	ld.f32 	%f82, [%rd8+16];
	ld.f32 	%f83, [%rd8+20];
	fma.rn.f32 	%f100, %f81, %f76, %f100;
	fma.rn.f32 	%f101, %f82, %f78, %f101;
	fma.rn.f32 	%f102, %f83, %f80, %f102;

$L__BB2_4:
	add.s32 	%r15, %r15, 1;
	cvt.u64.u32 	%rd20, %r15;
	// begin inline asm
	call (%rd15, %rd16, %rd17, %rd18), _rt_buffer_get_size_64, (%rd6, %r4, %r5);
	// end inline asm
	and.b64  	%rd22, %rd15, 4294967295;
	setp.gt.u64 	%p3, %rd22, %rd20;
	@%p3 bra 	$L__BB2_2;

$L__BB2_5:
	st.global.f32 	[prd_radiance], %f100;
	st.global.f32 	[prd_radiance+4], %f101;
	st.global.f32 	[prd_radiance+8], %f102;
	ld.global.f32 	%f84, [ray+12];
	ld.global.f32 	%f85, [t_hit];
	mul.f32 	%f86, %f85, %f84;
	ld.global.f32 	%f87, [ray+16];
	mul.f32 	%f88, %f85, %f87;
	ld.global.f32 	%f89, [ray+20];
	mul.f32 	%f90, %f85, %f89;
	ld.global.f32 	%f91, [l1];
	ld.global.f32 	%f92, [l1+4];
	mul.f32 	%f93, %f92, %f88;
	fma.rn.f32 	%f94, %f91, %f86, %f93;
	ld.global.f32 	%f95, [l1+8];
	fma.rn.f32 	%f96, %f90, %f95, %f94;
	st.global.f32 	[prd_radiance+52], %f96;
	ret;

}
	// .globl	_Z4missv
.visible .entry _Z4missv()
{
	.reg .f32 	%f<4>;
	.reg .b32 	%r<2>;


	ld.global.f32 	%f1, [bg_color];
	ld.global.f32 	%f2, [bg_color+4];
	ld.global.f32 	%f3, [bg_color+8];
	st.global.f32 	[prd_radiance], %f1;
	st.global.f32 	[prd_radiance+4], %f2;
	st.global.f32 	[prd_radiance+8], %f3;
	mov.u32 	%r1, -1;
	st.global.u32 	[prd_radiance+40], %r1;
	ret;

}
	// .globl	_Z4holov
.visible .entry _Z4holov()
{
	.local .align 4 .b8 	__local_depot4[28];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<34>;
	.reg .f32 	%f<131>;
	.reg .b32 	%r<142>;
	.reg .f64 	%fd<21>;
	.reg .b64 	%rd<81>;


	mov.u64 	%SPL, __local_depot4;
	add.u64 	%rd1, %SPL, 0;
	ld.global.f32 	%f40, [fencengshu];
	setp.leu.f32 	%p1, %f40, 0f00000000;
	mov.f32 	%f128, 0f00000000;
	mov.f32 	%f129, %f128;
	@%p1 bra 	$L__BB4_27;

	ld.global.v2.u32 	{%r40, %r41}, [launch_index];
	mov.u32 	%r134, 0;
	ld.global.v2.u32 	{%r44, %r45}, [launch_dim];
	shr.u32 	%r47, %r44, 1;
	sub.s32 	%r48, %r40, %r47;
	mul.lo.s32 	%r49, %r48, %r48;
	cvt.rn.f64.s32 	%fd2, %r49;
	mul.f64 	%fd3, %fd2, 0d3F80624DD2F1A9FC;
	shr.u32 	%r51, %r45, 1;
	sub.s32 	%r52, %r41, %r51;
	cvt.rn.f64.s32 	%fd4, %r52;
	mul.f64 	%fd5, %fd4, 0d3F80624DD2F1A9FC;
	mul.f64 	%fd6, %fd5, %fd4;
	mul.f64 	%fd7, %fd6, 0d3F80624DD2F1A9FC;
	fma.rn.f64 	%fd1, %fd3, 0d3F80624DD2F1A9FC, %fd7;
	cvt.u64.u32 	%rd2, %r40;
	cvt.u64.u32 	%rd3, %r41;
	mov.f32 	%f119, 0f00000000;
	mov.f64 	%fd9, 0d40B3346B9BAEE9CE;
	mov.f32 	%f49, 0fBFC90FDA;
	mov.f32 	%f51, 0fB3A22168;
	add.s64 	%rd4, %rd1, 24;
	mov.f32 	%f129, %f119;
	mov.f32 	%f128, %f119;

$L__BB4_2:
	ld.global.f32 	%f44, [juli];
	ld.global.f32 	%f45, [z];
	fma.rn.f32 	%f46, %f119, %f44, %f45;
	cvt.f64.f32 	%fd8, %f46;
	div.rn.f64 	%fd10, %fd9, %fd8;
	mul.f64 	%fd11, %fd1, %fd10;
	cvt.rn.f32.f64 	%f4, %fd11;
	mul.f32 	%f47, %f4, 0f3F22F983;
	cvt.rni.s32.f32 	%r141, %f47;
	cvt.rn.f32.s32 	%f48, %r141;
	fma.rn.f32 	%f50, %f48, %f49, %f4;
	fma.rn.f32 	%f52, %f48, %f51, %f50;
	mov.f32 	%f53, 0fA7C234C5;
	fma.rn.f32 	%f125, %f48, %f53, %f52;
	abs.f32 	%f6, %f4;
	setp.leu.f32 	%p2, %f6, 0f47CE4780;
	mov.u32 	%r138, %r141;
	mov.f32 	%f122, %f125;
	@%p2 bra 	$L__BB4_10;

	setp.eq.f32 	%p3, %f6, 0f7F800000;
	@%p3 bra 	$L__BB4_9;
	bra.uni 	$L__BB4_4;

$L__BB4_9:
	mov.f32 	%f56, 0f00000000;
	mul.rn.f32 	%f122, %f4, %f56;
	mov.u32 	%r138, %r141;
	bra.uni 	$L__BB4_10;

$L__BB4_4:
	mov.b32 	%r3, %f4;
	bfe.u32 	%r54, %r3, 23, 8;
	add.s32 	%r4, %r54, -128;
	shl.b32 	%r55, %r3, 8;
	or.b32  	%r5, %r55, -2147483648;
	shr.u32 	%r6, %r4, 5;
	mov.u64 	%rd77, 0;
	mov.u32 	%r135, 0;
	mov.u64 	%rd75, __cudart_i2opi_f;
	mov.u64 	%rd76, %rd1;

$L__BB4_5:
	.pragma "nounroll";
	ld.global.nc.u32 	%r56, [%rd75];
	mad.wide.u32 	%rd21, %r56, %r5, %rd77;
	shr.u64 	%rd77, %rd21, 32;
	st.local.u32 	[%rd76], %rd21;
	add.s64 	%rd76, %rd76, 4;
	add.s64 	%rd75, %rd75, 4;
	add.s32 	%r135, %r135, 1;
	setp.ne.s32 	%p4, %r135, 6;
	@%p4 bra 	$L__BB4_5;

	st.local.u32 	[%rd4], %rd77;
	mov.u32 	%r57, 4;
	sub.s32 	%r9, %r57, %r6;
	mov.u32 	%r58, 6;
	sub.s32 	%r59, %r58, %r6;
	mul.wide.s32 	%rd22, %r59, 4;
	add.s64 	%rd23, %rd1, %rd22;
	ld.local.u32 	%r136, [%rd23];
	ld.local.u32 	%r137, [%rd23+-4];
	and.b32  	%r12, %r4, 31;
	setp.eq.s32 	%p5, %r12, 0;
	@%p5 bra 	$L__BB4_8;

	mov.u32 	%r60, 32;
	sub.s32 	%r61, %r60, %r12;
	shr.u32 	%r62, %r137, %r61;
	shl.b32 	%r63, %r136, %r12;
	add.s32 	%r136, %r62, %r63;
	mul.wide.s32 	%rd24, %r9, 4;
	add.s64 	%rd25, %rd1, %rd24;
	ld.local.u32 	%r64, [%rd25];
	shr.u32 	%r65, %r64, %r61;
	shl.b32 	%r66, %r137, %r12;
	add.s32 	%r137, %r65, %r66;

$L__BB4_8:
	and.b32  	%r67, %r3, -2147483648;
	shr.u32 	%r68, %r137, 30;
	shl.b32 	%r69, %r136, 2;
	or.b32  	%r70, %r68, %r69;
	shr.u32 	%r71, %r70, 31;
	shr.u32 	%r72, %r136, 30;
	add.s32 	%r73, %r71, %r72;
	neg.s32 	%r74, %r73;
	setp.eq.s32 	%p6, %r67, 0;
	selp.b32 	%r138, %r73, %r74, %p6;
	setp.ne.s32 	%p7, %r71, 0;
	xor.b32  	%r75, %r67, -2147483648;
	selp.b32 	%r76, %r75, %r67, %p7;
	selp.b32 	%r77, -1, 0, %p7;
	xor.b32  	%r78, %r70, %r77;
	shl.b32 	%r79, %r137, 2;
	xor.b32  	%r80, %r79, %r77;
	cvt.u64.u32 	%rd26, %r78;
	cvt.u64.u32 	%rd27, %r80;
	bfi.b64 	%rd28, %rd26, %rd27, 32, 32;
	cvt.rn.f64.s64 	%fd12, %rd28;
	mul.f64 	%fd13, %fd12, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f54, %fd13;
	setp.eq.s32 	%p8, %r76, 0;
	neg.f32 	%f55, %f54;
	selp.f32 	%f122, %f54, %f55, %p8;

$L__BB4_10:
	add.s32 	%r19, %r138, 1;
	and.b32  	%r20, %r19, 1;
	setp.eq.s32 	%p9, %r20, 0;
	selp.f32 	%f10, %f122, 0f3F800000, %p9;
	mul.rn.f32 	%f11, %f122, %f122;
	mov.f32 	%f123, 0fB94D4153;
	@%p9 bra 	$L__BB4_12;

	mov.f32 	%f58, 0fBAB607ED;
	mov.f32 	%f59, 0f37CBAC00;
	fma.rn.f32 	%f123, %f59, %f11, %f58;

$L__BB4_12:
	selp.f32 	%f60, 0f3C0885E4, 0f3D2AAABB, %p9;
	fma.rn.f32 	%f61, %f123, %f11, %f60;
	selp.f32 	%f62, 0fBE2AAAA8, 0fBEFFFFFF, %p9;
	fma.rn.f32 	%f63, %f61, %f11, %f62;
	mov.f32 	%f64, 0f00000000;
	fma.rn.f32 	%f65, %f11, %f10, %f64;
	fma.rn.f32 	%f124, %f63, %f65, %f10;
	and.b32  	%r81, %r19, 2;
	setp.eq.s32 	%p11, %r81, 0;
	@%p11 bra 	$L__BB4_14;

	mov.f32 	%f67, 0fBF800000;
	fma.rn.f32 	%f124, %f124, %f67, %f64;

$L__BB4_14:
	@%p2 bra 	$L__BB4_22;

	setp.eq.f32 	%p13, %f6, 0f7F800000;
	@%p13 bra 	$L__BB4_21;
	bra.uni 	$L__BB4_16;

$L__BB4_21:
	mul.rn.f32 	%f125, %f4, %f64;
	bra.uni 	$L__BB4_22;

$L__BB4_16:
	mov.b32 	%r21, %f4;
	bfe.u32 	%r82, %r21, 23, 8;
	add.s32 	%r22, %r82, -128;
	shl.b32 	%r83, %r21, 8;
	or.b32  	%r23, %r83, -2147483648;
	shr.u32 	%r24, %r22, 5;
	mov.u64 	%rd79, 0;
	mov.u64 	%rd78, %rd1;
	mov.u64 	%rd80, %rd79;

$L__BB4_17:
	.pragma "nounroll";
	shl.b64 	%rd31, %rd79, 2;
	mov.u64 	%rd32, __cudart_i2opi_f;
	add.s64 	%rd33, %rd32, %rd31;
	ld.global.nc.u32 	%r84, [%rd33];
	mad.wide.u32 	%rd34, %r84, %r23, %rd80;
	shr.u64 	%rd80, %rd34, 32;
	st.local.u32 	[%rd78], %rd34;
	cvt.u32.u64 	%r85, %rd79;
	add.s32 	%r86, %r85, 1;
	cvt.s64.s32 	%rd79, %r86;
	mul.wide.s32 	%rd35, %r86, 4;
	add.s64 	%rd78, %rd1, %rd35;
	setp.ne.s32 	%p14, %r86, 6;
	@%p14 bra 	$L__BB4_17;

	st.local.u32 	[%rd4], %rd80;
	mov.u32 	%r87, 4;
	sub.s32 	%r25, %r87, %r24;
	mov.u32 	%r88, 6;
	sub.s32 	%r89, %r88, %r24;
	mul.wide.s32 	%rd36, %r89, 4;
	add.s64 	%rd37, %rd1, %rd36;
	ld.local.u32 	%r139, [%rd37];
	ld.local.u32 	%r140, [%rd37+-4];
	and.b32  	%r28, %r22, 31;
	setp.eq.s32 	%p15, %r28, 0;
	@%p15 bra 	$L__BB4_20;

	mov.u32 	%r90, 32;
	sub.s32 	%r91, %r90, %r28;
	shr.u32 	%r92, %r140, %r91;
	shl.b32 	%r93, %r139, %r28;
	add.s32 	%r139, %r92, %r93;
	mul.wide.s32 	%rd38, %r25, 4;
	add.s64 	%rd39, %rd1, %rd38;
	ld.local.u32 	%r94, [%rd39];
	shr.u32 	%r95, %r94, %r91;
	shl.b32 	%r96, %r140, %r28;
	add.s32 	%r140, %r95, %r96;

$L__BB4_20:
	and.b32  	%r97, %r21, -2147483648;
	shr.u32 	%r98, %r140, 30;
	shl.b32 	%r99, %r139, 2;
	or.b32  	%r100, %r98, %r99;
	shr.u32 	%r101, %r100, 31;
	shr.u32 	%r102, %r139, 30;
	add.s32 	%r103, %r101, %r102;
	neg.s32 	%r104, %r103;
	setp.eq.s32 	%p16, %r97, 0;
	selp.b32 	%r141, %r103, %r104, %p16;
	setp.ne.s32 	%p17, %r101, 0;
	xor.b32  	%r105, %r97, -2147483648;
	selp.b32 	%r106, %r105, %r97, %p17;
	selp.b32 	%r107, -1, 0, %p17;
	xor.b32  	%r108, %r100, %r107;
	shl.b32 	%r109, %r140, 2;
	xor.b32  	%r110, %r109, %r107;
	cvt.u64.u32 	%rd40, %r108;
	cvt.u64.u32 	%rd41, %r110;
	bfi.b64 	%rd42, %rd40, %rd41, 32, 32;
	cvt.rn.f64.s64 	%fd14, %rd42;
	mul.f64 	%fd15, %fd14, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f68, %fd15;
	setp.eq.s32 	%p18, %r106, 0;
	neg.f32 	%f69, %f68;
	selp.f32 	%f125, %f68, %f69, %p18;

$L__BB4_22:
	and.b32  	%r35, %r141, 1;
	setp.eq.s32 	%p19, %r35, 0;
	selp.f32 	%f20, %f125, 0f3F800000, %p19;
	mul.rn.f32 	%f21, %f125, %f125;
	mov.f32 	%f126, 0fB94D4153;
	@%p19 bra 	$L__BB4_24;

	mov.f32 	%f72, 0fBAB607ED;
	mov.f32 	%f73, 0f37CBAC00;
	fma.rn.f32 	%f126, %f73, %f21, %f72;

$L__BB4_24:
	selp.f32 	%f74, 0f3C0885E4, 0f3D2AAABB, %p19;
	fma.rn.f32 	%f75, %f126, %f21, %f74;
	selp.f32 	%f76, 0fBE2AAAA8, 0fBEFFFFFF, %p19;
	fma.rn.f32 	%f77, %f75, %f21, %f76;
	fma.rn.f32 	%f79, %f21, %f20, %f64;
	fma.rn.f32 	%f127, %f77, %f79, %f20;
	and.b32  	%r111, %r141, 2;
	setp.eq.s32 	%p21, %r111, 0;
	@%p21 bra 	$L__BB4_26;

	mov.f32 	%f81, 0fBF800000;
	fma.rn.f32 	%f127, %f127, %f81, %f64;

$L__BB4_26:
	cvt.u64.u32 	%rd65, %r134;
	mov.u64 	%rd67, complex;
	cvta.global.u64 	%rd44, %rd67;
	mov.u32 	%r118, 3;
	mov.u32 	%r119, 8;
	mov.u64 	%rd66, 0;
	// begin inline asm
	call (%rd43), _rt_buffer_get_64, (%rd44, %r118, %r119, %rd2, %rd3, %rd65, %rd66);
	// end inline asm
	ld.f32 	%f82, [%rd43];
	fma.rn.f32 	%f83, %f124, %f82, %f129;
	// begin inline asm
	call (%rd49), _rt_buffer_get_64, (%rd44, %r118, %r119, %rd2, %rd3, %rd65, %rd66);
	// end inline asm
	ld.f32 	%f84, [%rd49+4];
	mul.f32 	%f85, %f127, %f84;
	sub.f32 	%f129, %f83, %f85;
	// begin inline asm
	call (%rd55), _rt_buffer_get_64, (%rd44, %r118, %r119, %rd2, %rd3, %rd65, %rd66);
	// end inline asm
	ld.f32 	%f86, [%rd55];
	fma.rn.f32 	%f87, %f127, %f86, %f128;
	// begin inline asm
	call (%rd61), _rt_buffer_get_64, (%rd44, %r118, %r119, %rd2, %rd3, %rd65, %rd66);
	// end inline asm
	ld.f32 	%f88, [%rd61+4];
	fma.rn.f32 	%f128, %f124, %f88, %f87;
	add.s32 	%r134, %r134, 1;
	cvt.rn.f32.s32 	%f119, %r134;
	ld.global.f32 	%f89, [fencengshu];
	setp.gt.f32 	%p22, %f89, %f119;
	@%p22 bra 	$L__BB4_2;

$L__BB4_27:
	abs.f32 	%f32, %f129;
	setp.eq.f32 	%p23, %f32, 0f00000000;
	abs.f32 	%f33, %f128;
	setp.eq.f32 	%p24, %f33, 0f00000000;
	and.pred  	%p25, %p23, %p24;
	mov.b32 	%r37, %f129;
	mov.b32 	%r120, %f128;
	and.b32  	%r38, %r120, -2147483648;
	@%p25 bra 	$L__BB4_31;
	bra.uni 	$L__BB4_28;

$L__BB4_31:
	shr.s32 	%r125, %r37, 31;
	and.b32  	%r126, %r125, 1078530011;
	or.b32  	%r127, %r126, %r38;
	mov.b32 	%f130, %r127;
	bra.uni 	$L__BB4_32;

$L__BB4_28:
	setp.eq.f32 	%p26, %f32, 0f7F800000;
	setp.eq.f32 	%p27, %f33, 0f7F800000;
	and.pred  	%p28, %p26, %p27;
	@%p28 bra 	$L__BB4_30;
	bra.uni 	$L__BB4_29;

$L__BB4_30:
	setp.lt.s32 	%p32, %r37, 0;
	selp.b32 	%r123, 1075235812, 1061752795, %p32;
	or.b32  	%r124, %r123, %r38;
	mov.b32 	%f130, %r124;
	bra.uni 	$L__BB4_32;

$L__BB4_29:
	setp.lt.s32 	%p29, %r37, 0;
	min.f32 	%f90, %f33, %f32;
	max.f32 	%f91, %f33, %f32;
	div.rn.f32 	%f92, %f90, %f91;
	mul.rn.f32 	%f93, %f92, %f92;
	mov.f32 	%f94, 0fC0B59883;
	mov.f32 	%f95, 0fBF52C7EA;
	fma.rn.f32 	%f96, %f93, %f95, %f94;
	mov.f32 	%f97, 0fC0D21907;
	fma.rn.f32 	%f98, %f96, %f93, %f97;
	mul.f32 	%f99, %f93, %f98;
	mul.f32 	%f100, %f92, %f99;
	add.f32 	%f101, %f93, 0f41355DC0;
	mov.f32 	%f102, 0f41E6BD60;
	fma.rn.f32 	%f103, %f101, %f93, %f102;
	mov.f32 	%f104, 0f419D92C8;
	fma.rn.f32 	%f105, %f103, %f93, %f104;
	rcp.rn.f32 	%f106, %f105;
	fma.rn.f32 	%f107, %f100, %f106, %f92;
	mov.f32 	%f108, 0f3FC90FDB;
	sub.f32 	%f109, %f108, %f107;
	setp.gt.f32 	%p30, %f33, %f32;
	selp.f32 	%f110, %f109, %f107, %p30;
	mov.f32 	%f111, 0f40490FDB;
	sub.f32 	%f112, %f111, %f110;
	selp.f32 	%f113, %f112, %f110, %p29;
	mov.b32 	%r121, %f113;
	or.b32  	%r122, %r38, %r121;
	mov.b32 	%f114, %r122;
	add.f32 	%f115, %f32, %f33;
	setp.le.f32 	%p31, %f115, 0f7F800000;
	selp.f32 	%f130, %f114, %f115, %p31;

$L__BB4_32:
	cvt.f64.f32 	%fd16, %f130;
	add.f64 	%fd17, %fd16, 0d401921FB4D12D84A;
	cvt.rn.f32.f64 	%f116, %fd17;
	setp.lt.f32 	%p33, %f130, 0f00000000;
	selp.f32 	%f117, %f116, %f130, %p33;
	cvt.f64.f32 	%fd18, %f117;
	mul.f64 	%fd19, %fd18, 0d3FE0000000000000;
	div.rn.f64 	%fd20, %fd19, 0d400921FB4D12D84A;
	cvt.rn.f32.f64 	%f118, %fd20;
	mov.u64 	%rd73, 0;
	ld.global.v2.u32 	{%r130, %r131}, [launch_index];
	cvt.u64.u32 	%rd70, %r130;
	cvt.u64.u32 	%rd71, %r131;
	mov.u64 	%rd74, output_buffer;
	cvta.global.u64 	%rd69, %rd74;
	mov.u32 	%r128, 2;
	mov.u32 	%r129, 4;
	// begin inline asm
	call (%rd68), _rt_buffer_get_64, (%rd69, %r128, %r129, %rd70, %rd71, %rd73, %rd73);
	// end inline asm
	st.f32 	[%rd68], %f118;
	ret;

}

