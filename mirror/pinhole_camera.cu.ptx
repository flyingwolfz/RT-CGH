//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-26907403
// Cuda compilation tools, release 10.1, V10.1.243
// Based on LLVM 3.4svn
//

.version 6.4
.target sm_35
.address_size 64

	// .globl	_Z14pinhole_camerav
.extern .func  (.param .b32 func_retval0) vprintf
(
	.param .b64 vprintf_param_0,
	.param .b64 vprintf_param_1
)
;
.global .align 4 .b8 eye[12];
.global .align 4 .b8 U[12];
.global .align 4 .b8 V[12];
.global .align 4 .b8 W[12];
.global .align 4 .b8 bad_color[12];
.global .align 4 .b8 bg_color[12];
.global .align 4 .f32 scene_epsilon;
.global .align 4 .f32 z;
.global .align 4 .f32 juli;
.global .align 1 .b8 output_buffer[1];
.global .align 4 .b8 top_object[4];
.global .align 4 .f32 t_hit;
.global .align 8 .b8 launch_index[8];
.global .align 8 .b8 launch_dim[8];
.global .align 4 .b8 shading_normal[12];
.global .align 4 .b8 prd_radiance[32];
.global .align 4 .b8 ray[36];
.global .align 4 .b8 l1[12];
.global .align 4 .f32 fencengshu;
.global .align 4 .f32 maxextent;
.global .align 4 .f32 len;
.global .align 1 .b8 random[1];
.global .align 1 .b8 complex[1];
.global .align 4 .b8 Ka[12];
.global .align 4 .b8 Kd[12];
.global .align 4 .b8 ambient_light_color[12];
.global .align 1 .b8 lights[1];
.global .align 4 .b8 _ZN21rti_internal_typeinfo3eyeE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo1UE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo1VE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo1WE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9bad_colorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8bg_colorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo13scene_epsilonE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo1zE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo4juliE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10top_objectE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo5t_hitE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12launch_indexE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10launch_dimE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14shading_normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12prd_radianceE[8] = {82, 97, 121, 0, 32, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo3rayE[8] = {82, 97, 121, 0, 36, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo2l1E[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10fencengshuE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9maxextentE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo3lenE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo2KaE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo2KdE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo19ambient_light_colorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 1 .b8 _ZN21rti_internal_typename3eyeE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename1UE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename1VE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename1WE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename9bad_colorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename8bg_colorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename13scene_epsilonE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename1zE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename4juliE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename10top_objectE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename5t_hitE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12launch_indexE[6] = {117, 105, 110, 116, 50, 0};
.global .align 1 .b8 _ZN21rti_internal_typename10launch_dimE[6] = {117, 105, 110, 116, 50, 0};
.global .align 1 .b8 _ZN21rti_internal_typename14shading_normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12prd_radianceE[20] = {80, 101, 114, 82, 97, 121, 68, 97, 116, 97, 95, 114, 97, 100, 105, 97, 110, 99, 101, 0};
.global .align 1 .b8 _ZN21rti_internal_typename3rayE[11] = {111, 112, 116, 105, 120, 58, 58, 82, 97, 121, 0};
.global .align 1 .b8 _ZN21rti_internal_typename2l1E[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename10fencengshuE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename9maxextentE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename3lenE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename2KaE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename2KdE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename19ambient_light_colorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum3eyeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum1UE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum1VE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum1WE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9bad_colorE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8bg_colorE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum13scene_epsilonE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum1zE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum4juliE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10top_objectE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum5t_hitE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12launch_indexE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10launch_dimE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14shading_normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12prd_radianceE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum3rayE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum2l1E = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10fencengshuE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9maxextentE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum3lenE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum2KaE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum2KdE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum19ambient_light_colorE = 4919;
.global .align 1 .b8 _ZN21rti_internal_semantic3eyeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic1UE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic1VE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic1WE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9bad_colorE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8bg_colorE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic13scene_epsilonE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic1zE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic4juliE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic10top_objectE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic5t_hitE[23] = {114, 116, 73, 110, 116, 101, 114, 115, 101, 99, 116, 105, 111, 110, 68, 105, 115, 116, 97, 110, 99, 101, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic12launch_indexE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic10launch_dimE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic14shading_normalE[25] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 115, 104, 97, 100, 105, 110, 103, 95, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic12prd_radianceE[10] = {114, 116, 80, 97, 121, 108, 111, 97, 100, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic3rayE[13] = {114, 116, 67, 117, 114, 114, 101, 110, 116, 82, 97, 121, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic2l1E[1];
.global .align 1 .b8 _ZN21rti_internal_semantic10fencengshuE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9maxextentE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic3lenE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic2KaE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic2KdE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic19ambient_light_colorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3eyeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation1UE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation1VE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation1WE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9bad_colorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8bg_colorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation13scene_epsilonE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation1zE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation4juliE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10top_objectE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation5t_hitE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12launch_indexE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10launch_dimE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14shading_normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12prd_radianceE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3rayE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation2l1E[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10fencengshuE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9maxextentE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3lenE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation2KaE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation2KdE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation19ambient_light_colorE[1];
.global .align 1 .b8 $str[64] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 83, 84, 65, 67, 75, 95, 79, 86, 69, 82, 70, 76, 79, 87, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};
.global .align 1 .b8 $str1[70] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 84, 82, 65, 67, 69, 95, 68, 69, 80, 84, 72, 95, 69, 88, 67, 69, 69, 68, 69, 68, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};
.global .align 1 .b8 $str2[236] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 66, 85, 70, 70, 69, 82, 95, 73, 78, 68, 69, 88, 95, 79, 85, 84, 95, 79, 70, 95, 66, 79, 85, 78, 68, 83, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 100, 105, 109, 101, 110, 115, 105, 111, 110, 97, 108, 105, 116, 121, 32, 58, 32, 37, 100, 10, 32, 32, 98, 117, 102, 102, 101, 114, 32, 100, 101, 116, 97, 105, 108, 115, 32, 58, 32, 37, 115, 10, 32, 32, 98, 117, 102, 102, 101, 114, 32, 73, 68, 32, 32, 32, 32, 32, 32, 58, 32, 37, 100, 10, 32, 32, 115, 105, 122, 101, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 108, 108, 100, 120, 37, 108, 108, 100, 120, 37, 108, 108, 100, 10, 32, 32, 101, 108, 101, 109, 101, 110, 116, 32, 115, 105, 122, 101, 32, 32, 32, 58, 32, 37, 100, 10, 32, 32, 97, 99, 99, 101, 115, 115, 101, 100, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 108, 108, 100, 44, 32, 37, 108, 108, 100, 44, 32, 37, 108, 108, 100, 10, 0};
.global .align 1 .b8 $str3[138] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 80, 82, 79, 71, 82, 65, 77, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 32, 32, 112, 114, 111, 103, 114, 97, 109, 32, 73, 68, 32, 101, 113, 117, 97, 108, 32, 116, 111, 32, 82, 84, 95, 80, 82, 79, 71, 82, 65, 77, 95, 73, 68, 95, 78, 85, 76, 76, 32, 117, 115, 101, 100, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 108, 111, 99, 97, 116, 105, 111, 110, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 115, 10, 0};
.global .align 1 .b8 $str4[148] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 80, 82, 79, 71, 82, 65, 77, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 32, 32, 112, 114, 111, 103, 114, 97, 109, 32, 73, 68, 32, 40, 37, 100, 41, 32, 105, 115, 32, 110, 111, 116, 32, 105, 110, 32, 116, 104, 101, 32, 118, 97, 108, 105, 100, 32, 114, 97, 110, 103, 101, 32, 111, 102, 32, 91, 49, 44, 115, 105, 122, 101, 41, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 108, 111, 99, 97, 116, 105, 111, 110, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 115, 10, 0};
.global .align 1 .b8 $str5[136] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 80, 82, 79, 71, 82, 65, 77, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 32, 32, 112, 114, 111, 103, 114, 97, 109, 32, 73, 68, 32, 40, 37, 100, 41, 32, 111, 102, 32, 97, 32, 100, 101, 108, 101, 116, 101, 100, 32, 112, 114, 111, 103, 114, 97, 109, 32, 117, 115, 101, 100, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 108, 111, 99, 97, 116, 105, 111, 110, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 115, 10, 0};
.global .align 1 .b8 $str6[98] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 84, 69, 88, 84, 85, 82, 69, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 32, 32, 116, 101, 120, 116, 117, 114, 101, 32, 73, 68, 32, 105, 115, 32, 105, 110, 118, 97, 108, 105, 100, 32, 40, 48, 41, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};
.global .align 1 .b8 $str7[126] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 84, 69, 88, 84, 85, 82, 69, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 32, 32, 116, 101, 120, 116, 117, 114, 101, 32, 73, 68, 32, 40, 37, 100, 41, 32, 105, 115, 32, 110, 111, 116, 32, 105, 110, 32, 116, 104, 101, 32, 118, 97, 108, 105, 100, 32, 114, 97, 110, 103, 101, 32, 111, 102, 32, 91, 49, 44, 115, 105, 122, 101, 41, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};
.global .align 1 .b8 $str8[99] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 84, 69, 88, 84, 85, 82, 69, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 32, 32, 116, 101, 120, 116, 117, 114, 101, 32, 73, 68, 32, 105, 115, 32, 105, 110, 118, 97, 108, 105, 100, 32, 40, 45, 49, 41, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};
.global .align 1 .b8 $str9[135] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 66, 85, 70, 70, 69, 82, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 32, 32, 98, 117, 102, 102, 101, 114, 32, 73, 68, 32, 101, 113, 117, 97, 108, 32, 116, 111, 32, 82, 84, 95, 66, 85, 70, 70, 69, 82, 95, 73, 68, 95, 78, 85, 76, 76, 32, 117, 115, 101, 100, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 108, 111, 99, 97, 116, 105, 111, 110, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 115, 10, 0};
.global .align 1 .b8 $str10[94] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 66, 85, 70, 70, 69, 82, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 32, 32, 98, 117, 102, 102, 101, 114, 32, 73, 68, 32, 40, 37, 100, 41, 32, 105, 115, 32, 110, 111, 116, 32, 105, 110, 32, 116, 104, 101, 32, 118, 97, 108, 105, 100, 32, 114, 97, 110, 103, 101, 32, 111, 102, 32, 91, 49, 44, 115, 105, 122, 101, 41, 10, 0};
.global .align 1 .b8 $str11[53] = {32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 108, 111, 99, 97, 116, 105, 111, 110, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 115, 10, 0};
.global .align 1 .b8 $str12[133] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 66, 85, 70, 70, 69, 82, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 32, 32, 98, 117, 102, 102, 101, 114, 32, 73, 68, 32, 40, 37, 100, 41, 32, 111, 102, 32, 97, 32, 100, 101, 108, 101, 116, 101, 100, 32, 98, 117, 102, 102, 101, 114, 32, 117, 115, 101, 100, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 108, 111, 99, 97, 116, 105, 111, 110, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 115, 10, 0};
.global .align 1 .b8 $str13[141] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 73, 78, 68, 69, 88, 95, 79, 85, 84, 95, 79, 70, 95, 66, 79, 85, 78, 68, 83, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 108, 111, 99, 97, 116, 105, 111, 110, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 115, 10, 32, 32, 115, 105, 122, 101, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 108, 108, 100, 10, 32, 32, 97, 99, 99, 101, 115, 115, 101, 100, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 108, 108, 100, 10, 0};
.global .align 1 .b8 $str14[200] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 73, 78, 86, 65, 76, 73, 68, 95, 82, 65, 89, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 108, 111, 99, 97, 116, 105, 111, 110, 32, 32, 32, 32, 32, 32, 58, 32, 37, 115, 10, 32, 32, 114, 97, 121, 32, 111, 114, 105, 103, 105, 110, 32, 32, 32, 32, 58, 32, 37, 102, 32, 37, 102, 32, 37, 102, 10, 32, 32, 114, 97, 121, 32, 100, 105, 114, 101, 99, 116, 105, 111, 110, 32, 58, 32, 37, 102, 32, 37, 102, 32, 37, 102, 10, 32, 32, 114, 97, 121, 32, 116, 121, 112, 101, 32, 32, 32, 32, 32, 32, 58, 32, 37, 100, 10, 32, 32, 114, 97, 121, 32, 116, 109, 105, 110, 32, 32, 32, 32, 32, 32, 58, 32, 37, 102, 10, 32, 32, 114, 97, 121, 32, 116, 109, 97, 120, 32, 32, 32, 32, 32, 32, 58, 32, 37, 102, 10, 0};
.global .align 1 .b8 $str15[164] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 80, 65, 89, 76, 79, 65, 68, 95, 65, 67, 67, 69, 83, 83, 95, 79, 85, 84, 95, 79, 70, 95, 66, 79, 85, 78, 68, 83, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 108, 111, 99, 97, 116, 105, 111, 110, 32, 32, 32, 32, 32, 58, 32, 37, 115, 10, 32, 32, 118, 97, 108, 117, 101, 32, 111, 102, 102, 115, 101, 116, 32, 58, 32, 37, 108, 108, 100, 10, 32, 32, 118, 97, 108, 117, 101, 32, 115, 105, 122, 101, 32, 32, 32, 58, 32, 37, 108, 108, 100, 10, 32, 32, 112, 97, 121, 108, 111, 97, 100, 32, 115, 105, 122, 101, 32, 58, 32, 37, 108, 108, 100, 10, 0};
.global .align 1 .b8 $str16[123] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 85, 83, 69, 82, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 67, 79, 68, 69, 95, 79, 85, 84, 95, 79, 70, 95, 66, 79, 85, 78, 68, 83, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 108, 111, 99, 97, 116, 105, 111, 110, 32, 32, 32, 32, 32, 58, 32, 37, 115, 10, 32, 32, 99, 111, 100, 101, 32, 32, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 100, 10, 0};
.global .align 1 .b8 $str17[57] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 85, 83, 69, 82, 43, 37, 100, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};
.global .align 1 .b8 $str18[64] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 73, 78, 84, 69, 82, 78, 65, 76, 95, 69, 82, 82, 79, 82, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};
.global .align 1 .b8 $str19[54] = {67, 97, 117, 103, 104, 116, 32, 117, 110, 107, 110, 111, 119, 110, 32, 101, 120, 99, 101, 112, 116, 105, 111, 110, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};
.const .align 4 .b8 __cudart_i2opi_f[24] = {65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};

.visible .entry _Z14pinhole_camerav(

)
{
	.local .align 4 .b8 	__local_depot0[60];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<59>;
	.reg .f32 	%f<299>;
	.reg .b32 	%r<424>;
	.reg .f64 	%fd<38>;
	.reg .b64 	%rd<85>;


	mov.u64 	%SPL, __local_depot0;
	cvta.local.u64 	%SP, %SPL;
	add.u64 	%rd30, %SP, 28;
	add.u64 	%rd31, %SPL, 28;
	ld.global.v2.u32 	{%r152, %r153}, [launch_index];
	mov.u32 	%r415, 0;
	cvt.rn.f32.u32	%f88, %r152;
	cvt.rn.f32.u32	%f89, %r153;
	ld.global.v2.u32 	{%r156, %r157}, [launch_dim];
	cvt.rn.f32.u32	%f90, %r156;
	cvt.rn.f32.u32	%f91, %r157;
	div.rn.f32 	%f92, %f88, %f90;
	div.rn.f32 	%f93, %f89, %f91;
	fma.rn.f32 	%f94, %f92, 0f40000000, 0fBF800000;
	fma.rn.f32 	%f95, %f93, 0f40000000, 0fBF800000;
	ld.global.f32 	%f80, [eye];
	ld.global.f32 	%f81, [eye+4];
	ld.global.f32 	%f82, [eye+8];
	ld.global.f32 	%f96, [U];
	ld.global.f32 	%f97, [U+4];
	ld.global.f32 	%f98, [U+8];
	ld.global.f32 	%f99, [V];
	mul.f32 	%f100, %f95, %f99;
	ld.global.f32 	%f101, [V+4];
	mul.f32 	%f102, %f95, %f101;
	ld.global.f32 	%f103, [V+8];
	mul.f32 	%f104, %f95, %f103;
	fma.rn.f32 	%f105, %f94, %f96, %f100;
	fma.rn.f32 	%f106, %f94, %f97, %f102;
	fma.rn.f32 	%f107, %f94, %f98, %f104;
	ld.global.f32 	%f108, [W];
	add.f32 	%f109, %f105, %f108;
	ld.global.f32 	%f110, [W+4];
	add.f32 	%f111, %f106, %f110;
	ld.global.f32 	%f112, [W+8];
	add.f32 	%f113, %f107, %f112;
	mul.f32 	%f114, %f111, %f111;
	fma.rn.f32 	%f115, %f109, %f109, %f114;
	fma.rn.f32 	%f116, %f113, %f113, %f115;
	sqrt.rn.f32 	%f117, %f116;
	rcp.rn.f32 	%f118, %f117;
	mul.f32 	%f83, %f109, %f118;
	mul.f32 	%f84, %f111, %f118;
	mul.f32 	%f85, %f113, %f118;
	ld.global.f32 	%f86, [scene_epsilon];
	add.s64 	%rd1, %rd31, 12;
	st.local.u32 	[%rd31+12], %r415;
	st.local.u32 	[%rd31+28], %r415;
	ld.global.u32 	%r147, [top_object];
	mov.u32 	%r149, 255;
	mov.u32 	%r151, 32;
	mov.f32 	%f87, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_mask_flags_64, (%r147, %f80, %f81, %f82, %f83, %f84, %f85, %r415, %f86, %f87, %r149, %r415, %rd30, %r151);
	// inline asm
	ld.global.v2.u32 	{%r160, %r161}, [launch_index];
	cvt.u64.u32	%rd2, %r160;
	cvt.u64.u32	%rd3, %r161;
	ld.global.f32 	%f274, [fencengshu];
	setp.leu.f32	%p1, %f274, 0f00000000;
	@%p1 bra 	BB0_3;

	mov.u32 	%r383, 0;

BB0_2:
	cvt.u64.u32	%rd36, %r383;
	mov.u64 	%rd38, complex;
	cvta.global.u64 	%rd33, %rd38;
	mov.u32 	%r163, 3;
	mov.u32 	%r164, 8;
	mov.u64 	%rd37, 0;
	// inline asm
	call (%rd32), _rt_buffer_get_64, (%rd33, %r163, %r164, %rd2, %rd3, %rd36, %rd37);
	// inline asm
	mov.f32 	%f119, 0f00000000;
	st.v2.f32 	[%rd32], {%f119, %f119};
	add.s32 	%r383, %r383, 1;
	cvt.rn.f32.s32	%f120, %r383;
	ld.global.f32 	%f274, [fencengshu];
	setp.lt.f32	%p2, %f120, %f274;
	@%p2 bra 	BB0_2;

BB0_3:
	ld.local.f32 	%f4, [%rd1];
	setp.leu.f32	%p3, %f4, 0f3DCCCCCD;
	@%p3 bra 	BB0_52;

	ld.global.f32 	%f121, [len];
	sub.f32 	%f122, %f4, %f121;
	ld.global.f32 	%f123, [maxextent];
	fma.rn.f32 	%f124, %f123, 0f3F000000, %f122;
	div.rn.f32 	%f125, %f124, %f123;
	mul.f32 	%f126, %f125, %f274;
	cvt.rmi.f32.f32	%f5, %f126;
	ld.global.f32 	%f127, [juli];
	ld.global.f32 	%f128, [z];
	fma.rn.f32 	%f129, %f5, %f127, %f128;
	cvt.f64.f32	%fd3, %f129;
	mul.f64 	%fd4, %fd3, 0d3F44F0520D130DFA;
	ld.global.v2.u32 	{%r167, %r168}, [launch_dim];
	cvt.rn.f64.u32	%fd5, %r167;
	div.rn.f64 	%fd6, %fd4, %fd5;
	div.rn.f64 	%fd7, %fd6, 0d3F80624DD2F1A9FC;
	cvt.rn.f32.f64	%f130, %fd7;
	cvt.rn.f64.u32	%fd8, %r168;
	div.rn.f64 	%fd9, %fd4, %fd8;
	div.rn.f64 	%fd10, %fd9, 0d3F80624DD2F1A9FC;
	cvt.rn.f32.f64	%f131, %fd10;
	ld.local.f32 	%f132, [%rd1+-12];
	cvt.f64.f32	%fd11, %f132;
	ld.local.f32 	%f133, [%rd1+-8];
	cvt.f64.f32	%fd12, %f133;
	mul.f64 	%fd13, %fd12, 0d3FE2E147AE147AE1;
	fma.rn.f64 	%fd14, %fd11, 0d3FD3333333333333, %fd13;
	ld.local.f32 	%f134, [%rd1+-4];
	cvt.f64.f32	%fd15, %f134;
	fma.rn.f64 	%fd1, %fd15, 0d3FBC28F5C28F5C29, %fd14;
	ld.global.v2.u32 	{%r171, %r172}, [launch_index];
	shr.u32 	%r175, %r167, 1;
	sub.s32 	%r176, %r171, %r175;
	shr.u32 	%r177, %r168, 1;
	sub.s32 	%r178, %r172, %r177;
	mov.f64 	%fd16, 0d40B3346B9BAEE9CE;
	div.rn.f64 	%fd17, %fd16, %fd3;
	cvt.rn.f32.s32	%f135, %r176;
	mul.f32 	%f136, %f130, %f135;
	mul.f32 	%f137, %f135, %f136;
	cvt.rn.f32.s32	%f138, %r178;
	mul.f32 	%f139, %f131, %f138;
	mul.f32 	%f140, %f138, %f139;
	mul.f32 	%f141, %f131, %f140;
	fma.rn.f32 	%f142, %f130, %f137, %f141;
	cvt.u64.u32	%rd41, %r171;
	cvt.u64.u32	%rd42, %r172;
	mov.u64 	%rd45, random;
	cvta.global.u64 	%rd40, %rd45;
	mov.u32 	%r165, 2;
	mov.u32 	%r166, 4;
	mov.u64 	%rd44, 0;
	// inline asm
	call (%rd39), _rt_buffer_get_64, (%rd40, %r165, %r166, %rd41, %rd42, %rd44, %rd44);
	// inline asm
	ld.f32 	%f143, [%rd39];
	add.f32 	%f144, %f143, %f142;
	cvt.f64.f32	%fd18, %f144;
	mul.f64 	%fd19, %fd17, %fd18;
	cvt.rn.f32.f64	%f281, %fd19;
	ld.global.f32 	%f145, [fencengshu];
	setp.geu.f32	%p4, %f5, %f145;
	@%p4 bra 	BB0_52;

	cvt.rzi.u32.f32	%r181, %f5;
	cvt.u64.u32	%rd50, %r181;
	mov.u64 	%rd52, complex;
	cvta.global.u64 	%rd47, %rd52;
	mov.u32 	%r179, 3;
	mov.u32 	%r180, 8;
	// inline asm
	call (%rd46), _rt_buffer_get_64, (%rd47, %r179, %r180, %rd2, %rd3, %rd50, %rd44);
	// inline asm
	add.u64 	%rd5, %SPL, 0;
	abs.f32 	%f7, %f281;
	setp.neu.f32	%p5, %f7, 0f7F800000;
	mov.f32 	%f275, %f281;
	@%p5 bra 	BB0_7;

	mov.f32 	%f146, 0f00000000;
	mul.rn.f32 	%f275, %f281, %f146;

BB0_7:
	mul.f32 	%f147, %f275, 0f3F22F983;
	cvt.rni.s32.f32	%r393, %f147;
	cvt.rn.f32.s32	%f148, %r393;
	neg.f32 	%f149, %f148;
	mov.f32 	%f150, 0f3FC90FDA;
	fma.rn.f32 	%f151, %f149, %f150, %f275;
	mov.f32 	%f152, 0f33A22168;
	fma.rn.f32 	%f153, %f149, %f152, %f151;
	mov.f32 	%f154, 0f27C234C5;
	fma.rn.f32 	%f276, %f149, %f154, %f153;
	abs.f32 	%f155, %f275;
	add.s64 	%rd6, %rd5, 24;
	setp.leu.f32	%p6, %f155, 0f47CE4780;
	@%p6 bra 	BB0_18;

	mov.b32 	 %r6, %f275;
	shr.u32 	%r7, %r6, 23;
	shl.b32 	%r184, %r6, 8;
	or.b32  	%r8, %r184, -2147483648;
	mov.u32 	%r385, 0;
	mov.u64 	%rd77, __cudart_i2opi_f;
	mov.u32 	%r384, -6;
	mov.u64 	%rd78, %rd5;

BB0_9:
	.pragma "nounroll";
	ld.const.u32 	%r187, [%rd77];
	// inline asm
	{
	mad.lo.cc.u32   %r185, %r187, %r8, %r385;
	madc.hi.u32     %r385, %r187, %r8,  0;
	}
	// inline asm
	st.local.u32 	[%rd78], %r185;
	add.s64 	%rd78, %rd78, 4;
	add.s64 	%rd77, %rd77, 4;
	add.s32 	%r384, %r384, 1;
	setp.ne.s32	%p7, %r384, 0;
	@%p7 bra 	BB0_9;

	and.b32  	%r190, %r7, 255;
	add.s32 	%r191, %r190, -128;
	shr.u32 	%r192, %r191, 5;
	and.b32  	%r13, %r6, -2147483648;
	st.local.u32 	[%rd6], %r385;
	mov.u32 	%r193, 6;
	sub.s32 	%r194, %r193, %r192;
	mul.wide.s32 	%rd55, %r194, 4;
	add.s64 	%rd11, %rd5, %rd55;
	ld.local.u32 	%r386, [%rd11];
	ld.local.u32 	%r387, [%rd11+-4];
	and.b32  	%r16, %r7, 31;
	setp.eq.s32	%p8, %r16, 0;
	@%p8 bra 	BB0_12;

	sub.s32 	%r196, %r151, %r16;
	shr.u32 	%r197, %r387, %r196;
	shl.b32 	%r198, %r386, %r16;
	add.s32 	%r386, %r197, %r198;
	ld.local.u32 	%r199, [%rd11+-8];
	shr.u32 	%r200, %r199, %r196;
	shl.b32 	%r201, %r387, %r16;
	add.s32 	%r387, %r200, %r201;

BB0_12:
	shr.u32 	%r202, %r387, 30;
	shl.b32 	%r203, %r386, 2;
	add.s32 	%r388, %r202, %r203;
	shl.b32 	%r22, %r387, 2;
	shr.u32 	%r204, %r388, 31;
	shr.u32 	%r205, %r386, 30;
	add.s32 	%r23, %r204, %r205;
	setp.eq.s32	%p9, %r204, 0;
	@%p9 bra 	BB0_13;

	not.b32 	%r206, %r388;
	neg.s32 	%r390, %r22;
	setp.eq.s32	%p10, %r22, 0;
	selp.u32	%r207, 1, 0, %p10;
	add.s32 	%r388, %r207, %r206;
	xor.b32  	%r389, %r13, -2147483648;
	bra.uni 	BB0_15;

BB0_13:
	mov.u32 	%r389, %r13;
	mov.u32 	%r390, %r22;

BB0_15:
	clz.b32 	%r392, %r388;
	setp.eq.s32	%p11, %r392, 0;
	shl.b32 	%r208, %r388, %r392;
	sub.s32 	%r210, %r151, %r392;
	shr.u32 	%r211, %r390, %r210;
	add.s32 	%r212, %r211, %r208;
	selp.b32	%r31, %r388, %r212, %p11;
	mov.u32 	%r213, -921707870;
	mul.hi.u32 	%r391, %r31, %r213;
	setp.eq.s32	%p12, %r13, 0;
	neg.s32 	%r214, %r23;
	selp.b32	%r393, %r23, %r214, %p12;
	setp.lt.s32	%p13, %r391, 1;
	@%p13 bra 	BB0_17;

	mul.lo.s32 	%r215, %r31, -921707870;
	shr.u32 	%r216, %r215, 31;
	shl.b32 	%r217, %r391, 1;
	add.s32 	%r391, %r216, %r217;
	add.s32 	%r392, %r392, 1;

BB0_17:
	mov.u32 	%r218, 126;
	sub.s32 	%r219, %r218, %r392;
	shl.b32 	%r220, %r219, 23;
	add.s32 	%r221, %r391, 1;
	shr.u32 	%r222, %r221, 7;
	add.s32 	%r223, %r222, 1;
	shr.u32 	%r224, %r223, 1;
	add.s32 	%r225, %r224, %r220;
	or.b32  	%r226, %r225, %r389;
	mov.b32 	 %f276, %r226;

BB0_18:
	mul.rn.f32 	%f13, %f276, %f276;
	add.s32 	%r39, %r393, 1;
	and.b32  	%r40, %r39, 1;
	setp.eq.s32	%p14, %r40, 0;
	@%p14 bra 	BB0_20;

	mov.f32 	%f156, 0fBAB6061A;
	mov.f32 	%f157, 0f37CCF5CE;
	fma.rn.f32 	%f277, %f157, %f13, %f156;
	bra.uni 	BB0_21;

BB0_20:
	mov.f32 	%f158, 0f3C08839E;
	mov.f32 	%f159, 0fB94CA1F9;
	fma.rn.f32 	%f277, %f159, %f13, %f158;

BB0_21:
	@%p14 bra 	BB0_23;

	mov.f32 	%f160, 0f3D2AAAA5;
	fma.rn.f32 	%f161, %f277, %f13, %f160;
	mov.f32 	%f162, 0fBF000000;
	fma.rn.f32 	%f278, %f161, %f13, %f162;
	bra.uni 	BB0_24;

BB0_23:
	mov.f32 	%f163, 0fBE2AAAA3;
	fma.rn.f32 	%f164, %f277, %f13, %f163;
	mov.f32 	%f165, 0f00000000;
	fma.rn.f32 	%f278, %f164, %f13, %f165;

BB0_24:
	fma.rn.f32 	%f279, %f278, %f276, %f276;
	@%p14 bra 	BB0_26;

	mov.f32 	%f166, 0f3F800000;
	fma.rn.f32 	%f279, %f278, %f13, %f166;

BB0_26:
	and.b32  	%r227, %r39, 2;
	setp.eq.s32	%p17, %r227, 0;
	@%p17 bra 	BB0_28;

	mov.f32 	%f167, 0f00000000;
	mov.f32 	%f168, 0fBF800000;
	fma.rn.f32 	%f279, %f279, %f168, %f167;

BB0_28:
	@%p5 bra 	BB0_30;

	mov.f32 	%f169, 0f00000000;
	mul.rn.f32 	%f281, %f281, %f169;

BB0_30:
	mul.f32 	%f170, %f281, 0f3F22F983;
	cvt.rni.s32.f32	%r403, %f170;
	cvt.rn.f32.s32	%f171, %r403;
	neg.f32 	%f172, %f171;
	fma.rn.f32 	%f174, %f172, %f150, %f281;
	fma.rn.f32 	%f176, %f172, %f152, %f174;
	fma.rn.f32 	%f282, %f172, %f154, %f176;
	abs.f32 	%f178, %f281;
	setp.leu.f32	%p19, %f178, 0f47CE4780;
	@%p19 bra 	BB0_41;

	mov.b32 	 %r42, %f281;
	shr.u32 	%r43, %r42, 23;
	shl.b32 	%r230, %r42, 8;
	or.b32  	%r44, %r230, -2147483648;
	mov.u32 	%r395, 0;
	mov.u64 	%rd79, __cudart_i2opi_f;
	mov.u32 	%r394, -6;
	mov.u64 	%rd80, %rd5;

BB0_32:
	.pragma "nounroll";
	ld.const.u32 	%r233, [%rd79];
	// inline asm
	{
	mad.lo.cc.u32   %r231, %r233, %r44, %r395;
	madc.hi.u32     %r395, %r233, %r44,  0;
	}
	// inline asm
	st.local.u32 	[%rd80], %r231;
	add.s64 	%rd80, %rd80, 4;
	add.s64 	%rd79, %rd79, 4;
	add.s32 	%r394, %r394, 1;
	setp.ne.s32	%p20, %r394, 0;
	@%p20 bra 	BB0_32;

	and.b32  	%r236, %r43, 255;
	add.s32 	%r237, %r236, -128;
	shr.u32 	%r238, %r237, 5;
	and.b32  	%r49, %r42, -2147483648;
	st.local.u32 	[%rd6], %r395;
	mov.u32 	%r239, 6;
	sub.s32 	%r240, %r239, %r238;
	mul.wide.s32 	%rd57, %r240, 4;
	add.s64 	%rd16, %rd5, %rd57;
	ld.local.u32 	%r396, [%rd16];
	ld.local.u32 	%r397, [%rd16+-4];
	and.b32  	%r52, %r43, 31;
	setp.eq.s32	%p21, %r52, 0;
	@%p21 bra 	BB0_35;

	sub.s32 	%r242, %r151, %r52;
	shr.u32 	%r243, %r397, %r242;
	shl.b32 	%r244, %r396, %r52;
	add.s32 	%r396, %r243, %r244;
	ld.local.u32 	%r245, [%rd16+-8];
	shr.u32 	%r246, %r245, %r242;
	shl.b32 	%r247, %r397, %r52;
	add.s32 	%r397, %r246, %r247;

BB0_35:
	shr.u32 	%r248, %r397, 30;
	shl.b32 	%r249, %r396, 2;
	add.s32 	%r398, %r248, %r249;
	shl.b32 	%r58, %r397, 2;
	shr.u32 	%r250, %r398, 31;
	shr.u32 	%r251, %r396, 30;
	add.s32 	%r59, %r250, %r251;
	setp.eq.s32	%p22, %r250, 0;
	@%p22 bra 	BB0_36;

	not.b32 	%r252, %r398;
	neg.s32 	%r400, %r58;
	setp.eq.s32	%p23, %r58, 0;
	selp.u32	%r253, 1, 0, %p23;
	add.s32 	%r398, %r253, %r252;
	xor.b32  	%r399, %r49, -2147483648;
	bra.uni 	BB0_38;

BB0_36:
	mov.u32 	%r399, %r49;
	mov.u32 	%r400, %r58;

BB0_38:
	clz.b32 	%r402, %r398;
	setp.eq.s32	%p24, %r402, 0;
	shl.b32 	%r254, %r398, %r402;
	sub.s32 	%r256, %r151, %r402;
	shr.u32 	%r257, %r400, %r256;
	add.s32 	%r258, %r257, %r254;
	selp.b32	%r67, %r398, %r258, %p24;
	mov.u32 	%r259, -921707870;
	mul.hi.u32 	%r401, %r67, %r259;
	setp.eq.s32	%p25, %r49, 0;
	neg.s32 	%r260, %r59;
	selp.b32	%r403, %r59, %r260, %p25;
	setp.lt.s32	%p26, %r401, 1;
	@%p26 bra 	BB0_40;

	mul.lo.s32 	%r261, %r67, -921707870;
	shr.u32 	%r262, %r261, 31;
	shl.b32 	%r263, %r401, 1;
	add.s32 	%r401, %r262, %r263;
	add.s32 	%r402, %r402, 1;

BB0_40:
	mov.u32 	%r264, 126;
	sub.s32 	%r265, %r264, %r402;
	shl.b32 	%r266, %r265, 23;
	add.s32 	%r267, %r401, 1;
	shr.u32 	%r268, %r267, 7;
	add.s32 	%r269, %r268, 1;
	shr.u32 	%r270, %r269, 1;
	add.s32 	%r271, %r270, %r266;
	or.b32  	%r272, %r271, %r399;
	mov.b32 	 %f282, %r272;

BB0_41:
	mul.rn.f32 	%f30, %f282, %f282;
	and.b32  	%r75, %r403, 1;
	setp.eq.s32	%p27, %r75, 0;
	@%p27 bra 	BB0_43;

	mov.f32 	%f179, 0fBAB6061A;
	mov.f32 	%f180, 0f37CCF5CE;
	fma.rn.f32 	%f283, %f180, %f30, %f179;
	bra.uni 	BB0_44;

BB0_43:
	mov.f32 	%f181, 0f3C08839E;
	mov.f32 	%f182, 0fB94CA1F9;
	fma.rn.f32 	%f283, %f182, %f30, %f181;

BB0_44:
	@%p27 bra 	BB0_46;

	mov.f32 	%f183, 0f3D2AAAA5;
	fma.rn.f32 	%f184, %f283, %f30, %f183;
	mov.f32 	%f185, 0fBF000000;
	fma.rn.f32 	%f284, %f184, %f30, %f185;
	bra.uni 	BB0_47;

BB0_46:
	mov.f32 	%f186, 0fBE2AAAA3;
	fma.rn.f32 	%f187, %f283, %f30, %f186;
	mov.f32 	%f188, 0f00000000;
	fma.rn.f32 	%f284, %f187, %f30, %f188;

BB0_47:
	fma.rn.f32 	%f285, %f284, %f282, %f282;
	@%p27 bra 	BB0_49;

	mov.f32 	%f189, 0f3F800000;
	fma.rn.f32 	%f285, %f284, %f30, %f189;

BB0_49:
	and.b32  	%r273, %r403, 2;
	setp.eq.s32	%p30, %r273, 0;
	@%p30 bra 	BB0_51;

	mov.f32 	%f190, 0f00000000;
	mov.f32 	%f191, 0fBF800000;
	fma.rn.f32 	%f285, %f285, %f191, %f190;

BB0_51:
	cvt.rn.f32.f64	%f192, %fd1;
	mul.f32 	%f193, %f192, %f285;
	mul.f32 	%f194, %f192, %f279;
	st.v2.f32 	[%rd46], {%f194, %f193};

BB0_52:
	ld.local.f32 	%f42, [%rd1+16];
	setp.leu.f32	%p31, %f42, 0f3DCCCCCD;
	@%p31 bra 	BB0_101;

	ld.global.f32 	%f195, [len];
	sub.f32 	%f196, %f42, %f195;
	ld.global.f32 	%f197, [maxextent];
	fma.rn.f32 	%f198, %f197, 0f3F000000, %f196;
	div.rn.f32 	%f199, %f198, %f197;
	ld.global.f32 	%f200, [fencengshu];
	mul.f32 	%f201, %f199, %f200;
	cvt.rmi.f32.f32	%f43, %f201;
	ld.global.f32 	%f202, [juli];
	ld.global.f32 	%f203, [z];
	fma.rn.f32 	%f204, %f43, %f202, %f203;
	cvt.f64.f32	%fd20, %f204;
	mul.f64 	%fd21, %fd20, 0d3F44F0520D130DFA;
	ld.global.v2.u32 	{%r276, %r277}, [launch_dim];
	cvt.rn.f64.u32	%fd22, %r276;
	div.rn.f64 	%fd23, %fd21, %fd22;
	div.rn.f64 	%fd24, %fd23, 0d3F80624DD2F1A9FC;
	cvt.rn.f32.f64	%f205, %fd24;
	cvt.rn.f64.u32	%fd25, %r277;
	div.rn.f64 	%fd26, %fd21, %fd25;
	div.rn.f64 	%fd27, %fd26, 0d3F80624DD2F1A9FC;
	cvt.rn.f32.f64	%f206, %fd27;
	ld.local.f32 	%f207, [%rd1+4];
	cvt.f64.f32	%fd28, %f207;
	ld.local.f32 	%f208, [%rd1+8];
	cvt.f64.f32	%fd29, %f208;
	mul.f64 	%fd30, %fd29, 0d3FE2E147AE147AE1;
	fma.rn.f64 	%fd31, %fd28, 0d3FD3333333333333, %fd30;
	ld.local.f32 	%f209, [%rd1+12];
	cvt.f64.f32	%fd32, %f209;
	fma.rn.f64 	%fd2, %fd32, 0d3FBC28F5C28F5C29, %fd31;
	ld.global.v2.u32 	{%r280, %r281}, [launch_index];
	shr.u32 	%r284, %r276, 1;
	sub.s32 	%r285, %r280, %r284;
	shr.u32 	%r286, %r277, 1;
	sub.s32 	%r287, %r281, %r286;
	mov.f64 	%fd33, 0d40B3346B9BAEE9CE;
	div.rn.f64 	%fd34, %fd33, %fd20;
	cvt.rn.f32.s32	%f210, %r285;
	mul.f32 	%f211, %f205, %f210;
	mul.f32 	%f212, %f210, %f211;
	cvt.rn.f32.s32	%f213, %r287;
	mul.f32 	%f214, %f206, %f213;
	mul.f32 	%f215, %f213, %f214;
	mul.f32 	%f216, %f206, %f215;
	fma.rn.f32 	%f217, %f205, %f212, %f216;
	cvt.u64.u32	%rd60, %r280;
	cvt.u64.u32	%rd61, %r281;
	mov.u64 	%rd64, random;
	cvta.global.u64 	%rd59, %rd64;
	mov.u32 	%r274, 2;
	mov.u32 	%r275, 4;
	mov.u64 	%rd63, 0;
	// inline asm
	call (%rd58), _rt_buffer_get_64, (%rd59, %r274, %r275, %rd60, %rd61, %rd63, %rd63);
	// inline asm
	ld.f32 	%f218, [%rd58];
	add.f32 	%f219, %f218, %f217;
	cvt.f64.f32	%fd35, %f219;
	mul.f64 	%fd36, %fd34, %fd35;
	cvt.rn.f32.f64	%f293, %fd36;
	ld.global.f32 	%f220, [fencengshu];
	setp.geu.f32	%p32, %f43, %f220;
	@%p32 bra 	BB0_101;

	cvt.rzi.u32.f32	%r290, %f43;
	cvt.u64.u32	%rd69, %r290;
	mov.u64 	%rd71, complex;
	cvta.global.u64 	%rd66, %rd71;
	mov.u32 	%r288, 3;
	mov.u32 	%r289, 8;
	// inline asm
	call (%rd65), _rt_buffer_get_64, (%rd66, %r288, %r289, %rd2, %rd3, %rd69, %rd63);
	// inline asm
	add.u64 	%rd18, %SPL, 0;
	abs.f32 	%f45, %f293;
	setp.neu.f32	%p33, %f45, 0f7F800000;
	mov.f32 	%f287, %f293;
	@%p33 bra 	BB0_56;

	mov.f32 	%f221, 0f00000000;
	mul.rn.f32 	%f287, %f293, %f221;

BB0_56:
	mul.f32 	%f222, %f287, 0f3F22F983;
	cvt.rni.s32.f32	%r413, %f222;
	cvt.rn.f32.s32	%f223, %r413;
	neg.f32 	%f224, %f223;
	mov.f32 	%f225, 0f3FC90FDA;
	fma.rn.f32 	%f226, %f224, %f225, %f287;
	mov.f32 	%f227, 0f33A22168;
	fma.rn.f32 	%f228, %f224, %f227, %f226;
	mov.f32 	%f229, 0f27C234C5;
	fma.rn.f32 	%f288, %f224, %f229, %f228;
	abs.f32 	%f230, %f287;
	add.s64 	%rd19, %rd18, 24;
	setp.leu.f32	%p34, %f230, 0f47CE4780;
	@%p34 bra 	BB0_67;

	mov.b32 	 %r77, %f287;
	shr.u32 	%r78, %r77, 23;
	shl.b32 	%r293, %r77, 8;
	or.b32  	%r79, %r293, -2147483648;
	mov.u32 	%r405, 0;
	mov.u64 	%rd81, __cudart_i2opi_f;
	mov.u32 	%r404, -6;
	mov.u64 	%rd82, %rd18;

BB0_58:
	.pragma "nounroll";
	ld.const.u32 	%r296, [%rd81];
	// inline asm
	{
	mad.lo.cc.u32   %r294, %r296, %r79, %r405;
	madc.hi.u32     %r405, %r296, %r79,  0;
	}
	// inline asm
	st.local.u32 	[%rd82], %r294;
	add.s64 	%rd82, %rd82, 4;
	add.s64 	%rd81, %rd81, 4;
	add.s32 	%r404, %r404, 1;
	setp.ne.s32	%p35, %r404, 0;
	@%p35 bra 	BB0_58;

	and.b32  	%r299, %r78, 255;
	add.s32 	%r300, %r299, -128;
	shr.u32 	%r301, %r300, 5;
	and.b32  	%r84, %r77, -2147483648;
	st.local.u32 	[%rd19], %r405;
	mov.u32 	%r302, 6;
	sub.s32 	%r303, %r302, %r301;
	mul.wide.s32 	%rd74, %r303, 4;
	add.s64 	%rd24, %rd18, %rd74;
	ld.local.u32 	%r406, [%rd24];
	ld.local.u32 	%r407, [%rd24+-4];
	and.b32  	%r87, %r78, 31;
	setp.eq.s32	%p36, %r87, 0;
	@%p36 bra 	BB0_61;

	sub.s32 	%r305, %r151, %r87;
	shr.u32 	%r306, %r407, %r305;
	shl.b32 	%r307, %r406, %r87;
	add.s32 	%r406, %r306, %r307;
	ld.local.u32 	%r308, [%rd24+-8];
	shr.u32 	%r309, %r308, %r305;
	shl.b32 	%r310, %r407, %r87;
	add.s32 	%r407, %r309, %r310;

BB0_61:
	shr.u32 	%r311, %r407, 30;
	shl.b32 	%r312, %r406, 2;
	add.s32 	%r408, %r311, %r312;
	shl.b32 	%r93, %r407, 2;
	shr.u32 	%r313, %r408, 31;
	shr.u32 	%r314, %r406, 30;
	add.s32 	%r94, %r313, %r314;
	setp.eq.s32	%p37, %r313, 0;
	@%p37 bra 	BB0_62;

	not.b32 	%r315, %r408;
	neg.s32 	%r410, %r93;
	setp.eq.s32	%p38, %r93, 0;
	selp.u32	%r316, 1, 0, %p38;
	add.s32 	%r408, %r316, %r315;
	xor.b32  	%r409, %r84, -2147483648;
	bra.uni 	BB0_64;

BB0_62:
	mov.u32 	%r409, %r84;
	mov.u32 	%r410, %r93;

BB0_64:
	clz.b32 	%r412, %r408;
	setp.eq.s32	%p39, %r412, 0;
	shl.b32 	%r317, %r408, %r412;
	sub.s32 	%r319, %r151, %r412;
	shr.u32 	%r320, %r410, %r319;
	add.s32 	%r321, %r320, %r317;
	selp.b32	%r102, %r408, %r321, %p39;
	mov.u32 	%r322, -921707870;
	mul.hi.u32 	%r411, %r102, %r322;
	setp.eq.s32	%p40, %r84, 0;
	neg.s32 	%r323, %r94;
	selp.b32	%r413, %r94, %r323, %p40;
	setp.lt.s32	%p41, %r411, 1;
	@%p41 bra 	BB0_66;

	mul.lo.s32 	%r324, %r102, -921707870;
	shr.u32 	%r325, %r324, 31;
	shl.b32 	%r326, %r411, 1;
	add.s32 	%r411, %r325, %r326;
	add.s32 	%r412, %r412, 1;

BB0_66:
	mov.u32 	%r327, 126;
	sub.s32 	%r328, %r327, %r412;
	shl.b32 	%r329, %r328, 23;
	add.s32 	%r330, %r411, 1;
	shr.u32 	%r331, %r330, 7;
	add.s32 	%r332, %r331, 1;
	shr.u32 	%r333, %r332, 1;
	add.s32 	%r334, %r333, %r329;
	or.b32  	%r335, %r334, %r409;
	mov.b32 	 %f288, %r335;

BB0_67:
	mul.rn.f32 	%f51, %f288, %f288;
	add.s32 	%r110, %r413, 1;
	and.b32  	%r111, %r110, 1;
	setp.eq.s32	%p42, %r111, 0;
	@%p42 bra 	BB0_69;

	mov.f32 	%f231, 0fBAB6061A;
	mov.f32 	%f232, 0f37CCF5CE;
	fma.rn.f32 	%f289, %f232, %f51, %f231;
	bra.uni 	BB0_70;

BB0_69:
	mov.f32 	%f233, 0f3C08839E;
	mov.f32 	%f234, 0fB94CA1F9;
	fma.rn.f32 	%f289, %f234, %f51, %f233;

BB0_70:
	@%p42 bra 	BB0_72;

	mov.f32 	%f235, 0f3D2AAAA5;
	fma.rn.f32 	%f236, %f289, %f51, %f235;
	mov.f32 	%f237, 0fBF000000;
	fma.rn.f32 	%f290, %f236, %f51, %f237;
	bra.uni 	BB0_73;

BB0_72:
	mov.f32 	%f238, 0fBE2AAAA3;
	fma.rn.f32 	%f239, %f289, %f51, %f238;
	mov.f32 	%f240, 0f00000000;
	fma.rn.f32 	%f290, %f239, %f51, %f240;

BB0_73:
	fma.rn.f32 	%f291, %f290, %f288, %f288;
	@%p42 bra 	BB0_75;

	mov.f32 	%f241, 0f3F800000;
	fma.rn.f32 	%f291, %f290, %f51, %f241;

BB0_75:
	and.b32  	%r336, %r110, 2;
	setp.eq.s32	%p45, %r336, 0;
	@%p45 bra 	BB0_77;

	mov.f32 	%f242, 0f00000000;
	mov.f32 	%f243, 0fBF800000;
	fma.rn.f32 	%f291, %f291, %f243, %f242;

BB0_77:
	@%p33 bra 	BB0_79;

	mov.f32 	%f244, 0f00000000;
	mul.rn.f32 	%f293, %f293, %f244;

BB0_79:
	mul.f32 	%f245, %f293, 0f3F22F983;
	cvt.rni.s32.f32	%r423, %f245;
	cvt.rn.f32.s32	%f246, %r423;
	neg.f32 	%f247, %f246;
	fma.rn.f32 	%f249, %f247, %f225, %f293;
	fma.rn.f32 	%f251, %f247, %f227, %f249;
	fma.rn.f32 	%f294, %f247, %f229, %f251;
	abs.f32 	%f253, %f293;
	setp.leu.f32	%p47, %f253, 0f47CE4780;
	@%p47 bra 	BB0_90;

	mov.b32 	 %r113, %f293;
	shr.u32 	%r114, %r113, 23;
	shl.b32 	%r339, %r113, 8;
	or.b32  	%r115, %r339, -2147483648;
	mov.u64 	%rd83, __cudart_i2opi_f;
	mov.u32 	%r414, -6;
	mov.u64 	%rd84, %rd18;

BB0_81:
	.pragma "nounroll";
	ld.const.u32 	%r342, [%rd83];
	// inline asm
	{
	mad.lo.cc.u32   %r340, %r342, %r115, %r415;
	madc.hi.u32     %r415, %r342, %r115,  0;
	}
	// inline asm
	st.local.u32 	[%rd84], %r340;
	add.s64 	%rd84, %rd84, 4;
	add.s64 	%rd83, %rd83, 4;
	add.s32 	%r414, %r414, 1;
	setp.ne.s32	%p48, %r414, 0;
	@%p48 bra 	BB0_81;

	and.b32  	%r345, %r114, 255;
	add.s32 	%r346, %r345, -128;
	shr.u32 	%r347, %r346, 5;
	and.b32  	%r120, %r113, -2147483648;
	st.local.u32 	[%rd19], %r415;
	mov.u32 	%r348, 6;
	sub.s32 	%r349, %r348, %r347;
	mul.wide.s32 	%rd76, %r349, 4;
	add.s64 	%rd29, %rd18, %rd76;
	ld.local.u32 	%r416, [%rd29];
	ld.local.u32 	%r417, [%rd29+-4];
	and.b32  	%r123, %r114, 31;
	setp.eq.s32	%p49, %r123, 0;
	@%p49 bra 	BB0_84;

	sub.s32 	%r351, %r151, %r123;
	shr.u32 	%r352, %r417, %r351;
	shl.b32 	%r353, %r416, %r123;
	add.s32 	%r416, %r352, %r353;
	ld.local.u32 	%r354, [%rd29+-8];
	shr.u32 	%r355, %r354, %r351;
	shl.b32 	%r356, %r417, %r123;
	add.s32 	%r417, %r355, %r356;

BB0_84:
	shr.u32 	%r357, %r417, 30;
	shl.b32 	%r358, %r416, 2;
	add.s32 	%r418, %r357, %r358;
	shl.b32 	%r129, %r417, 2;
	shr.u32 	%r359, %r418, 31;
	shr.u32 	%r360, %r416, 30;
	add.s32 	%r130, %r359, %r360;
	setp.eq.s32	%p50, %r359, 0;
	@%p50 bra 	BB0_85;

	not.b32 	%r361, %r418;
	neg.s32 	%r420, %r129;
	setp.eq.s32	%p51, %r129, 0;
	selp.u32	%r362, 1, 0, %p51;
	add.s32 	%r418, %r362, %r361;
	xor.b32  	%r419, %r120, -2147483648;
	bra.uni 	BB0_87;

BB0_85:
	mov.u32 	%r419, %r120;
	mov.u32 	%r420, %r129;

BB0_87:
	clz.b32 	%r422, %r418;
	setp.eq.s32	%p52, %r422, 0;
	shl.b32 	%r363, %r418, %r422;
	sub.s32 	%r365, %r151, %r422;
	shr.u32 	%r366, %r420, %r365;
	add.s32 	%r367, %r366, %r363;
	selp.b32	%r138, %r418, %r367, %p52;
	mov.u32 	%r368, -921707870;
	mul.hi.u32 	%r421, %r138, %r368;
	setp.eq.s32	%p53, %r120, 0;
	neg.s32 	%r369, %r130;
	selp.b32	%r423, %r130, %r369, %p53;
	setp.lt.s32	%p54, %r421, 1;
	@%p54 bra 	BB0_89;

	mul.lo.s32 	%r370, %r138, -921707870;
	shr.u32 	%r371, %r370, 31;
	shl.b32 	%r372, %r421, 1;
	add.s32 	%r421, %r371, %r372;
	add.s32 	%r422, %r422, 1;

BB0_89:
	mov.u32 	%r373, 126;
	sub.s32 	%r374, %r373, %r422;
	shl.b32 	%r375, %r374, 23;
	add.s32 	%r376, %r421, 1;
	shr.u32 	%r377, %r376, 7;
	add.s32 	%r378, %r377, 1;
	shr.u32 	%r379, %r378, 1;
	add.s32 	%r380, %r379, %r375;
	or.b32  	%r381, %r380, %r419;
	mov.b32 	 %f294, %r381;

BB0_90:
	mul.rn.f32 	%f68, %f294, %f294;
	and.b32  	%r146, %r423, 1;
	setp.eq.s32	%p55, %r146, 0;
	@%p55 bra 	BB0_92;

	mov.f32 	%f254, 0fBAB6061A;
	mov.f32 	%f255, 0f37CCF5CE;
	fma.rn.f32 	%f295, %f255, %f68, %f254;
	bra.uni 	BB0_93;

BB0_92:
	mov.f32 	%f256, 0f3C08839E;
	mov.f32 	%f257, 0fB94CA1F9;
	fma.rn.f32 	%f295, %f257, %f68, %f256;

BB0_93:
	@%p55 bra 	BB0_95;

	mov.f32 	%f258, 0f3D2AAAA5;
	fma.rn.f32 	%f259, %f295, %f68, %f258;
	mov.f32 	%f260, 0fBF000000;
	fma.rn.f32 	%f296, %f259, %f68, %f260;
	bra.uni 	BB0_96;

BB0_95:
	mov.f32 	%f261, 0fBE2AAAA3;
	fma.rn.f32 	%f262, %f295, %f68, %f261;
	mov.f32 	%f263, 0f00000000;
	fma.rn.f32 	%f296, %f262, %f68, %f263;

BB0_96:
	fma.rn.f32 	%f297, %f296, %f294, %f294;
	@%p55 bra 	BB0_98;

	mov.f32 	%f264, 0f3F800000;
	fma.rn.f32 	%f297, %f296, %f68, %f264;

BB0_98:
	and.b32  	%r382, %r423, 2;
	setp.eq.s32	%p58, %r382, 0;
	@%p58 bra 	BB0_100;

	mov.f32 	%f265, 0f00000000;
	mov.f32 	%f266, 0fBF800000;
	fma.rn.f32 	%f297, %f297, %f266, %f265;

BB0_100:
	add.f64 	%fd37, %fd2, 0d3FC3333340000000;
	cvt.rn.f32.f64	%f267, %fd37;
	ld.v2.f32 	{%f268, %f269}, [%rd65];
	fma.rn.f32 	%f272, %f267, %f297, %f269;
	fma.rn.f32 	%f273, %f267, %f291, %f268;
	st.v2.f32 	[%rd65], {%f273, %f272};

BB0_101:
	ret;
}

	// .globl	_Z9exceptionv
.visible .entry _Z9exceptionv(

)
{
	.local .align 16 .b8 	__local_depot1[400];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<43>;
	.reg .f32 	%f<9>;
	.reg .b32 	%r<125>;
	.reg .f64 	%fd<9>;
	.reg .b64 	%rd<121>;


	mov.u64 	%SPL, __local_depot1;
	cvta.local.u64 	%SP, %SPL;
	// inline asm
	call (%r75), _rt_get_exception_code, ();
	// inline asm
	setp.eq.s32	%p1, %r75, 1020;
	@%p1 bra 	BB1_61;
	bra.uni 	BB1_1;

BB1_61:
	ld.volatile.global.u32 	%r72, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r73, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r74, [_ZN21rti_internal_register14reg_rayIndex_zE];
	// inline asm
	call (%r115), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p42, %r115, 0;
	@%p42 bra 	BB1_63;

	add.u64 	%rd108, %SP, 384;
	add.u64 	%rd109, %SPL, 384;
	st.local.v2.u32 	[%rd109], {%r72, %r73};
	st.local.u32 	[%rd109+8], %r74;
	mov.u64 	%rd110, $str;
	cvta.global.u64 	%rd111, %rd110;
	// Callseq Start 18
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd111;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd108;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r116, [retval0+0];
	
	//{
	}// Callseq End 18
	bra.uni 	BB1_63;

BB1_1:
	setp.eq.s32	%p2, %r75, 1005;
	@%p2 bra 	BB1_59;
	bra.uni 	BB1_2;

BB1_59:
	ld.volatile.global.u32 	%r69, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r70, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r71, [_ZN21rti_internal_register14reg_rayIndex_zE];
	// inline asm
	call (%r113), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p41, %r113, 0;
	@%p41 bra 	BB1_63;

	add.u64 	%rd104, %SP, 384;
	add.u64 	%rd105, %SPL, 384;
	st.local.v2.u32 	[%rd105], {%r69, %r70};
	st.local.u32 	[%rd105+8], %r71;
	mov.u64 	%rd106, $str1;
	cvta.global.u64 	%rd107, %rd106;
	// Callseq Start 17
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd107;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd104;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r114, [retval0+0];
	
	//{
	}// Callseq End 17
	bra.uni 	BB1_63;

BB1_2:
	setp.eq.s32	%p3, %r75, 1021;
	@%p3 bra 	BB1_53;
	bra.uni 	BB1_3;

BB1_53:
	ld.volatile.global.u32 	%r63, [_ZN21rti_internal_register21reg_exception_detail0E];
	ld.volatile.global.u32 	%r64, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r65, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r66, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd18, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	ld.volatile.global.u32 	%r67, [_ZN21rti_internal_register21reg_exception_detail2E];
	ld.volatile.global.u64 	%rd19, [_ZN21rti_internal_register24reg_exception_64_detail1E];
	mov.u64 	%rd120, 1;
	setp.lt.u32	%p38, %r63, 2;
	mov.u64 	%rd119, %rd120;
	@%p38 bra 	BB1_55;

	ld.volatile.global.u64 	%rd119, [_ZN21rti_internal_register24reg_exception_64_detail2E];

BB1_55:
	setp.lt.u32	%p39, %r63, 3;
	@%p39 bra 	BB1_57;

	ld.volatile.global.u64 	%rd120, [_ZN21rti_internal_register24reg_exception_64_detail3E];

BB1_57:
	ld.volatile.global.u32 	%r68, [_ZN21rti_internal_register21reg_exception_detail1E];
	ld.volatile.global.u64 	%rd24, [_ZN21rti_internal_register24reg_exception_64_detail4E];
	ld.volatile.global.u64 	%rd25, [_ZN21rti_internal_register24reg_exception_64_detail5E];
	ld.volatile.global.u64 	%rd26, [_ZN21rti_internal_register24reg_exception_64_detail6E];
	// inline asm
	call (%r111), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p40, %r111, 0;
	@%p40 bra 	BB1_63;

	add.u64 	%rd100, %SP, 296;
	add.u64 	%rd101, %SPL, 296;
	st.local.v2.u32 	[%rd101], {%r64, %r65};
	st.local.u32 	[%rd101+24], %r67;
	st.local.u32 	[%rd101+56], %r68;
	st.local.v2.u32 	[%rd101+8], {%r66, %r63};
	st.local.u64 	[%rd101+16], %rd18;
	st.local.u64 	[%rd101+32], %rd19;
	st.local.u64 	[%rd101+40], %rd119;
	st.local.u64 	[%rd101+48], %rd120;
	st.local.u64 	[%rd101+64], %rd24;
	st.local.u64 	[%rd101+72], %rd25;
	st.local.u64 	[%rd101+80], %rd26;
	mov.u64 	%rd102, $str2;
	cvta.global.u64 	%rd103, %rd102;
	// Callseq Start 16
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd103;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd100;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r112, [retval0+0];
	
	//{
	}// Callseq End 16

BB1_63:
	ld.global.v2.u32 	{%r119, %r120}, [launch_index];
	cvt.u64.u32	%rd114, %r119;
	cvt.u64.u32	%rd115, %r120;
	mov.u64 	%rd118, output_buffer;
	cvta.global.u64 	%rd113, %rd118;
	mov.u32 	%r117, 2;
	mov.u32 	%r118, 4;
	mov.u64 	%rd117, 0;
	// inline asm
	call (%rd112), _rt_buffer_get_64, (%rd113, %r117, %r118, %rd114, %rd115, %rd117, %rd117);
	// inline asm
	mov.u32 	%r123, 0;
	st.u32 	[%rd112], %r123;
	ret;

BB1_3:
	setp.eq.s32	%p4, %r75, 1006;
	add.u64 	%rd27, %SP, 272;
	add.u64 	%rd28, %SPL, 272;
	add.s64 	%rd1, %rd28, 4;
	@%p4 bra 	BB1_44;
	bra.uni 	BB1_4;

BB1_44:
	ld.volatile.global.u32 	%r104, [_ZN21rti_internal_register21reg_exception_detail1E];
	setp.eq.s32	%p32, %r104, 1;
	@%p32 bra 	BB1_51;

	setp.eq.s32	%p33, %r104, 2;
	@%p33 bra 	BB1_49;
	bra.uni 	BB1_46;

BB1_49:
	ld.volatile.global.u32 	%r56, [_ZN21rti_internal_register21reg_exception_detail0E];
	ld.volatile.global.u32 	%r57, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r58, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r59, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd16, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	// inline asm
	call (%r107), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p36, %r107, 0;
	@%p36 bra 	BB1_63;

	st.local.u32 	[%rd28], %r56;
	st.local.u32 	[%rd1], %r57;
	st.local.v2.u32 	[%rd1+4], {%r58, %r59};
	st.local.u64 	[%rd1+12], %rd16;
	mov.u64 	%rd92, $str4;
	cvta.global.u64 	%rd93, %rd92;
	// Callseq Start 14
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd93;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r108, [retval0+0];
	
	//{
	}// Callseq End 14
	bra.uni 	BB1_63;

BB1_4:
	setp.eq.s32	%p5, %r75, 1007;
	add.u64 	%rd29, %SP, 256;
	add.u64 	%rd30, %SPL, 256;
	add.s64 	%rd2, %rd30, 4;
	@%p5 bra 	BB1_35;
	bra.uni 	BB1_5;

BB1_35:
	ld.volatile.global.u32 	%r97, [_ZN21rti_internal_register21reg_exception_detail1E];
	setp.eq.s32	%p26, %r97, 1;
	@%p26 bra 	BB1_42;

	setp.eq.s32	%p27, %r97, 2;
	@%p27 bra 	BB1_40;
	bra.uni 	BB1_37;

BB1_40:
	ld.volatile.global.u32 	%r45, [_ZN21rti_internal_register21reg_exception_detail0E];
	ld.volatile.global.u32 	%r46, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r47, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r48, [_ZN21rti_internal_register14reg_rayIndex_zE];
	// inline asm
	call (%r100), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p30, %r100, 0;
	@%p30 bra 	BB1_63;

	st.local.u32 	[%rd30], %r45;
	st.local.u32 	[%rd2], %r46;
	st.local.v2.u32 	[%rd2+4], {%r47, %r48};
	mov.u64 	%rd80, $str7;
	cvta.global.u64 	%rd81, %rd80;
	// Callseq Start 11
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd81;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd29;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r101, [retval0+0];
	
	//{
	}// Callseq End 11
	bra.uni 	BB1_63;

BB1_5:
	setp.eq.s32	%p6, %r75, 1018;
	@%p6 bra 	BB1_26;
	bra.uni 	BB1_6;

BB1_26:
	ld.volatile.global.u32 	%r90, [_ZN21rti_internal_register21reg_exception_detail1E];
	setp.eq.s32	%p20, %r90, 1;
	@%p20 bra 	BB1_33;

	setp.eq.s32	%p21, %r90, 2;
	@%p21 bra 	BB1_31;
	bra.uni 	BB1_28;

BB1_31:
	ld.volatile.global.u32 	%r35, [_ZN21rti_internal_register21reg_exception_detail0E];
	ld.volatile.global.u32 	%r36, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r37, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r38, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd13, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	// inline asm
	call (%r93), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p24, %r93, 0;
	@%p24 bra 	BB1_63;

	mov.u64 	%rd64, $str11;
	cvta.global.u64 	%rd65, %rd64;
	add.u64 	%rd66, %SP, 224;
	add.u64 	%rd67, %SPL, 224;
	st.local.u64 	[%rd67], %rd65;
	st.local.u64 	[%rd67+24], %rd13;
	st.local.v2.u32 	[%rd67+8], {%r35, %r36};
	st.local.v2.u32 	[%rd67+16], {%r37, %r38};
	mov.u64 	%rd68, $str10;
	cvta.global.u64 	%rd69, %rd68;
	// Callseq Start 8
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd69;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd66;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r94, [retval0+0];
	
	//{
	}// Callseq End 8
	bra.uni 	BB1_63;

BB1_51:
	ld.volatile.global.u32 	%r60, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r61, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r62, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd17, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	// inline asm
	call (%r109), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p37, %r109, 0;
	@%p37 bra 	BB1_63;

	st.local.u32 	[%rd28], %r60;
	st.local.u32 	[%rd1], %r61;
	st.local.u32 	[%rd1+4], %r62;
	st.local.u64 	[%rd1+12], %rd17;
	mov.u64 	%rd96, $str3;
	cvta.global.u64 	%rd97, %rd96;
	// Callseq Start 15
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd97;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r110, [retval0+0];
	
	//{
	}// Callseq End 15
	bra.uni 	BB1_63;

BB1_46:
	setp.ne.s32	%p34, %r104, 3;
	@%p34 bra 	BB1_63;

	ld.volatile.global.u32 	%r52, [_ZN21rti_internal_register21reg_exception_detail0E];
	ld.volatile.global.u32 	%r53, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r54, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r55, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd15, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	// inline asm
	call (%r105), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p35, %r105, 0;
	@%p35 bra 	BB1_63;

	st.local.u32 	[%rd28], %r52;
	st.local.u32 	[%rd1], %r53;
	st.local.v2.u32 	[%rd1+4], {%r54, %r55};
	st.local.u64 	[%rd1+12], %rd15;
	mov.u64 	%rd88, $str5;
	cvta.global.u64 	%rd89, %rd88;
	// Callseq Start 13
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd89;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r106, [retval0+0];
	
	//{
	}// Callseq End 13
	bra.uni 	BB1_63;

BB1_6:
	setp.eq.s32	%p7, %r75, 1019;
	@%p7 bra 	BB1_24;
	bra.uni 	BB1_7;

BB1_24:
	ld.volatile.global.u32 	%r28, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r29, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r30, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd9, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	ld.volatile.global.u64 	%rd10, [_ZN21rti_internal_register24reg_exception_64_detail1E];
	ld.volatile.global.u64 	%rd11, [_ZN21rti_internal_register24reg_exception_64_detail2E];
	// inline asm
	call (%r88), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p19, %r88, 0;
	@%p19 bra 	BB1_63;

	add.u64 	%rd56, %SP, 176;
	add.u64 	%rd57, %SPL, 176;
	st.local.v2.u32 	[%rd57], {%r28, %r29};
	st.local.u32 	[%rd57+8], %r30;
	st.local.u64 	[%rd57+16], %rd9;
	st.local.u64 	[%rd57+24], %rd10;
	st.local.u64 	[%rd57+32], %rd11;
	mov.u64 	%rd58, $str13;
	cvta.global.u64 	%rd59, %rd58;
	// Callseq Start 6
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd59;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd56;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r89, [retval0+0];
	
	//{
	}// Callseq End 6
	bra.uni 	BB1_63;

BB1_42:
	ld.volatile.global.u32 	%r49, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r50, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r51, [_ZN21rti_internal_register14reg_rayIndex_zE];
	// inline asm
	call (%r102), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p31, %r102, 0;
	@%p31 bra 	BB1_63;

	add.u64 	%rd82, %SP, 384;
	add.u64 	%rd83, %SPL, 384;
	st.local.v2.u32 	[%rd83], {%r49, %r50};
	st.local.u32 	[%rd83+8], %r51;
	mov.u64 	%rd84, $str6;
	cvta.global.u64 	%rd85, %rd84;
	// Callseq Start 12
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd85;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd82;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r103, [retval0+0];
	
	//{
	}// Callseq End 12
	bra.uni 	BB1_63;

BB1_37:
	setp.ne.s32	%p28, %r97, 3;
	@%p28 bra 	BB1_63;

	ld.volatile.global.u32 	%r42, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r43, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r44, [_ZN21rti_internal_register14reg_rayIndex_zE];
	// inline asm
	call (%r98), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p29, %r98, 0;
	@%p29 bra 	BB1_63;

	add.u64 	%rd74, %SP, 384;
	add.u64 	%rd75, %SPL, 384;
	st.local.v2.u32 	[%rd75], {%r42, %r43};
	st.local.u32 	[%rd75+8], %r44;
	mov.u64 	%rd76, $str8;
	cvta.global.u64 	%rd77, %rd76;
	// Callseq Start 10
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd77;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd74;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r99, [retval0+0];
	
	//{
	}// Callseq End 10
	bra.uni 	BB1_63;

BB1_7:
	setp.eq.s32	%p8, %r75, 1022;
	@%p8 bra 	BB1_22;
	bra.uni 	BB1_8;

BB1_22:
	ld.volatile.global.u32 	%r16, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r17, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r18, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd8, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	ld.volatile.global.u32 	%r19, [_ZN21rti_internal_register21reg_exception_detail0E];
	ld.volatile.global.u32 	%r20, [_ZN21rti_internal_register21reg_exception_detail1E];
	ld.volatile.global.u32 	%r21, [_ZN21rti_internal_register21reg_exception_detail2E];
	ld.volatile.global.u32 	%r22, [_ZN21rti_internal_register21reg_exception_detail3E];
	ld.volatile.global.u32 	%r23, [_ZN21rti_internal_register21reg_exception_detail4E];
	ld.volatile.global.u32 	%r24, [_ZN21rti_internal_register21reg_exception_detail5E];
	ld.volatile.global.u32 	%r25, [_ZN21rti_internal_register21reg_exception_detail6E];
	ld.volatile.global.u32 	%r26, [_ZN21rti_internal_register21reg_exception_detail7E];
	ld.volatile.global.u32 	%r27, [_ZN21rti_internal_register21reg_exception_detail8E];
	// inline asm
	call (%r86), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p18, %r86, 0;
	@%p18 bra 	BB1_63;

	mov.b32 	 %f1, %r19;
	cvt.f64.f32	%fd1, %f1;
	mov.b32 	 %f2, %r20;
	mov.b32 	 %f3, %r21;
	mov.b32 	 %f4, %r22;
	mov.b32 	 %f5, %r23;
	mov.b32 	 %f6, %r24;
	cvt.f64.f32	%fd2, %f6;
	mov.b32 	 %f7, %r26;
	mov.b32 	 %f8, %r27;
	add.u64 	%rd51, %SP, 80;
	add.u64 	%rd52, %SPL, 80;
	st.local.v2.u32 	[%rd52], {%r16, %r17};
	st.local.u32 	[%rd52+8], %r18;
	mov.b64 	 %rd53, %fd1;
	st.local.u32 	[%rd52+72], %r25;
	st.local.v2.u64 	[%rd52+16], {%rd8, %rd53};
	cvt.f64.f32	%fd3, %f3;
	cvt.f64.f32	%fd4, %f2;
	st.local.v2.f64 	[%rd52+32], {%fd4, %fd3};
	cvt.f64.f32	%fd5, %f5;
	cvt.f64.f32	%fd6, %f4;
	st.local.v2.f64 	[%rd52+48], {%fd6, %fd5};
	st.local.f64 	[%rd52+64], %fd2;
	cvt.f64.f32	%fd7, %f8;
	cvt.f64.f32	%fd8, %f7;
	st.local.v2.f64 	[%rd52+80], {%fd8, %fd7};
	mov.u64 	%rd54, $str14;
	cvta.global.u64 	%rd55, %rd54;
	// Callseq Start 5
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd55;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd51;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r87, [retval0+0];
	
	//{
	}// Callseq End 5
	bra.uni 	BB1_63;

BB1_33:
	ld.volatile.global.u32 	%r39, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r40, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r41, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd14, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	// inline asm
	call (%r95), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p25, %r95, 0;
	@%p25 bra 	BB1_63;

	st.local.u32 	[%rd28], %r39;
	st.local.u32 	[%rd1], %r40;
	st.local.u32 	[%rd1+4], %r41;
	st.local.u64 	[%rd1+12], %rd14;
	mov.u64 	%rd72, $str9;
	cvta.global.u64 	%rd73, %rd72;
	// Callseq Start 9
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd73;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r96, [retval0+0];
	
	//{
	}// Callseq End 9
	bra.uni 	BB1_63;

BB1_28:
	setp.ne.s32	%p22, %r90, 3;
	@%p22 bra 	BB1_63;

	ld.volatile.global.u32 	%r31, [_ZN21rti_internal_register21reg_exception_detail0E];
	ld.volatile.global.u32 	%r32, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r33, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r34, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd12, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	// inline asm
	call (%r91), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p23, %r91, 0;
	@%p23 bra 	BB1_63;

	st.local.u32 	[%rd28], %r31;
	st.local.u32 	[%rd1], %r32;
	st.local.v2.u32 	[%rd1+4], {%r33, %r34};
	st.local.u64 	[%rd1+12], %rd12;
	mov.u64 	%rd62, $str12;
	cvta.global.u64 	%rd63, %rd62;
	// Callseq Start 7
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd63;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r92, [retval0+0];
	
	//{
	}// Callseq End 7
	bra.uni 	BB1_63;

BB1_8:
	setp.eq.s32	%p9, %r75, 1003;
	@%p9 bra 	BB1_20;
	bra.uni 	BB1_9;

BB1_20:
	ld.volatile.global.u32 	%r13, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r14, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r15, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd4, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	ld.volatile.global.u64 	%rd5, [_ZN21rti_internal_register24reg_exception_64_detail1E];
	ld.volatile.global.u64 	%rd6, [_ZN21rti_internal_register24reg_exception_64_detail2E];
	ld.volatile.global.u64 	%rd7, [_ZN21rti_internal_register24reg_exception_64_detail3E];
	// inline asm
	call (%r84), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p17, %r84, 0;
	@%p17 bra 	BB1_63;

	add.u64 	%rd47, %SP, 32;
	add.u64 	%rd48, %SPL, 32;
	st.local.v2.u32 	[%rd48], {%r13, %r14};
	st.local.u32 	[%rd48+8], %r15;
	st.local.v2.u64 	[%rd48+16], {%rd4, %rd5};
	st.local.v2.u64 	[%rd48+32], {%rd6, %rd7};
	mov.u64 	%rd49, $str15;
	cvta.global.u64 	%rd50, %rd49;
	// Callseq Start 4
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd50;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd47;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r85, [retval0+0];
	
	//{
	}// Callseq End 4
	bra.uni 	BB1_63;

BB1_9:
	setp.eq.s32	%p10, %r75, 1004;
	@%p10 bra 	BB1_18;
	bra.uni 	BB1_10;

BB1_18:
	ld.volatile.global.u32 	%r9, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r10, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r11, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd3, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	ld.volatile.global.u32 	%r12, [_ZN21rti_internal_register21reg_exception_detail0E];
	// inline asm
	call (%r82), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p16, %r82, 0;
	@%p16 bra 	BB1_63;

	add.u64 	%rd43, %SP, 0;
	add.u64 	%rd44, %SPL, 0;
	st.local.v2.u32 	[%rd44], {%r9, %r10};
	st.local.u32 	[%rd44+8], %r11;
	st.local.u32 	[%rd44+24], %r12;
	st.local.u64 	[%rd44+16], %rd3;
	mov.u64 	%rd45, $str16;
	cvta.global.u64 	%rd46, %rd45;
	// Callseq Start 3
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd46;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd43;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r83, [retval0+0];
	
	//{
	}// Callseq End 3
	bra.uni 	BB1_63;

BB1_10:
	add.s32 	%r2, %r75, -1024;
	setp.lt.u32	%p11, %r2, 64512;
	@%p11 bra 	BB1_16;
	bra.uni 	BB1_11;

BB1_16:
	ld.volatile.global.u32 	%r6, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r7, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r8, [_ZN21rti_internal_register14reg_rayIndex_zE];
	// inline asm
	call (%r80), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p15, %r80, 0;
	@%p15 bra 	BB1_63;

	add.s32 	%r124, %r75, -1024;
	st.local.u32 	[%rd30], %r124;
	st.local.u32 	[%rd2], %r6;
	st.local.v2.u32 	[%rd2+4], {%r7, %r8};
	mov.u64 	%rd41, $str17;
	cvta.global.u64 	%rd42, %rd41;
	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd42;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd29;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r81, [retval0+0];
	
	//{
	}// Callseq End 2
	bra.uni 	BB1_63;

BB1_11:
	setp.eq.s32	%p12, %r75, 1023;
	ld.volatile.global.u32 	%r3, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r4, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r5, [_ZN21rti_internal_register14reg_rayIndex_zE];
	@%p12 bra 	BB1_14;
	bra.uni 	BB1_12;

BB1_14:
	// inline asm
	call (%r78), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p14, %r78, 0;
	@%p14 bra 	BB1_63;

	add.u64 	%rd35, %SP, 384;
	add.u64 	%rd36, %SPL, 384;
	st.local.v2.u32 	[%rd36], {%r3, %r4};
	st.local.u32 	[%rd36+8], %r5;
	mov.u64 	%rd37, $str18;
	cvta.global.u64 	%rd38, %rd37;
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd38;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd35;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r79, [retval0+0];
	
	//{
	}// Callseq End 1
	bra.uni 	BB1_63;

BB1_12:
	// inline asm
	call (%r76), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p13, %r76, 0;
	@%p13 bra 	BB1_63;

	add.u64 	%rd31, %SP, 384;
	add.u64 	%rd32, %SPL, 384;
	st.local.v2.u32 	[%rd32], {%r3, %r4};
	st.local.u32 	[%rd32+8], %r5;
	mov.u64 	%rd33, $str19;
	cvta.global.u64 	%rd34, %rd33;
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd34;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd31;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r77, [retval0+0];
	
	//{
	}// Callseq End 0
	bra.uni 	BB1_63;
}

	// .globl	_Z11closest_hitv
.visible .entry _Z11closest_hitv(

)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<106>;
	.reg .b32 	%r<14>;
	.reg .b64 	%rd<25>;


	ld.global.f32 	%f33, [shading_normal];
	ld.global.f32 	%f34, [shading_normal+4];
	ld.global.f32 	%f35, [shading_normal+8];
	mov.u32 	%r3, 7937;
	mov.f32 	%f36, 0f00000000;
	// inline asm
	call (%f29, %f30, %f31, %f32), _rt_transform_tuple, (%r3, %f33, %f34, %f35, %f36);
	// inline asm
	mul.f32 	%f37, %f30, %f30;
	fma.rn.f32 	%f38, %f29, %f29, %f37;
	fma.rn.f32 	%f39, %f31, %f31, %f38;
	sqrt.rn.f32 	%f40, %f39;
	rcp.rn.f32 	%f41, %f40;
	mul.f32 	%f42, %f29, %f41;
	mul.f32 	%f43, %f30, %f41;
	mul.f32 	%f44, %f31, %f41;
	ld.global.f32 	%f45, [ray+12];
	mul.f32 	%f46, %f45, %f42;
	ld.global.f32 	%f47, [ray+16];
	mul.f32 	%f48, %f43, %f47;
	neg.f32 	%f49, %f48;
	sub.f32 	%f50, %f49, %f46;
	ld.global.f32 	%f51, [ray+20];
	mul.f32 	%f52, %f44, %f51;
	sub.f32 	%f53, %f50, %f52;
	mov.b32 	 %r6, %f53;
	and.b32  	%r7, %r6, -2147483648;
	or.b32  	%r8, %r7, 1065353216;
	mov.b32 	 %f54, %r8;
	mul.f32 	%f1, %f42, %f54;
	mul.f32 	%f2, %f43, %f54;
	mul.f32 	%f3, %f44, %f54;
	ld.global.f32 	%f55, [ambient_light_color];
	ld.global.f32 	%f56, [Ka];
	mul.f32 	%f99, %f56, %f55;
	ld.global.f32 	%f57, [ambient_light_color+4];
	ld.global.f32 	%f58, [Ka+4];
	mul.f32 	%f98, %f58, %f57;
	ld.global.f32 	%f59, [ambient_light_color+8];
	ld.global.f32 	%f60, [Ka+8];
	mul.f32 	%f97, %f60, %f59;
	ld.global.f32 	%f61, [t_hit];
	ld.global.f32 	%f62, [ray];
	fma.rn.f32 	%f7, %f61, %f45, %f62;
	ld.global.f32 	%f63, [ray+4];
	fma.rn.f32 	%f8, %f61, %f47, %f63;
	ld.global.f32 	%f64, [ray+8];
	fma.rn.f32 	%f9, %f61, %f51, %f64;
	mov.u64 	%rd9, lights;
	cvta.global.u64 	%rd7, %rd9;
	mov.u32 	%r4, 1;
	mov.u32 	%r5, 32;
	// inline asm
	call (%rd3, %rd4, %rd5, %rd6), _rt_buffer_get_size_64, (%rd7, %r4, %r5);
	// inline asm
	cvt.u32.u64	%r9, %rd3;
	setp.eq.s32	%p1, %r9, 0;
	mov.u64 	%rd8, 0;
	@%p1 bra 	BB2_5;

	mov.u64 	%rd24, %rd8;

BB2_2:
	// inline asm
	call (%rd10), _rt_buffer_get_64, (%rd7, %r4, %r5, %rd24, %rd8, %rd8, %rd8);
	// inline asm
	ld.f32 	%f13, [%rd10];
	ld.f32 	%f14, [%rd10+4];
	ld.f32 	%f15, [%rd10+8];
	ld.f32 	%f16, [%rd10+12];
	ld.f32 	%f17, [%rd10+16];
	ld.f32 	%f18, [%rd10+20];
	sub.f32 	%f65, %f13, %f7;
	sub.f32 	%f66, %f14, %f8;
	sub.f32 	%f67, %f15, %f9;
	mul.f32 	%f68, %f66, %f66;
	fma.rn.f32 	%f69, %f65, %f65, %f68;
	fma.rn.f32 	%f70, %f67, %f67, %f69;
	sqrt.rn.f32 	%f71, %f70;
	rcp.rn.f32 	%f72, %f71;
	mul.f32 	%f73, %f65, %f72;
	mul.f32 	%f74, %f66, %f72;
	mul.f32 	%f75, %f67, %f72;
	mul.f32 	%f76, %f2, %f74;
	fma.rn.f32 	%f77, %f1, %f73, %f76;
	fma.rn.f32 	%f19, %f3, %f75, %f77;
	setp.leu.f32	%p2, %f19, 0f00000000;
	@%p2 bra 	BB2_4;

	ld.global.f32 	%f78, [Kd];
	mul.f32 	%f79, %f19, %f78;
	ld.global.f32 	%f80, [Kd+4];
	mul.f32 	%f81, %f19, %f80;
	ld.global.f32 	%f82, [Kd+8];
	mul.f32 	%f83, %f19, %f82;
	fma.rn.f32 	%f99, %f16, %f79, %f99;
	fma.rn.f32 	%f98, %f17, %f81, %f98;
	fma.rn.f32 	%f97, %f18, %f83, %f97;

BB2_4:
	// inline asm
	call (%rd17, %rd18, %rd19, %rd20), _rt_buffer_get_size_64, (%rd7, %r4, %r5);
	// inline asm
	and.b64  	%rd23, %rd17, 4294967295;
	add.s64 	%rd24, %rd24, 1;
	setp.lt.u64	%p3, %rd24, %rd23;
	@%p3 bra 	BB2_2;

BB2_5:
	st.global.f32 	[prd_radiance], %f99;
	st.global.f32 	[prd_radiance+4], %f98;
	st.global.f32 	[prd_radiance+8], %f97;
	ld.global.f32 	%f84, [ray+12];
	ld.global.f32 	%f85, [t_hit];
	mul.f32 	%f86, %f85, %f84;
	ld.global.f32 	%f87, [ray+16];
	mul.f32 	%f88, %f85, %f87;
	ld.global.f32 	%f89, [ray+20];
	mul.f32 	%f90, %f85, %f89;
	ld.global.f32 	%f91, [l1];
	ld.global.f32 	%f92, [l1+4];
	mul.f32 	%f93, %f88, %f92;
	fma.rn.f32 	%f94, %f86, %f91, %f93;
	ld.global.f32 	%f95, [l1+8];
	fma.rn.f32 	%f96, %f90, %f95, %f94;
	st.global.f32 	[prd_radiance+12], %f96;
	ret;
}

	// .globl	_Z17plane_closest_hitv
.visible .entry _Z17plane_closest_hitv(

)
{
	.local .align 4 .b8 	__local_depot3[32];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<4>;
	.reg .f32 	%f<145>;
	.reg .b32 	%r<19>;
	.reg .f64 	%fd<5>;
	.reg .b64 	%rd<27>;


	mov.u64 	%SPL, __local_depot3;
	cvta.local.u64 	%SP, %SPL;
	ld.global.f32 	%f33, [shading_normal];
	ld.global.f32 	%f34, [shading_normal+4];
	ld.global.f32 	%f35, [shading_normal+8];
	mov.u32 	%r3, 7937;
	mov.f32 	%f36, 0f00000000;
	// inline asm
	call (%f29, %f30, %f31, %f32), _rt_transform_tuple, (%r3, %f33, %f34, %f35, %f36);
	// inline asm
	mul.f32 	%f37, %f30, %f30;
	fma.rn.f32 	%f38, %f29, %f29, %f37;
	fma.rn.f32 	%f39, %f31, %f31, %f38;
	sqrt.rn.f32 	%f40, %f39;
	rcp.rn.f32 	%f41, %f40;
	mul.f32 	%f42, %f29, %f41;
	mul.f32 	%f43, %f30, %f41;
	mul.f32 	%f44, %f31, %f41;
	ld.global.f32 	%f45, [ray+12];
	mul.f32 	%f46, %f45, %f42;
	ld.global.f32 	%f47, [ray+16];
	mul.f32 	%f48, %f43, %f47;
	neg.f32 	%f49, %f48;
	sub.f32 	%f50, %f49, %f46;
	ld.global.f32 	%f51, [ray+20];
	mul.f32 	%f52, %f44, %f51;
	sub.f32 	%f53, %f50, %f52;
	mov.b32 	 %r6, %f53;
	and.b32  	%r7, %r6, -2147483648;
	or.b32  	%r8, %r7, 1065353216;
	mov.b32 	 %f54, %r8;
	mul.f32 	%f1, %f42, %f54;
	mul.f32 	%f2, %f43, %f54;
	mul.f32 	%f3, %f44, %f54;
	ld.global.f32 	%f55, [ambient_light_color];
	ld.global.f32 	%f56, [Ka];
	mul.f32 	%f138, %f56, %f55;
	ld.global.f32 	%f57, [ambient_light_color+4];
	ld.global.f32 	%f58, [Ka+4];
	mul.f32 	%f137, %f58, %f57;
	ld.global.f32 	%f59, [ambient_light_color+8];
	ld.global.f32 	%f60, [Ka+8];
	mul.f32 	%f136, %f60, %f59;
	ld.global.f32 	%f61, [t_hit];
	ld.global.f32 	%f62, [ray];
	fma.rn.f32 	%f7, %f61, %f45, %f62;
	ld.global.f32 	%f63, [ray+4];
	fma.rn.f32 	%f8, %f61, %f47, %f63;
	ld.global.f32 	%f64, [ray+8];
	fma.rn.f32 	%f9, %f61, %f51, %f64;
	mov.u64 	%rd9, lights;
	cvta.global.u64 	%rd7, %rd9;
	mov.u32 	%r4, 1;
	mov.u32 	%r5, 32;
	// inline asm
	call (%rd3, %rd4, %rd5, %rd6), _rt_buffer_get_size_64, (%rd7, %r4, %r5);
	// inline asm
	cvt.u32.u64	%r9, %rd3;
	setp.eq.s32	%p1, %r9, 0;
	mov.u64 	%rd8, 0;
	@%p1 bra 	BB3_5;

	mov.u64 	%rd26, %rd8;

BB3_2:
	// inline asm
	call (%rd10), _rt_buffer_get_64, (%rd7, %r4, %r5, %rd26, %rd8, %rd8, %rd8);
	// inline asm
	ld.f32 	%f13, [%rd10];
	ld.f32 	%f14, [%rd10+4];
	ld.f32 	%f15, [%rd10+8];
	ld.f32 	%f16, [%rd10+12];
	ld.f32 	%f17, [%rd10+16];
	ld.f32 	%f18, [%rd10+20];
	sub.f32 	%f65, %f13, %f7;
	sub.f32 	%f66, %f14, %f8;
	sub.f32 	%f67, %f15, %f9;
	mul.f32 	%f68, %f66, %f66;
	fma.rn.f32 	%f69, %f65, %f65, %f68;
	fma.rn.f32 	%f70, %f67, %f67, %f69;
	sqrt.rn.f32 	%f71, %f70;
	rcp.rn.f32 	%f72, %f71;
	mul.f32 	%f73, %f65, %f72;
	mul.f32 	%f74, %f66, %f72;
	mul.f32 	%f75, %f67, %f72;
	mul.f32 	%f76, %f2, %f74;
	fma.rn.f32 	%f77, %f1, %f73, %f76;
	fma.rn.f32 	%f19, %f3, %f75, %f77;
	setp.leu.f32	%p2, %f19, 0f00000000;
	@%p2 bra 	BB3_4;

	ld.global.f32 	%f78, [Kd];
	mul.f32 	%f79, %f19, %f78;
	ld.global.f32 	%f80, [Kd+4];
	mul.f32 	%f81, %f19, %f80;
	ld.global.f32 	%f82, [Kd+8];
	mul.f32 	%f83, %f19, %f82;
	fma.rn.f32 	%f138, %f16, %f79, %f138;
	fma.rn.f32 	%f137, %f17, %f81, %f137;
	fma.rn.f32 	%f136, %f18, %f83, %f136;

BB3_4:
	// inline asm
	call (%rd17, %rd18, %rd19, %rd20), _rt_buffer_get_size_64, (%rd7, %r4, %r5);
	// inline asm
	and.b64  	%rd23, %rd17, 4294967295;
	add.s64 	%rd26, %rd26, 1;
	setp.lt.u64	%p3, %rd26, %rd23;
	@%p3 bra 	BB3_2;

BB3_5:
	ld.global.f32 	%f92, [ray+12];
	ld.global.f32 	%f93, [ray+16];
	mul.f32 	%f94, %f2, %f93;
	fma.rn.f32 	%f95, %f1, %f92, %f94;
	ld.global.f32 	%f96, [ray+20];
	fma.rn.f32 	%f97, %f3, %f96, %f95;
	add.f32 	%f98, %f1, %f1;
	mul.f32 	%f99, %f98, %f97;
	add.f32 	%f100, %f2, %f2;
	mul.f32 	%f101, %f100, %f97;
	add.f32 	%f102, %f3, %f3;
	mul.f32 	%f103, %f102, %f97;
	sub.f32 	%f87, %f92, %f99;
	sub.f32 	%f88, %f93, %f101;
	sub.f32 	%f89, %f96, %f103;
	ld.global.f32 	%f90, [scene_epsilon];
	mov.u32 	%r17, 0;
	add.u64 	%rd24, %SP, 0;
	add.u64 	%rd25, %SPL, 0;
	st.local.u32 	[%rd25+12], %r17;
	ld.global.u32 	%r14, [top_object];
	mov.u32 	%r16, 255;
	mov.f32 	%f91, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_mask_flags_64, (%r14, %f7, %f8, %f9, %f87, %f88, %f89, %r17, %f90, %f91, %r16, %r17, %rd24, %r5);
	// inline asm
	ld.global.f32 	%f104, [t_hit];
	cvt.f64.f32	%fd1, %f104;
	abs.f64 	%fd2, %fd1;
	cvt.rn.f32.f64	%f105, %fd2;
	ld.local.f32 	%f106, [%rd25+12];
	cvt.f64.f32	%fd3, %f106;
	abs.f64 	%fd4, %fd3;
	cvt.rn.f32.f64	%f107, %fd4;
	add.f32 	%f108, %f105, %f107;
	ld.global.f32 	%f109, [ray+12];
	mul.f32 	%f110, %f109, %f108;
	ld.global.f32 	%f111, [ray+16];
	mul.f32 	%f112, %f111, %f108;
	ld.global.f32 	%f113, [ray+20];
	mul.f32 	%f114, %f108, %f113;
	ld.global.f32 	%f115, [l1];
	ld.global.f32 	%f116, [l1+4];
	mul.f32 	%f117, %f112, %f116;
	fma.rn.f32 	%f118, %f110, %f115, %f117;
	ld.global.f32 	%f119, [l1+8];
	fma.rn.f32 	%f120, %f114, %f119, %f118;
	ld.local.f32 	%f121, [%rd25];
	ld.local.f32 	%f122, [%rd25+4];
	ld.local.f32 	%f123, [%rd25+8];
	st.global.f32 	[prd_radiance+28], %f120;
	mul.f32 	%f124, %f121, 0f3F4CCCCD;
	mul.f32 	%f125, %f122, 0f3F4CCCCD;
	mul.f32 	%f126, %f123, 0f3F4CCCCD;
	st.global.f32 	[prd_radiance+16], %f124;
	st.global.f32 	[prd_radiance+20], %f125;
	st.global.f32 	[prd_radiance+24], %f126;
	mul.f32 	%f127, %f138, 0f3E99999A;
	st.global.f32 	[prd_radiance], %f127;
	mul.f32 	%f128, %f137, 0f3E99999A;
	st.global.f32 	[prd_radiance+4], %f128;
	mul.f32 	%f129, %f136, 0f3E99999A;
	st.global.f32 	[prd_radiance+8], %f129;
	mul.f32 	%f130, %f104, %f109;
	mul.f32 	%f131, %f104, %f111;
	mul.f32 	%f132, %f104, %f113;
	mul.f32 	%f133, %f131, %f116;
	fma.rn.f32 	%f134, %f130, %f115, %f133;
	fma.rn.f32 	%f135, %f132, %f119, %f134;
	st.global.f32 	[prd_radiance+12], %f135;
	ret;
}

	// .globl	_Z18plane2_closest_hitv
.visible .entry _Z18plane2_closest_hitv(

)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<109>;
	.reg .b32 	%r<14>;
	.reg .b64 	%rd<25>;


	ld.global.f32 	%f33, [shading_normal];
	ld.global.f32 	%f34, [shading_normal+4];
	ld.global.f32 	%f35, [shading_normal+8];
	mov.u32 	%r3, 7937;
	mov.f32 	%f36, 0f00000000;
	// inline asm
	call (%f29, %f30, %f31, %f32), _rt_transform_tuple, (%r3, %f33, %f34, %f35, %f36);
	// inline asm
	mul.f32 	%f37, %f30, %f30;
	fma.rn.f32 	%f38, %f29, %f29, %f37;
	fma.rn.f32 	%f39, %f31, %f31, %f38;
	sqrt.rn.f32 	%f40, %f39;
	rcp.rn.f32 	%f41, %f40;
	mul.f32 	%f42, %f29, %f41;
	mul.f32 	%f43, %f30, %f41;
	mul.f32 	%f44, %f31, %f41;
	ld.global.f32 	%f45, [ray+12];
	mul.f32 	%f46, %f45, %f42;
	ld.global.f32 	%f47, [ray+16];
	mul.f32 	%f48, %f43, %f47;
	neg.f32 	%f49, %f48;
	sub.f32 	%f50, %f49, %f46;
	ld.global.f32 	%f51, [ray+20];
	mul.f32 	%f52, %f44, %f51;
	sub.f32 	%f53, %f50, %f52;
	mov.b32 	 %r6, %f53;
	and.b32  	%r7, %r6, -2147483648;
	or.b32  	%r8, %r7, 1065353216;
	mov.b32 	 %f54, %r8;
	mul.f32 	%f1, %f42, %f54;
	mul.f32 	%f2, %f43, %f54;
	mul.f32 	%f3, %f44, %f54;
	ld.global.f32 	%f55, [ambient_light_color];
	ld.global.f32 	%f56, [Ka];
	mul.f32 	%f102, %f56, %f55;
	ld.global.f32 	%f57, [ambient_light_color+4];
	ld.global.f32 	%f58, [Ka+4];
	mul.f32 	%f101, %f58, %f57;
	ld.global.f32 	%f59, [ambient_light_color+8];
	ld.global.f32 	%f60, [Ka+8];
	mul.f32 	%f100, %f60, %f59;
	ld.global.f32 	%f61, [t_hit];
	ld.global.f32 	%f62, [ray];
	fma.rn.f32 	%f7, %f61, %f45, %f62;
	ld.global.f32 	%f63, [ray+4];
	fma.rn.f32 	%f8, %f61, %f47, %f63;
	ld.global.f32 	%f64, [ray+8];
	fma.rn.f32 	%f9, %f61, %f51, %f64;
	mov.u64 	%rd9, lights;
	cvta.global.u64 	%rd7, %rd9;
	mov.u32 	%r4, 1;
	mov.u32 	%r5, 32;
	// inline asm
	call (%rd3, %rd4, %rd5, %rd6), _rt_buffer_get_size_64, (%rd7, %r4, %r5);
	// inline asm
	cvt.u32.u64	%r9, %rd3;
	setp.eq.s32	%p1, %r9, 0;
	mov.u64 	%rd8, 0;
	@%p1 bra 	BB4_5;

	mov.u64 	%rd24, %rd8;

BB4_2:
	// inline asm
	call (%rd10), _rt_buffer_get_64, (%rd7, %r4, %r5, %rd24, %rd8, %rd8, %rd8);
	// inline asm
	ld.f32 	%f13, [%rd10];
	ld.f32 	%f14, [%rd10+4];
	ld.f32 	%f15, [%rd10+8];
	ld.f32 	%f16, [%rd10+12];
	ld.f32 	%f17, [%rd10+16];
	ld.f32 	%f18, [%rd10+20];
	sub.f32 	%f65, %f13, %f7;
	sub.f32 	%f66, %f14, %f8;
	sub.f32 	%f67, %f15, %f9;
	mul.f32 	%f68, %f66, %f66;
	fma.rn.f32 	%f69, %f65, %f65, %f68;
	fma.rn.f32 	%f70, %f67, %f67, %f69;
	sqrt.rn.f32 	%f71, %f70;
	rcp.rn.f32 	%f72, %f71;
	mul.f32 	%f73, %f65, %f72;
	mul.f32 	%f74, %f66, %f72;
	mul.f32 	%f75, %f67, %f72;
	mul.f32 	%f76, %f2, %f74;
	fma.rn.f32 	%f77, %f1, %f73, %f76;
	fma.rn.f32 	%f19, %f3, %f75, %f77;
	setp.leu.f32	%p2, %f19, 0f00000000;
	@%p2 bra 	BB4_4;

	ld.global.f32 	%f78, [Kd];
	mul.f32 	%f79, %f19, %f78;
	ld.global.f32 	%f80, [Kd+4];
	mul.f32 	%f81, %f19, %f80;
	ld.global.f32 	%f82, [Kd+8];
	mul.f32 	%f83, %f19, %f82;
	fma.rn.f32 	%f102, %f16, %f79, %f102;
	fma.rn.f32 	%f101, %f17, %f81, %f101;
	fma.rn.f32 	%f100, %f18, %f83, %f100;

BB4_4:
	// inline asm
	call (%rd17, %rd18, %rd19, %rd20), _rt_buffer_get_size_64, (%rd7, %r4, %r5);
	// inline asm
	and.b64  	%rd23, %rd17, 4294967295;
	add.s64 	%rd24, %rd24, 1;
	setp.lt.u64	%p3, %rd24, %rd23;
	@%p3 bra 	BB4_2;

BB4_5:
	mul.f32 	%f84, %f102, 0f3F666666;
	st.global.f32 	[prd_radiance], %f84;
	mul.f32 	%f85, %f101, 0f3F666666;
	st.global.f32 	[prd_radiance+4], %f85;
	mul.f32 	%f86, %f100, 0f3F666666;
	st.global.f32 	[prd_radiance+8], %f86;
	ld.global.f32 	%f87, [ray+12];
	ld.global.f32 	%f88, [t_hit];
	mul.f32 	%f89, %f88, %f87;
	ld.global.f32 	%f90, [ray+16];
	mul.f32 	%f91, %f88, %f90;
	ld.global.f32 	%f92, [ray+20];
	mul.f32 	%f93, %f88, %f92;
	ld.global.f32 	%f94, [l1];
	ld.global.f32 	%f95, [l1+4];
	mul.f32 	%f96, %f91, %f95;
	fma.rn.f32 	%f97, %f89, %f94, %f96;
	ld.global.f32 	%f98, [l1+8];
	fma.rn.f32 	%f99, %f93, %f98, %f97;
	st.global.f32 	[prd_radiance+12], %f99;
	ret;
}

	// .globl	_Z4missv
.visible .entry _Z4missv(

)
{
	.reg .f32 	%f<4>;
	.reg .b32 	%r<2>;


	ld.global.f32 	%f1, [bg_color];
	ld.global.f32 	%f2, [bg_color+4];
	ld.global.f32 	%f3, [bg_color+8];
	st.global.f32 	[prd_radiance], %f1;
	st.global.f32 	[prd_radiance+4], %f2;
	st.global.f32 	[prd_radiance+8], %f3;
	mov.u32 	%r1, -1082130432;
	st.global.u32 	[prd_radiance+12], %r1;
	ret;
}

	// .globl	_Z4holov
.visible .entry _Z4holov(

)
{
	.local .align 4 .b8 	__local_depot6[28];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<39>;
	.reg .f32 	%f<162>;
	.reg .b32 	%r<227>;
	.reg .f64 	%fd<17>;
	.reg .b64 	%rd<56>;


	mov.u64 	%SPL, __local_depot6;
	ld.global.f32 	%f55, [fencengshu];
	mov.f32 	%f158, 0f00000000;
	setp.leu.f32	%p1, %f55, 0f00000000;
	mov.f32 	%f159, %f158;
	@%p1 bra 	BB6_49;

	ld.global.v2.u32 	{%r77, %r78}, [launch_index];
	mov.u32 	%r206, 0;
	ld.global.v2.u32 	{%r81, %r82}, [launch_dim];
	shr.u32 	%r84, %r81, 1;
	sub.s32 	%r85, %r77, %r84;
	mul.lo.s32 	%r86, %r85, %r85;
	cvt.rn.f64.s32	%fd2, %r86;
	mul.f64 	%fd3, %fd2, 0d3F80624DD2F1A9FC;
	shr.u32 	%r88, %r82, 1;
	sub.s32 	%r89, %r78, %r88;
	cvt.rn.f64.s32	%fd4, %r89;
	mul.f64 	%fd5, %fd4, 0d3F80624DD2F1A9FC;
	mul.f64 	%fd6, %fd4, %fd5;
	mul.f64 	%fd7, %fd6, 0d3F80624DD2F1A9FC;
	fma.rn.f64 	%fd1, %fd3, 0d3F80624DD2F1A9FC, %fd7;
	add.u64 	%rd1, %SPL, 0;
	add.s64 	%rd2, %rd1, 24;
	cvt.u64.u32	%rd3, %r77;
	cvt.u64.u32	%rd4, %r78;
	mov.f32 	%f143, 0f00000000;
	mov.f32 	%f158, %f143;
	mov.f32 	%f159, %f143;

BB6_2:
	ld.global.f32 	%f59, [juli];
	ld.global.f32 	%f60, [z];
	fma.rn.f32 	%f61, %f143, %f59, %f60;
	cvt.f64.f32	%fd8, %f61;
	mov.f64 	%fd9, 0d40B3346B9BAEE9CE;
	div.rn.f64 	%fd10, %fd9, %fd8;
	mul.f64 	%fd11, %fd1, %fd10;
	cvt.rn.f32.f64	%f152, %fd11;
	abs.f32 	%f5, %f152;
	setp.neu.f32	%p2, %f5, 0f7F800000;
	mov.f32 	%f146, %f152;
	@%p2 bra 	BB6_4;

	mov.f32 	%f62, 0f00000000;
	mul.rn.f32 	%f146, %f152, %f62;

BB6_4:
	mul.f32 	%f63, %f146, 0f3F22F983;
	cvt.rni.s32.f32	%r216, %f63;
	cvt.rn.f32.s32	%f64, %r216;
	neg.f32 	%f65, %f64;
	mov.f32 	%f66, 0f3FC90FDA;
	fma.rn.f32 	%f67, %f65, %f66, %f146;
	mov.f32 	%f68, 0f33A22168;
	fma.rn.f32 	%f69, %f65, %f68, %f67;
	mov.f32 	%f70, 0f27C234C5;
	fma.rn.f32 	%f147, %f65, %f70, %f69;
	abs.f32 	%f71, %f146;
	setp.leu.f32	%p3, %f71, 0f47CE4780;
	@%p3 bra 	BB6_15;

	mov.b32 	 %r3, %f146;
	shr.u32 	%r4, %r3, 23;
	shl.b32 	%r92, %r3, 8;
	or.b32  	%r5, %r92, -2147483648;
	mov.u32 	%r208, 0;
	mov.u64 	%rd52, __cudart_i2opi_f;
	mov.u32 	%r207, -6;
	mov.u64 	%rd53, %rd1;

BB6_6:
	.pragma "nounroll";
	ld.const.u32 	%r95, [%rd52];
	// inline asm
	{
	mad.lo.cc.u32   %r93, %r95, %r5, %r208;
	madc.hi.u32     %r208, %r95, %r5,  0;
	}
	// inline asm
	st.local.u32 	[%rd53], %r93;
	add.s64 	%rd53, %rd53, 4;
	add.s64 	%rd52, %rd52, 4;
	add.s32 	%r207, %r207, 1;
	setp.ne.s32	%p4, %r207, 0;
	@%p4 bra 	BB6_6;

	and.b32  	%r98, %r4, 255;
	add.s32 	%r99, %r98, -128;
	shr.u32 	%r100, %r99, 5;
	and.b32  	%r10, %r3, -2147483648;
	st.local.u32 	[%rd2], %r208;
	mov.u32 	%r101, 6;
	sub.s32 	%r102, %r101, %r100;
	mul.wide.s32 	%rd17, %r102, 4;
	add.s64 	%rd9, %rd1, %rd17;
	ld.local.u32 	%r209, [%rd9];
	ld.local.u32 	%r210, [%rd9+-4];
	and.b32  	%r13, %r4, 31;
	setp.eq.s32	%p5, %r13, 0;
	@%p5 bra 	BB6_9;

	mov.u32 	%r103, 32;
	sub.s32 	%r104, %r103, %r13;
	shr.u32 	%r105, %r210, %r104;
	shl.b32 	%r106, %r209, %r13;
	add.s32 	%r209, %r105, %r106;
	ld.local.u32 	%r107, [%rd9+-8];
	shr.u32 	%r108, %r107, %r104;
	shl.b32 	%r109, %r210, %r13;
	add.s32 	%r210, %r108, %r109;

BB6_9:
	shr.u32 	%r110, %r210, 30;
	shl.b32 	%r111, %r209, 2;
	add.s32 	%r211, %r110, %r111;
	shl.b32 	%r19, %r210, 2;
	shr.u32 	%r112, %r211, 31;
	shr.u32 	%r113, %r209, 30;
	add.s32 	%r20, %r112, %r113;
	setp.eq.s32	%p6, %r112, 0;
	@%p6 bra 	BB6_10;
	bra.uni 	BB6_11;

BB6_10:
	mov.u32 	%r212, %r10;
	mov.u32 	%r213, %r19;
	bra.uni 	BB6_12;

BB6_11:
	not.b32 	%r114, %r211;
	neg.s32 	%r213, %r19;
	setp.eq.s32	%p7, %r19, 0;
	selp.u32	%r115, 1, 0, %p7;
	add.s32 	%r211, %r115, %r114;
	xor.b32  	%r212, %r10, -2147483648;

BB6_12:
	clz.b32 	%r215, %r211;
	setp.eq.s32	%p8, %r215, 0;
	shl.b32 	%r116, %r211, %r215;
	mov.u32 	%r117, 32;
	sub.s32 	%r118, %r117, %r215;
	shr.u32 	%r119, %r213, %r118;
	add.s32 	%r120, %r119, %r116;
	selp.b32	%r28, %r211, %r120, %p8;
	mov.u32 	%r121, -921707870;
	mul.hi.u32 	%r214, %r28, %r121;
	setp.eq.s32	%p9, %r10, 0;
	neg.s32 	%r122, %r20;
	selp.b32	%r216, %r20, %r122, %p9;
	setp.lt.s32	%p10, %r214, 1;
	@%p10 bra 	BB6_14;

	mul.lo.s32 	%r123, %r28, -921707870;
	shr.u32 	%r124, %r123, 31;
	shl.b32 	%r125, %r214, 1;
	add.s32 	%r214, %r124, %r125;
	add.s32 	%r215, %r215, 1;

BB6_14:
	mov.u32 	%r126, 126;
	sub.s32 	%r127, %r126, %r215;
	shl.b32 	%r128, %r127, 23;
	add.s32 	%r129, %r214, 1;
	shr.u32 	%r130, %r129, 7;
	add.s32 	%r131, %r130, 1;
	shr.u32 	%r132, %r131, 1;
	add.s32 	%r133, %r132, %r128;
	or.b32  	%r134, %r133, %r212;
	mov.b32 	 %f147, %r134;

BB6_15:
	mul.rn.f32 	%f11, %f147, %f147;
	add.s32 	%r36, %r216, 1;
	and.b32  	%r37, %r36, 1;
	setp.eq.s32	%p11, %r37, 0;
	@%p11 bra 	BB6_17;
	bra.uni 	BB6_16;

BB6_17:
	mov.f32 	%f74, 0f3C08839E;
	mov.f32 	%f75, 0fB94CA1F9;
	fma.rn.f32 	%f148, %f75, %f11, %f74;
	bra.uni 	BB6_18;

BB6_16:
	mov.f32 	%f72, 0fBAB6061A;
	mov.f32 	%f73, 0f37CCF5CE;
	fma.rn.f32 	%f148, %f73, %f11, %f72;

BB6_18:
	@%p11 bra 	BB6_20;
	bra.uni 	BB6_19;

BB6_20:
	mov.f32 	%f79, 0fBE2AAAA3;
	fma.rn.f32 	%f80, %f148, %f11, %f79;
	mov.f32 	%f81, 0f00000000;
	fma.rn.f32 	%f149, %f80, %f11, %f81;
	bra.uni 	BB6_21;

BB6_19:
	mov.f32 	%f76, 0f3D2AAAA5;
	fma.rn.f32 	%f77, %f148, %f11, %f76;
	mov.f32 	%f78, 0fBF000000;
	fma.rn.f32 	%f149, %f77, %f11, %f78;

BB6_21:
	fma.rn.f32 	%f150, %f149, %f147, %f147;
	@%p11 bra 	BB6_23;

	mov.f32 	%f82, 0f3F800000;
	fma.rn.f32 	%f150, %f149, %f11, %f82;

BB6_23:
	and.b32  	%r135, %r36, 2;
	setp.eq.s32	%p14, %r135, 0;
	@%p14 bra 	BB6_25;

	mov.f32 	%f83, 0f00000000;
	mov.f32 	%f84, 0fBF800000;
	fma.rn.f32 	%f150, %f150, %f84, %f83;

BB6_25:
	@%p2 bra 	BB6_27;

	mov.f32 	%f85, 0f00000000;
	mul.rn.f32 	%f152, %f152, %f85;

BB6_27:
	mul.f32 	%f86, %f152, 0f3F22F983;
	cvt.rni.s32.f32	%r226, %f86;
	cvt.rn.f32.s32	%f87, %r226;
	neg.f32 	%f88, %f87;
	fma.rn.f32 	%f90, %f88, %f66, %f152;
	fma.rn.f32 	%f92, %f88, %f68, %f90;
	fma.rn.f32 	%f153, %f88, %f70, %f92;
	abs.f32 	%f94, %f152;
	setp.leu.f32	%p16, %f94, 0f47CE4780;
	@%p16 bra 	BB6_38;

	mov.b32 	 %r39, %f152;
	shr.u32 	%r40, %r39, 23;
	shl.b32 	%r138, %r39, 8;
	or.b32  	%r41, %r138, -2147483648;
	mov.u32 	%r218, 0;
	mov.u64 	%rd54, __cudart_i2opi_f;
	mov.u32 	%r217, -6;
	mov.u64 	%rd55, %rd1;

BB6_29:
	.pragma "nounroll";
	ld.const.u32 	%r141, [%rd54];
	// inline asm
	{
	mad.lo.cc.u32   %r139, %r141, %r41, %r218;
	madc.hi.u32     %r218, %r141, %r41,  0;
	}
	// inline asm
	st.local.u32 	[%rd55], %r139;
	add.s64 	%rd55, %rd55, 4;
	add.s64 	%rd54, %rd54, 4;
	add.s32 	%r217, %r217, 1;
	setp.ne.s32	%p17, %r217, 0;
	@%p17 bra 	BB6_29;

	and.b32  	%r144, %r40, 255;
	add.s32 	%r145, %r144, -128;
	shr.u32 	%r146, %r145, 5;
	and.b32  	%r46, %r39, -2147483648;
	st.local.u32 	[%rd2], %r218;
	mov.u32 	%r147, 6;
	sub.s32 	%r148, %r147, %r146;
	mul.wide.s32 	%rd19, %r148, 4;
	add.s64 	%rd14, %rd1, %rd19;
	ld.local.u32 	%r219, [%rd14];
	ld.local.u32 	%r220, [%rd14+-4];
	and.b32  	%r49, %r40, 31;
	setp.eq.s32	%p18, %r49, 0;
	@%p18 bra 	BB6_32;

	mov.u32 	%r149, 32;
	sub.s32 	%r150, %r149, %r49;
	shr.u32 	%r151, %r220, %r150;
	shl.b32 	%r152, %r219, %r49;
	add.s32 	%r219, %r151, %r152;
	ld.local.u32 	%r153, [%rd14+-8];
	shr.u32 	%r154, %r153, %r150;
	shl.b32 	%r155, %r220, %r49;
	add.s32 	%r220, %r154, %r155;

BB6_32:
	shr.u32 	%r156, %r220, 30;
	shl.b32 	%r157, %r219, 2;
	add.s32 	%r221, %r156, %r157;
	shl.b32 	%r55, %r220, 2;
	shr.u32 	%r158, %r221, 31;
	shr.u32 	%r159, %r219, 30;
	add.s32 	%r56, %r158, %r159;
	setp.eq.s32	%p19, %r158, 0;
	@%p19 bra 	BB6_33;
	bra.uni 	BB6_34;

BB6_33:
	mov.u32 	%r222, %r46;
	mov.u32 	%r223, %r55;
	bra.uni 	BB6_35;

BB6_34:
	not.b32 	%r160, %r221;
	neg.s32 	%r223, %r55;
	setp.eq.s32	%p20, %r55, 0;
	selp.u32	%r161, 1, 0, %p20;
	add.s32 	%r221, %r161, %r160;
	xor.b32  	%r222, %r46, -2147483648;

BB6_35:
	clz.b32 	%r225, %r221;
	setp.eq.s32	%p21, %r225, 0;
	shl.b32 	%r162, %r221, %r225;
	mov.u32 	%r163, 32;
	sub.s32 	%r164, %r163, %r225;
	shr.u32 	%r165, %r223, %r164;
	add.s32 	%r166, %r165, %r162;
	selp.b32	%r64, %r221, %r166, %p21;
	mov.u32 	%r167, -921707870;
	mul.hi.u32 	%r224, %r64, %r167;
	setp.eq.s32	%p22, %r46, 0;
	neg.s32 	%r168, %r56;
	selp.b32	%r226, %r56, %r168, %p22;
	setp.lt.s32	%p23, %r224, 1;
	@%p23 bra 	BB6_37;

	mul.lo.s32 	%r169, %r64, -921707870;
	shr.u32 	%r170, %r169, 31;
	shl.b32 	%r171, %r224, 1;
	add.s32 	%r224, %r170, %r171;
	add.s32 	%r225, %r225, 1;

BB6_37:
	mov.u32 	%r172, 126;
	sub.s32 	%r173, %r172, %r225;
	shl.b32 	%r174, %r173, 23;
	add.s32 	%r175, %r224, 1;
	shr.u32 	%r176, %r175, 7;
	add.s32 	%r177, %r176, 1;
	shr.u32 	%r178, %r177, 1;
	add.s32 	%r179, %r178, %r174;
	or.b32  	%r180, %r179, %r222;
	mov.b32 	 %f153, %r180;

BB6_38:
	mul.rn.f32 	%f28, %f153, %f153;
	and.b32  	%r72, %r226, 1;
	setp.eq.s32	%p24, %r72, 0;
	@%p24 bra 	BB6_40;
	bra.uni 	BB6_39;

BB6_40:
	mov.f32 	%f97, 0f3C08839E;
	mov.f32 	%f98, 0fB94CA1F9;
	fma.rn.f32 	%f154, %f98, %f28, %f97;
	bra.uni 	BB6_41;

BB6_39:
	mov.f32 	%f95, 0fBAB6061A;
	mov.f32 	%f96, 0f37CCF5CE;
	fma.rn.f32 	%f154, %f96, %f28, %f95;

BB6_41:
	@%p24 bra 	BB6_43;
	bra.uni 	BB6_42;

BB6_43:
	mov.f32 	%f102, 0fBE2AAAA3;
	fma.rn.f32 	%f103, %f154, %f28, %f102;
	mov.f32 	%f104, 0f00000000;
	fma.rn.f32 	%f155, %f103, %f28, %f104;
	bra.uni 	BB6_44;

BB6_42:
	mov.f32 	%f99, 0f3D2AAAA5;
	fma.rn.f32 	%f100, %f154, %f28, %f99;
	mov.f32 	%f101, 0fBF000000;
	fma.rn.f32 	%f155, %f100, %f28, %f101;

BB6_44:
	fma.rn.f32 	%f156, %f155, %f153, %f153;
	@%p24 bra 	BB6_46;

	mov.f32 	%f105, 0f3F800000;
	fma.rn.f32 	%f156, %f155, %f28, %f105;

BB6_46:
	and.b32  	%r181, %r226, 2;
	setp.eq.s32	%p27, %r181, 0;
	@%p27 bra 	BB6_48;

	mov.f32 	%f106, 0f00000000;
	mov.f32 	%f107, 0fBF800000;
	fma.rn.f32 	%f156, %f156, %f107, %f106;

BB6_48:
	cvt.u64.u32	%rd42, %r206;
	mov.u64 	%rd44, complex;
	cvta.global.u64 	%rd21, %rd44;
	mov.u32 	%r188, 3;
	mov.u32 	%r189, 8;
	mov.u64 	%rd43, 0;
	// inline asm
	call (%rd20), _rt_buffer_get_64, (%rd21, %r188, %r189, %rd3, %rd4, %rd42, %rd43);
	// inline asm
	ld.f32 	%f108, [%rd20];
	fma.rn.f32 	%f109, %f150, %f108, %f158;
	// inline asm
	call (%rd26), _rt_buffer_get_64, (%rd21, %r188, %r189, %rd3, %rd4, %rd42, %rd43);
	// inline asm
	ld.f32 	%f110, [%rd26+4];
	mul.f32 	%f111, %f156, %f110;
	sub.f32 	%f158, %f109, %f111;
	// inline asm
	call (%rd32), _rt_buffer_get_64, (%rd21, %r188, %r189, %rd3, %rd4, %rd42, %rd43);
	// inline asm
	ld.f32 	%f112, [%rd32];
	fma.rn.f32 	%f113, %f156, %f112, %f159;
	// inline asm
	call (%rd38), _rt_buffer_get_64, (%rd21, %r188, %r189, %rd3, %rd4, %rd42, %rd43);
	// inline asm
	ld.f32 	%f114, [%rd38+4];
	fma.rn.f32 	%f159, %f150, %f114, %f113;
	add.s32 	%r206, %r206, 1;
	cvt.rn.f32.s32	%f143, %r206;
	ld.global.f32 	%f115, [fencengshu];
	setp.lt.f32	%p28, %f143, %f115;
	@%p28 bra 	BB6_2;

BB6_49:
	abs.f32 	%f45, %f158;
	setp.eq.f32	%p29, %f45, 0f00000000;
	abs.f32 	%f46, %f159;
	setp.eq.f32	%p30, %f46, 0f00000000;
	and.pred  	%p31, %p29, %p30;
	mov.b32 	 %r74, %f158;
	mov.b32 	 %r190, %f159;
	and.b32  	%r75, %r190, -2147483648;
	@%p31 bra 	BB6_53;
	bra.uni 	BB6_50;

BB6_53:
	shr.s32 	%r197, %r74, 31;
	and.b32  	%r198, %r197, 1078530011;
	or.b32  	%r199, %r198, %r75;
	mov.b32 	 %f160, %r199;
	bra.uni 	BB6_54;

BB6_50:
	setp.eq.f32	%p32, %f45, 0f7F800000;
	setp.eq.f32	%p33, %f46, 0f7F800000;
	and.pred  	%p34, %p32, %p33;
	@%p34 bra 	BB6_52;
	bra.uni 	BB6_51;

BB6_52:
	shr.s32 	%r193, %r74, 31;
	and.b32  	%r194, %r193, 13483017;
	add.s32 	%r195, %r194, 1061752795;
	or.b32  	%r196, %r195, %r75;
	mov.b32 	 %f160, %r196;
	bra.uni 	BB6_54;

BB6_51:
	max.f32 	%f116, %f46, %f45;
	min.f32 	%f117, %f46, %f45;
	div.rn.f32 	%f118, %f117, %f116;
	mul.rn.f32 	%f119, %f118, %f118;
	mov.f32 	%f120, 0fC0B59883;
	mov.f32 	%f121, 0fBF52C7EA;
	fma.rn.f32 	%f122, %f119, %f121, %f120;
	mov.f32 	%f123, 0fC0D21907;
	fma.rn.f32 	%f124, %f122, %f119, %f123;
	mul.f32 	%f125, %f119, %f124;
	mul.f32 	%f126, %f118, %f125;
	add.f32 	%f127, %f119, 0f41355DC0;
	mov.f32 	%f128, 0f41E6BD60;
	fma.rn.f32 	%f129, %f127, %f119, %f128;
	mov.f32 	%f130, 0f419D92C8;
	fma.rn.f32 	%f131, %f129, %f119, %f130;
	rcp.rn.f32 	%f132, %f131;
	fma.rn.f32 	%f133, %f126, %f132, %f118;
	mov.f32 	%f134, 0f3FC90FDB;
	sub.f32 	%f135, %f134, %f133;
	setp.gt.f32	%p35, %f46, %f45;
	selp.f32	%f136, %f135, %f133, %p35;
	mov.f32 	%f137, 0f40490FDB;
	sub.f32 	%f138, %f137, %f136;
	setp.lt.s32	%p36, %r74, 0;
	selp.f32	%f139, %f138, %f136, %p36;
	mov.b32 	 %r191, %f139;
	or.b32  	%r192, %r191, %r75;
	mov.b32 	 %f140, %r192;
	add.f32 	%f141, %f45, %f46;
	setp.gtu.f32	%p37, %f141, 0f7F800000;
	selp.f32	%f160, %f141, %f140, %p37;

BB6_54:
	setp.geu.f32	%p38, %f160, 0f00000000;
	@%p38 bra 	BB6_56;

	cvt.f64.f32	%fd12, %f160;
	add.f64 	%fd13, %fd12, 0d401921FB4D12D84A;
	cvt.rn.f32.f64	%f160, %fd13;

BB6_56:
	cvt.f64.f32	%fd14, %f160;
	mul.f64 	%fd15, %fd14, 0d3FE0000000000000;
	div.rn.f64 	%fd16, %fd15, 0d400921FB4D12D84A;
	cvt.rn.f32.f64	%f142, %fd16;
	ld.global.v2.u32 	{%r202, %r203}, [launch_index];
	cvt.u64.u32	%rd47, %r202;
	cvt.u64.u32	%rd48, %r203;
	mov.u64 	%rd51, output_buffer;
	cvta.global.u64 	%rd46, %rd51;
	mov.u32 	%r200, 2;
	mov.u32 	%r201, 4;
	mov.u64 	%rd50, 0;
	// inline asm
	call (%rd45), _rt_buffer_get_64, (%rd46, %r200, %r201, %rd47, %rd48, %rd50, %rd50);
	// inline asm
	st.f32 	[%rd45], %f142;
	ret;
}


